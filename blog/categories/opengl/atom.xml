<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OpenGL | Make Things Cool]]></title>
  <link href="http://markzhang.cn/blog/categories/opengl/atom.xml" rel="self"/>
  <link href="http://markzhang.cn/"/>
  <updated>2015-12-30T09:25:23+08:00</updated>
  <id>http://markzhang.cn/</id>
  <author>
    <name><![CDATA[Mark Zhang]]></name>
    <email><![CDATA[super119@139.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在Mavericks上使用Makefile编写wxWidgets程序]]></title>
    <link href="http://markzhang.cn/blog/2014/04/23/wxwidget-on-mavericks/"/>
    <updated>2014-04-23T23:31:00+08:00</updated>
    <id>http://markzhang.cn/blog/2014/04/23/wxwidget-on-mavericks</id>
    <content type="html"><![CDATA[<p>OpenGL的设计与操作系统无关，与窗口系统也无关，所以，要编写一个可以运行（能看到界面）的程序，还需要一些额外的GUI的框架，比如glut。</p>

<p>glut基本上是所有OpenGL教科书上的唯一推荐了，因为它的API简单，跨平台。所以读者不需要花额外的时间去了解并使用glut。但是glut比较老了，有点跟不上时代了。而且编译出来的东西是一个可执行文件，不是Mac OS X上的 <code>.app</code> 的那种Applicaiton。所以在StackOverflow上也有很多人推荐使用 <code>glfw</code>。我也去试用了一下，感觉还是太单薄了。</p>

<p>既然要编写一个像样的OpenGL程序，就选择一个像样的GUI framework library吧，于是我决定使用wxWidgets。</p>

<!-- more -->


<h2>wxWidgets的编译安装</h2>

<p>wxWidgets在Mac OS X Mavericks上的安装很简单，就是标准的configure/make/make install。只是configure需要指定一些option，否则wxWidgets无法找到一些必须的库。</p>

<p>结合了wxWidgets wiki上的一些内容，我的编译过程是这样的：</p>

<p><code>bash
cd &lt;root directory of wxWidgets source&gt;
mkdir build-release
cd build-release
../configure --with-osx_cocoa --with-macosx-version-min=10.7 --with-macosx-sdk=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk --prefix="$(pwd)" --with-opengl
make
</code></p>

<p>我安装的还是较老版本的Xcode，所以可以看到上面的命令行中，SDK用的还是10.8的，不过不妨碍了。</p>

<p>此外我没有执行make install，因为我也没打算给其他用户来使用。反正make过了之后，该有的东西（wx-config、wxWidgets的libraries）都有了。</p>

<p>还有一点：执行完configure之后，你会发现这样的一行：</p>

<p><code>bash
OpenGL support:   no
</code></p>

<p>但其实我们已经加了 <code>--with-opengl</code> 了，难道是configure没有找到Xcode中的OpenGL framework？经过一番Google，以及最后使用 <code>wx-config --libs</code> 来确认，其实OpenGL的支持已经有了，这个信息是一个错误信息。所以这应该算是一个bug了。</p>

<h2>第一个使用Makefile的程序</h2>

<p>接下来就是重头戏了，因为我不想使用Xcode来编写运行程序，太笨重了，而且写一个HelloWorld也需要在Xcode中建立一个Project，并且设置一堆东西。更何况使用Xcode，也无法详细了解整个编译过程。Linux程序员都懂的。</p>

<p>所以我想要的是一个Makefile，我执行make就可以编译，而且要生成Mac OS X上的applicaiton（.app），而不是像使用glut的时候，只是生成了一个可执行文件。执行这个文件是能看到一个界面，但是无法拖动，某些功能还不正常。</p>

<p>我看到wxWidgets自带的samples，就是可以通过make生成Mac OS X的 <code>.app</code> 应用的，所以这一定是可行的。于是Google了一下，果然发现wxWidgets的论坛上有答案：</p>

<p><a href="http://forums.wxwidgets.org/viewtopic.php?f=23&amp;t=3768">http://forums.wxwidgets.org/viewtopic.php?f=23&amp;t=3768</a></p>

<p>这个帖子中，帖子的作者Mark最后就给出了一个Makefile的template，使用这个Makefile就可以编译并最终生成一个 <code>.app</code>。</p>

<p>于是立刻把这个Makefile拿过来试验了一下，需要做两处小改动：</p>

<ul>
<li><p>OUTPUTPATH必须要设置，而不是像注释中说的那样可以留空。否则后续的 <code>mkdir -p</code> 这个命令会失败。</p></li>
<li><p>这个Makefile中所有的 <code>@echo</code> 命令要换成 <code>@/bin/echo</code>。因为这个Makefile中有三行这样的代码：<code>@echo -n xxxx</code>，<code>-n</code> 的意思是输出末尾不要加换行，但是Mavericks上，这个bash built-in的echo是没有 <code>-n</code> 这个option的，所以会导致最终生成的 <code>PkgInfo</code> 和 <code>Info.plist</code> 中有 <code>-n</code> 这样的字符串，从而导致最终的 <code>.app</code> 没法运行。在 <code>man echo</code> 中也提到了这个事情：</p></li>
</ul>


<blockquote><p>Some shells may provide a builtin echo command which is similar or identical to this utility. Most notably, the builtin echo in sh(1) does not accept the -n option. Consult the builtin(1) manual page.</p></blockquote>

<p>做完这两处小改动之后，输入make就可以生成 <code>.app</code> 了，Cool！</p>

<p>最后附上我的Makefile的模板：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Makefile模板 bash (wxwidgets-makefile-template)</span> <a href='/downloads/code/wxwidgets-makefile-template'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
</pre></td><td class='code'><pre><code class=''><span class='line'><span class="c">##############################################################</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  Makefile Template for wxMac Applications</span>
</span><span class='line'><span class="c">#  Mark Wilkinson</span>
</span><span class='line'><span class="c">#  August 2005</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  This makefile is designed for experienced UNIX </span>
</span><span class='line'><span class="c">#  developers who wish to learn how to build Mac OS X </span>
</span><span class='line'><span class="c">#  packages (.app) using Makefiles rather than Apple&#39;s </span>
</span><span class='line'><span class="c">#  Xcode IDE.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  Developed with the assistance of Kevin Hock, CHB, </span>
</span><span class='line'><span class="c">#    and DialogBlocks examples.</span>
</span><span class='line'><span class="c">#  Distribution of this file is subject to the terms of </span>
</span><span class='line'><span class="c">#    the wxWindows License, see www.wxwidgets.org</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  A Brief Tutorial on Packages</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  Rather than use resource forks on application</span>
</span><span class='line'><span class="c">#    files, as Apple did in their Classic operating</span>
</span><span class='line'><span class="c">#    system, Mac OS X uses application packages.</span>
</span><span class='line'><span class="c">#  Application packages have a .app extension and</span>
</span><span class='line'><span class="c">#    are actually directories which contain the</span>
</span><span class='line'><span class="c">#    true executable as well as several resource </span>
</span><span class='line'><span class="c">#    files.  The structure of an application</span>
</span><span class='line'><span class="c">#    package is:</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#    (program).app</span>
</span><span class='line'><span class="c">#     |</span>
</span><span class='line'><span class="c">#     +-- Contents</span>
</span><span class='line'><span class="c">#          |</span>
</span><span class='line'><span class="c">#          +--  Info.plist</span>
</span><span class='line'><span class="c">#          |</span>
</span><span class='line'><span class="c">#          +--  MacOS</span>
</span><span class='line'><span class="c">#          |     |</span>
</span><span class='line'><span class="c">#          |     +--  (program)</span>
</span><span class='line'><span class="c">#          |</span>
</span><span class='line'><span class="c">#          +--  PkgInfo</span>
</span><span class='line'><span class="c">#          |</span>
</span><span class='line'><span class="c">#          +--  Resources</span>
</span><span class='line'><span class="c">#                |</span>
</span><span class='line'><span class="c">#                +-- (icon file)</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#    In this diagram &quot;(program)&quot; is the name of </span>
</span><span class='line'><span class="c">#    the executable program.  &quot;Contents,&quot; &quot;MacOS,&quot; </span>
</span><span class='line'><span class="c">#    and &quot;Resouces,&quot; are directories.  &quot;Info.plist&quot;</span>
</span><span class='line'><span class="c">#    is an XML DTD file.  And &quot;PkgInfo&quot; is a text</span>
</span><span class='line'><span class="c">#    file containing data.</span>
</span><span class='line'><span class="c">#  This makefile generates the package directory</span>
</span><span class='line'><span class="c">#    structure, and it compiles and places the </span>
</span><span class='line'><span class="c">#    executabel in the MacOS directory.  This </span>
</span><span class='line'><span class="c">#    makefile also creates the &quot;PkgInfo&quot; and </span>
</span><span class='line'><span class="c">#    &quot;Info.plist&quot; files.  The PkgInfo file is very</span>
</span><span class='line'><span class="c">#    simple.  Info.plist is an XML DTD and contains</span>
</span><span class='line'><span class="c">#    several variables, which can be examined in</span>
</span><span class='line'><span class="c">#    this makefile.</span>
</span><span class='line'><span class="c">#  You need to supply the source code and the icon</span>
</span><span class='line'><span class="c">#    file.  The icon file is copied into the </span>
</span><span class='line'><span class="c">#    Resources directory of the package.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  These variables are used to compile the program.  You </span>
</span><span class='line'><span class="c">#    will need to provide this information.  You may need</span>
</span><span class='line'><span class="c">#    to specify the full path to the wx-config executable.</span>
</span><span class='line'><span class="c">#    The output path can&#39;t be blank.  The program name</span>
</span><span class='line'><span class="c">#    and object names are essential.  You may use the icon</span>
</span><span class='line'><span class="c">#    file included with the wxMac distribution </span>
</span><span class='line'><span class="c">#    (wxMac-2.6.1/src/mac/wxmac.icns) or create your own</span>
</span><span class='line'><span class="c">#    icon using the Apple Developer Tools </span>
</span><span class='line'><span class="c">#    (/Developer/Applications/Utilities/Icon Composer).</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'>
</span><span class='line'><span class="n">WXCONFIG</span><span class="p">=</span><span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">mark</span><span class="o">/</span><span class="n">Graphics</span><span class="o">/</span><span class="n">wxWidgets</span><span class="o">-</span><span class="mf">3.0</span><span class="p">.</span><span class="mi">0</span><span class="o">/</span><span class="n">build</span><span class="o">-</span><span class="n">release</span><span class="o">/</span><span class="n">wx</span><span class="o">-</span><span class="n">config</span>
</span><span class='line'>
</span><span class='line'><span class="c"># can&#39;t be blank, otherwise &quot;mkdir -p&quot; fails</span>
</span><span class='line'><span class="n">OUTPUTPATH</span><span class="p">=</span><span class="n">out</span>
</span><span class='line'>
</span><span class='line'><span class="n">PROGRAM</span><span class="p">=</span><span class="n">HelloWxGL</span>
</span><span class='line'><span class="n">PROGVER</span><span class="p">=</span><span class="mf">1.0</span>
</span><span class='line'>
</span><span class='line'><span class="n">OBJECTS</span><span class="p">=</span><span class="n">HelloWxGL</span><span class="p">.</span><span class="n">o</span>
</span><span class='line'>
</span><span class='line'><span class="n">ICONFILE</span><span class="p">=</span><span class="n">wxmac</span><span class="p">.</span><span class="n">icns</span>
</span><span class='line'>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  These variables are used in the Info.plist and PkgInfo</span>
</span><span class='line'><span class="c">#    files.  Aside from the company name (which should have</span>
</span><span class='line'><span class="c">#    no spaces, like a domain name), you should not have</span>
</span><span class='line'><span class="c">#    to modify these variables.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'>
</span><span class='line'><span class="n">COMPANY</span><span class="p">=</span><span class="n">markzhang</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUNDLEPACKAGE</span><span class="p">=</span><span class="n">APPL</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUNDLESIGNATURE</span><span class="p">=</span>????
</span><span class='line'>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  It should not be necessary to modify the Makefile</span>
</span><span class='line'><span class="c">#    below this line; although, you may have to make</span>
</span><span class='line'><span class="c">#    changes depending on your system configuration.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'>
</span><span class='line'><span class="n">CXX</span><span class="p">=</span><span class="n">g</span><span class="o">++</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUNDLE</span><span class="p">=</span>$<span class="p">(</span><span class="n">OUTPUTPATH</span><span class="p">)</span><span class="o">/</span>$<span class="p">(</span><span class="n">PROGRAM</span><span class="p">).</span><span class="n">app</span>
</span><span class='line'><span class="n">MACICON</span><span class="p">=</span>$<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span>$<span class="p">(</span><span class="n">ICONFILE</span><span class="p">)</span>
</span><span class='line'><span class="n">MACPKGINFO</span><span class="p">=</span>$<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">PkgInfo</span>
</span><span class='line'><span class="n">MACINFOPLIST</span><span class="p">=</span>$<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">Info</span><span class="p">.</span><span class="n">plist</span>
</span><span class='line'>
</span><span class='line'><span class="n">LIBS</span><span class="p">=</span>`$<span class="p">(</span><span class="n">WXCONFIG</span><span class="p">)</span> <span class="o">--</span><span class="n">libs</span>`
</span><span class='line'><span class="n">LINKERFLAGS</span><span class="p">=</span> <span class="o">-</span><span class="n">lstdc</span><span class="o">++</span>
</span><span class='line'><span class="n">WARNINGFLAGS</span><span class="p">=</span>
</span><span class='line'><span class="n">OPTFLAGS</span><span class="p">=</span>
</span><span class='line'><span class="n">DEBUGFLAGS</span><span class="p">=</span><span class="o">-</span><span class="n">g</span>
</span><span class='line'>
</span><span class='line'><span class="n">CPPINC</span><span class="p">=</span>`$<span class="p">(</span><span class="n">WXCONFIG</span><span class="p">)</span> <span class="o">--</span><span class="n">inplace</span> <span class="o">--</span><span class="n">cxxflags</span>`
</span><span class='line'><span class="n">LDFLAGS</span><span class="p">=</span>$<span class="p">(</span><span class="n">LIBS</span><span class="p">)</span> $<span class="p">(</span><span class="n">LINKERFLAGS</span><span class="p">)</span>
</span><span class='line'><span class="n">CPPFLAGS</span><span class="p">=</span>$<span class="p">(</span><span class="n">CPPINC</span><span class="p">)</span> $<span class="p">(</span><span class="n">GCCFLAGS</span><span class="p">)</span> $<span class="p">(</span><span class="n">DEBUGFLAGS</span><span class="p">)</span> $<span class="p">(</span><span class="n">OPTFLAGS</span><span class="p">)</span> $<span class="p">(</span><span class="n">WARNINGFLAGS</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">all</span><span class="p">:</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">MacOS</span><span class="o">/</span>$<span class="p">(</span><span class="n">PROGRAM</span><span class="p">)</span> $<span class="p">(</span><span class="n">MACICON</span><span class="p">)</span> $<span class="p">(</span><span class="n">MACPKGINFO</span><span class="p">)</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">clean</span><span class="p">:</span>
</span><span class='line'>	<span class="n">rm</span> <span class="o">-</span><span class="n">f</span> $<span class="p">(</span><span class="n">OBJECTS</span><span class="p">)</span>
</span><span class='line'>	<span class="n">rm</span> <span class="o">-</span><span class="n">fr</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">help</span><span class="p">:</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;Usage: make -f Makefile [all|clean|help]&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  This builds the bundle&#39;s directory structure.</span>
</span><span class='line'>$<span class="p">(</span><span class="n">BUNDLE</span><span class="p">):</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;==== Building bundle directory structure ====&quot;</span>
</span><span class='line'>	<span class="nb">mkdir</span> <span class="o">-</span><span class="n">p</span> $<span class="p">(</span><span class="n">OUTPUTPATH</span><span class="p">)</span>
</span><span class='line'>	<span class="nb">mkdir</span> <span class="o">-</span><span class="n">p</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span>
</span><span class='line'>	<span class="nb">mkdir</span> <span class="o">-</span><span class="n">p</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">MacOS</span>
</span><span class='line'>	<span class="nb">mkdir</span> <span class="o">-</span><span class="n">p</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">Resources</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  This builds the executable right inside the bundle.</span>
</span><span class='line'>$<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">MacOS</span><span class="o">/</span>$<span class="p">(</span><span class="n">PROGRAM</span><span class="p">):</span> $<span class="p">(</span><span class="n">OBJECTS</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;==== Building executable ====&quot;</span>
</span><span class='line'>	$<span class="p">(</span><span class="n">CXX</span><span class="p">)</span> <span class="o">-</span><span class="n">o</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">MacOS</span><span class="o">/</span>$<span class="p">(</span><span class="n">PROGRAM</span><span class="p">)</span> $<span class="p">(</span><span class="n">OBJECTS</span><span class="p">)</span> $<span class="p">(</span><span class="n">LDFLAGS</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  This copies the icon file into the bundle.</span>
</span><span class='line'>$<span class="p">(</span><span class="n">MACICON</span><span class="p">):</span> $<span class="p">(</span><span class="n">ICONFILE</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;==== Copying icon file into bundle ====&quot;</span>
</span><span class='line'>	<span class="n">cp</span> <span class="o">-</span><span class="n">f</span> $<span class="p">(</span><span class="n">ICONFILE</span><span class="p">)</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">Resources</span><span class="o">/</span>$<span class="p">(</span><span class="n">ICONFILE</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  NOTICE</span>
</span><span class='line'><span class="c">#  We need to use &quot;/bin/echo&quot;, since the &quot;echo&quot; is the builtin program</span>
</span><span class='line'><span class="c">#  which doesn&#39;t have &quot;-n&quot; option.</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  This creates the Contents/PkgInfo file.</span>
</span><span class='line'>$<span class="p">(</span><span class="n">MACPKGINFO</span><span class="p">):</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;==== Creating PkgInfo ====&quot;</span>
</span><span class='line'>	<span class="n">touch</span> $<span class="p">(</span><span class="n">MACPKGINFO</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="s">&quot;$(BUNDLEPACKAGE)$(BUNDLESIGNATURE)&quot;</span> <span class="o">&gt;</span> $<span class="p">(</span><span class="n">MACPKGINFO</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  This creates the Contents/Info.plist file.</span>
</span><span class='line'>$<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">):</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;==== Creating Info.plist ====&quot;</span>
</span><span class='line'>	<span class="n">touch</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;&lt;?xml version=\&quot;</span><span class="mf">1.0</span><span class="o">\</span><span class="s">&quot; encoding=\&quot;</span><span class="n">UTF</span><span class="o">-</span><span class="mi">8</span><span class="o">\</span><span class="s">&quot;?&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="s">&quot;&lt;!DOCTYPE plist PUBLIC &quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="s">&quot;\&quot;</span><span class="o">-//</span><span class="n">Apple</span> <span class="n">Computer</span><span class="o">//</span><span class="n">DTD</span> <span class="n">PLIST</span> <span class="mf">1.0</span><span class="o">//</span><span class="n">EN</span><span class="o">\</span><span class="s">&quot; &quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;\&quot;</span><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="p">.</span><span class="n">apple</span><span class="p">.</span><span class="n">com</span><span class="o">/</span><span class="n">DTDs</span><span class="o">/</span><span class="n">PropertyList</span><span class="o">-</span><span class="mf">1.0</span><span class="p">.</span><span class="n">dtd</span><span class="o">\</span><span class="s">&quot;&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;&lt;plist version=\&quot;</span><span class="mf">1.0</span><span class="o">\</span><span class="s">&quot;&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;&lt;dict&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleDevelopmentRegion&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;English&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleExecutable&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(PROGRAM)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleIconFile&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(ICONFILE)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleName&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(PROGRAM)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleIdentifier&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;com.$(COMPANY).$(PROGRAM)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleInfoDictionaryVersion&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;6.0&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundlePackageType&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(BUNDLEPACKAGE)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleSignature&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(BUNDLESIGNATURE)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleVersion&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(PROGVER)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleShortVersionString&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(PROGVER)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleGetInfoString&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(PROGRAM), Version $(PROGVER), $(COMPANY)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;&lt;/dict&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>	<span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;&lt;/plist&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>$<span class="p">(</span><span class="n">OBJECTS</span><span class="p">):</span> <span class="c">%.o: %.cpp</span>
</span><span class='line'>	$<span class="p">(</span><span class="n">CXX</span><span class="p">)</span> <span class="o">-</span><span class="n">c</span> <span class="o">-</span><span class="n">o</span> $<span class="p">@</span> $<span class="p">(</span><span class="n">CPPFLAGS</span><span class="p">)</span> $<span class="o">&lt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="n">PHONY</span><span class="p">:</span>    <span class="nb">all</span> <span class="n">clean</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img src="/downloads/image/hellowxgl.png" alt="wxWidgets HelloWorld" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenGL Programming on MacOS X (Mavericks)]]></title>
    <link href="http://markzhang.cn/blog/2014/01/06/hellogl-on-macosx/"/>
    <updated>2014-01-06T21:30:00+08:00</updated>
    <id>http://markzhang.cn/blog/2014/01/06/hellogl-on-macosx</id>
    <content type="html"><![CDATA[<p>最近开始看《OpenGL Programming Guide 8th Edition》一书。所以很自然的，就会想把书中的源代码在MacOS X Mavericks上试验一遍。很显然程序是没法在Mavericks上run的，所以就对程序做了一些修改。在试验的过程中，自然也发现了一些书中没有说到的内容，所以记录下来。</p>

<p>事实上，这本书中的代码是在Windows上测试的，所以MacOS X上就会有一些不同。尤其体现在一些第三方的framework/library上。</p>

<p>本文是在试验该书中第一个源程序的时候，发现的一些东西。和我们第一个编写的HelloWorld程序一样，我称该程序为HelloGL。</p>

<!-- more -->


<p>为了方便阅读，所有的代码在最后给出。系统的环境是Mavericks + Xcode 4.6.1。这里说一下我在原书给出的代码上，做出的一些修改：</p>

<h2>有关GLEW</h2>

<p>GLEW当然是可以使用的，只是不像GLUT，Mavericks没有自带GLEW，需要自己下载安装。不过安装也超级简单：</p>

<p><code>bash
make glew.lib
sudo make install
</code></p>

<p>我尝试过直接make，也就是编译所有的内容（其中包括glewinfo等实用程序），在Mavericks上会编译失败（提示缺少AGL/agl.h）。所以我只编译了glew的库，事实上我们也只需要库就可以了。</p>

<p>有了GLEW之后，只需要include一个 <code>GL/glew.h</code> 就搞定了。因为GLEW会将OpenGL中用到的所有的数据类型和函数都定义一遍，而且提供大量的宏，使我们可以查询一个具体的 <code>feature/函数</code> 在当前平台上是否存在。这也是GLEW的主要功能了。对于函数，GLEW会根据不同平台，去打开对应的库，取出对应函数的地址，从而让我们可以调用到该平台上正确的实现。参看书中的附录F：<code>OpenGL and Window Systems</code>，有详细的解释。</p>

<p>不过StackOverflow上说，其实在MacOS X中，GLEW并不需要。我试验了一下，的确是不需要（当然我只是用本文中的这个简单的程序试验了一下）。理由是：</p>

<blockquote><p>About glew, normally you don&rsquo;t require glew on MacOS due the way how the OpenGL layer is implemented in MacOS. You are restricted to the OpenGL features MacOS provides/exposes. So either the features are available via the headers of MacOS or not.</p>

<p>The header would be #include &lt;OpenGL/gl3.h> where also the naming is missleading, it does not mean only OpenGL 3, it is the same like with the context.</p></blockquote>

<h2>主程序的改动</h2>

<p>主要改动了以下几点：</p>

<ul>
<li><p>去掉了 <code>include "vgl.h"</code>。因为这个头文件中啥实在东西没有，唯一一个需要用到的就是一个 <code>BUFFER_OFFSET</code> 宏的定义，把它拿到主程序文件中来了。</p></li>
<li><p>代码中涉及的两个shader程序：<code>triangle.vert</code> 和 <code>triangle.frag</code>，改名成了 <code>simple.vert</code> 和 <code>simple.frag</code>。一来是感觉更贴切，二来是这两个shader程序在该书的源代码包中有，拷贝过来就能用了。</p></li>
<li><p>如上面所说，GLEW不是必须的，所以我去掉了GLEW相关的代码。</p></li>
<li><p>在main函数中增加了一行，用来打印当前GLSL的版本：</p></li>
</ul>


<p>``` cpp
cout &lt;&lt; &ldquo;Supported GLSL version is: &rdquo; &lt;&lt;</p>

<pre><code>glGetString(GL_SHADING_LANGUAGE_VERSION) &lt;&lt; endl;
</code></pre>

<p>```</p>

<p>因为后续也会提到，一开始运行程序的时候，会发现shader程序无法编译，所以增加了这一行打印，方便调试。这个也是来自StackOverflow上大佬们的建议。</p>

<ul>
<li>去掉了main函数中这两行代码：</li>
</ul>


<p><code>cpp
glutInitContextVersion(4, 3);
glutInitContextProfile(GLUT_CORE_PROFILE);
</code></p>

<p>理由是，我没有使用书中建议的 <code>freeglut</code>。因为Mavericks，或者准确点来说Xcode自带了GLUT（应该是openglut），所以就没有必要再安装一个类似的玩意了。
而Xcode自带的GLUT，是没有上述的两个函数的。</p>

<ul>
<li>最关键的一点改动：</li>
</ul>


<p><code>cpp
glutInitDisplayMode(GLUT_RGBA);
</code></p>

<p>改成：</p>

<p><code>cpp
glutInitDisplayMode(GLUT_3_2_CORE_PROFILE | GLUT_RGBA);
</code></p>

<p>正是由于改动#4，导致程序运行的时候，没有正确的选择OpenGL的版本和profile。所以如果没有这个改动，程序运行会发现shader程序没法编译，错误信息是：<code>unsupported version xxx</code>（shader程序的第一行就是#version）。所以我很小白的在StackOverflow上问了这个问题，最终得到了大佬的回答：</p>

<blockquote><p>MacOS uses Legacy Profile as default for all created OpenGL context. Therefor by default only OpenGL up to 2.1 and GLSL up to 1.20 is supported.</p>

<p>To use OpenGL 3.2+ you need to switch to the Core Profile. The naming here is a little bit confusing because it stats only 3.2Core profile, but actually this 3.2 or later (every OpenGL profile that is supported by the system/driver that is backwards compatible to 3.2)</p>

<p>For glut (depends on the version of glut if it works) the command on MacOS is:</p>

<p>glutInitDisplayMode(GLUT_3_2_CORE_PROFILE | &hellip;  ) Where | &hellip; would be the other options you want to pass to glutInitDisplayMode.</p></blockquote>

<p>正如上面所说，虽然名字叫3_2_CORE_PROFILE，但是其实会使用系统当前最新版本的OpenGL实现啦。上面GLEW一节中也说道，虽然include的头文件名字叫 <code>OpenGL/gl3.h</code>，但其实不是真的只是OpenGL 3啦。</p>

<h2>LoadShaders的改动</h2>

<p>LoadShaders是书中提供的一个用来读取、编译shader程序的一小段代码。这部分内容我几乎没有改动，除了：</p>

<ul>
<li><p>去掉了 <code>#include &lt;GL/gl.h&gt;</code> 等，改成了 <code>#include &lt;OpenGL/gl3.h&gt;</code>，当然如果你用GLEW，也可以改成：<code>#include &lt;GL/glew.h&gt;</code>。</p></li>
<li><p>将LoadShader.cpp中的 <code>_DEBUG</code> 改成了 <code>DEBUG</code>。理由是：Xcode的Project中，如果是编译运行Debug版本，默认就会定义 <code>DEBUG</code> 这个宏，所以做这个修改就省的以后每次新建项目，都要再去定义 <code>_DEBUG</code> 了。</p></li>
</ul>


<h2>其他一些Tips</h2>

<p>代码的改动就是上述的一些内容了。不过为了让程序能在Xcode中编译和运行，还需要做一些工作。这里就作为Tips来描述一下。</p>

<p>注：其实也是没事找事，在终端下自己写一个Makefile就可以搞定的事情，偏要用Xcode。只是自从用了MacOS X之后，还没有用过Xcode，想尝试一下而已。</p>

<ul>
<li><p>有关GLEW的头文件。Xcode中的Project，有一个配置项叫做：<code>Always Search User Paths</code>。需要将这个改成Yes，并将 <code>User Header Search Paths</code> 设置成 <code>/usr/include</code>。否则代码编译的时候就会错误：找不到 <code>GL/glew.h</code>。从Linux编程过来的人表示极度不适应&hellip;</p></li>
<li><p>GLEW的库文件。和Linux下的C编程一样，我们都知道需要在编译的时候给出一个链接的参数：<code>-lGLEW</code>。这可以在Xcode中Project设定的 <code>Other Linker Flags</code> 中设置。但是设置完了之后，再次报告链接错误：找不到libGLEW，但是文件明明就在 <code>/usr/lib</code> 目录下。从Linux编程过来的人再次表示极度不适应&hellip; 最后没办法，只能这样：</p></li>
</ul>


<p><code>bash
sudo ln -s /usr/lib/libGLEW.dylib /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk/usr/lib/libGLEW.dylib
</code></p>

<p>所以到了这里，可以基本明白了，Xcode是一个相对独立而且封闭的环境，所有的dependencies都被约束在了Xcode的体系下。我能再次吐槽么？</p>

<ul>
<li>如果要在Xcode中run/debug程序的话，两个shader文件：<code>simple.vert</code> 和 <code>simple.frag</code> 要放到Xcode运行程序的working directory中，也就是这个目录：</li>
</ul>


<p><code>bash
/Users/mark/Library/Developer/Xcode/DerivedData/HelloGL-&lt;debug hash id&gt;/Build/Products/Debug
</code></p>

<p>记得我们在主程序中添加的一行用来打印当前GLSL的版本的代码么？这里派上用处了，将你的shader程序中的 <code>#version xxx</code> 修改成这里打印出来的值，因为这才是你的系统当前支持的GLSL的版本。</p>

<ul>
<li>在Xcode Project设定中，将GLUT和OpenGL添加到 <code>Link Binary with Libraries</code> 中去。这个用过Xcode的都应该知道：</li>
</ul>


<p><img src="/downloads/image/HelloGL-link-libs.png" alt="HelloGL Link Binary with Libraries" /></p>

<p>整个项目的文件列表是长这个样子的：</p>

<p><img src="/downloads/image/HelloGL-files.png" alt="HelloGL files" /></p>

<h2>代码</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelloGL主程序 c++ (main.cpp)</span> <a href='/downloads/code/HelloGL/main.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Installed by building glew source</span>
</span><span class='line'><span class="cm"> * Also need to be included first because it defines all &quot;gl&quot; stuffs</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * About glew, normally you don&#39;t require glew on MacOS due the way how the</span>
</span><span class='line'><span class="cm"> * OpenGL layer is implemented in MacOS. You are restricted to the OpenGL</span>
</span><span class='line'><span class="cm"> * features MacOS provides/exposes. So either the features are available via</span>
</span><span class='line'><span class="cm"> * the headers of MacOS or not. There header would be #include &lt;OpenGL/gl3.h&gt;</span>
</span><span class='line'><span class="cm"> * where also the naming is missleading, it does not mean only OpenGL 3,</span>
</span><span class='line'><span class="cm"> * it is the same like with the context.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="c1">//#include &lt;GL/glew.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;LoadShaders.h&quot;</span>
</span><span class='line'><span class="cp">#include &lt;GLUT/GLUT.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define BUFFER_OFFSET(x)	((const void*)(x))</span>
</span><span class='line'>
</span><span class='line'><span class="k">enum</span> <span class="n">VAO_IDs</span> <span class="p">{</span> <span class="n">Triangles</span><span class="p">,</span> <span class="n">NumVAOs</span> <span class="p">};</span>
</span><span class='line'><span class="k">enum</span> <span class="n">Buffer_IDs</span> <span class="p">{</span> <span class="n">ArrayBuffer</span><span class="p">,</span> <span class="n">NumBuffers</span> <span class="p">};</span>
</span><span class='line'><span class="k">enum</span> <span class="n">Attrib_IDs</span> <span class="p">{</span> <span class="n">vPosition</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">GLuint</span> <span class="n">VAOs</span><span class="p">[</span><span class="n">NumVAOs</span><span class="p">];</span>
</span><span class='line'><span class="n">GLuint</span> <span class="n">Buffers</span><span class="p">[</span><span class="n">NumBuffers</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">const</span> <span class="n">GLuint</span> <span class="n">NumVertices</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="n">glGenVertexArrays</span><span class="p">(</span><span class="n">NumVAOs</span><span class="p">,</span> <span class="n">VAOs</span><span class="p">);</span>
</span><span class='line'>	<span class="n">glBindVertexArray</span><span class="p">(</span><span class="n">VAOs</span><span class="p">[</span><span class="n">Triangles</span><span class="p">]);</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">GLfloat</span> <span class="n">vertices</span><span class="p">[</span><span class="n">NumVertices</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>		<span class="p">{</span> <span class="o">-</span><span class="mf">0.90</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.90</span> <span class="p">},</span>
</span><span class='line'>		<span class="p">{</span>  <span class="mf">0.85</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.90</span> <span class="p">},</span>
</span><span class='line'>		<span class="p">{</span> <span class="o">-</span><span class="mf">0.90</span><span class="p">,</span>  <span class="mf">0.85</span> <span class="p">},</span>
</span><span class='line'>		<span class="p">{</span>  <span class="mf">0.90</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.85</span> <span class="p">},</span>
</span><span class='line'>		<span class="p">{</span>  <span class="mf">0.90</span><span class="p">,</span>  <span class="mf">0.90</span> <span class="p">},</span>
</span><span class='line'>		<span class="p">{</span> <span class="o">-</span><span class="mf">0.85</span><span class="p">,</span>  <span class="mf">0.90</span> <span class="p">}</span>
</span><span class='line'>	<span class="p">};</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">glGenBuffers</span><span class="p">(</span><span class="n">NumBuffers</span><span class="p">,</span> <span class="n">Buffers</span><span class="p">);</span>
</span><span class='line'>	<span class="n">glBindBuffer</span><span class="p">(</span><span class="n">GL_ARRAY_BUFFER</span><span class="p">,</span> <span class="n">Buffers</span><span class="p">[</span><span class="n">ArrayBuffer</span><span class="p">]);</span>
</span><span class='line'>	<span class="n">glBufferData</span><span class="p">(</span><span class="n">GL_ARRAY_BUFFER</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">vertices</span><span class="p">),</span>
</span><span class='line'>		     <span class="n">vertices</span><span class="p">,</span> <span class="n">GL_STATIC_DRAW</span><span class="p">);</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">ShaderInfo</span> <span class="n">shaders</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>		<span class="p">{</span> <span class="n">GL_VERTEX_SHADER</span><span class="p">,</span> <span class="s">&quot;simple.vert&quot;</span> <span class="p">},</span>
</span><span class='line'>		<span class="p">{</span> <span class="n">GL_FRAGMENT_SHADER</span><span class="p">,</span> <span class="s">&quot;simple.frag&quot;</span> <span class="p">},</span>
</span><span class='line'>		<span class="p">{</span> <span class="n">GL_NONE</span><span class="p">,</span> <span class="nb">NULL</span> <span class="p">}</span>
</span><span class='line'>	<span class="p">};</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">GLuint</span> <span class="n">program</span> <span class="o">=</span> <span class="n">LoadShaders</span><span class="p">(</span><span class="n">shaders</span><span class="p">);</span>
</span><span class='line'>	<span class="n">glUseProgram</span><span class="p">(</span><span class="n">program</span><span class="p">);</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">glVertexAttribPointer</span><span class="p">(</span><span class="n">vPosition</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">GL_FLOAT</span><span class="p">,</span>
</span><span class='line'>			      <span class="n">GL_FALSE</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">BUFFER_OFFSET</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>
</span><span class='line'>	<span class="n">glEnableVertexAttribArray</span><span class="p">(</span><span class="n">vPosition</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">display</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="n">glClear</span><span class="p">(</span><span class="n">GL_COLOR_BUFFER_BIT</span><span class="p">);</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">glBindVertexArray</span><span class="p">(</span><span class="n">VAOs</span><span class="p">[</span><span class="n">Triangles</span><span class="p">]);</span>
</span><span class='line'>	<span class="n">glDrawArrays</span><span class="p">(</span><span class="n">GL_TRIANGLES</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">NumVertices</span><span class="p">);</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">glFlush</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">argv</span><span class="p">[])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="n">glutInit</span><span class="p">(</span><span class="o">&amp;</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">);</span>
</span><span class='line'>	<span class="n">glutInitDisplayMode</span><span class="p">(</span><span class="n">GLUT_3_2_CORE_PROFILE</span> <span class="o">|</span> <span class="n">GLUT_RGBA</span><span class="p">);</span>
</span><span class='line'>	<span class="n">glutInitWindowSize</span><span class="p">(</span><span class="mi">512</span><span class="p">,</span> <span class="mi">512</span><span class="p">);</span>
</span><span class='line'>	<span class="n">glutCreateWindow</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>	
</span><span class='line'>	<span class="cm">/*</span>
</span><span class='line'><span class="cm">	 * Normally don&#39;t need GLEW on MacOSX.</span>
</span><span class='line'><span class="cm">	 * But set glewExperimental to TRUE if you want to use it.</span>
</span><span class='line'><span class="cm">	 * Otherwise some funcs like &quot;glGenVertexArray&quot; will be NULL.</span>
</span><span class='line'><span class="cm">	 */</span>
</span><span class='line'>	<span class="cm">/* glewExperimental = GL_TRUE;</span>
</span><span class='line'><span class="cm">	if (glewInit()) {</span>
</span><span class='line'><span class="cm">		cerr &lt;&lt; &quot;Unable to initialize GLEW... exiting&quot; &lt;&lt; endl;</span>
</span><span class='line'><span class="cm">		exit(EXIT_FAILURE);</span>
</span><span class='line'><span class="cm">	} */</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Supported GLSL version is: &quot;</span> <span class="o">&lt;&lt;</span>
</span><span class='line'>		<span class="n">glGetString</span><span class="p">(</span><span class="n">GL_SHADING_LANGUAGE_VERSION</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">init</span><span class="p">();</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">glutDisplayFunc</span><span class="p">(</span><span class="n">display</span><span class="p">);</span>
</span><span class='line'>	
</span><span class='line'>	<span class="n">glutMainLoop</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>LoadShaders c++ (LoadShaders.cpp)</span> <a href='/downloads/code/HelloGL/LoadShaders.cpp'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">//////////////////////////////////////////////////////////////////////////////</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  --- LoadShaders.cxx ---</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//////////////////////////////////////////////////////////////////////////////</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;cstdlib&gt;</span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;LoadShaders.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'><span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="p">{</span>
</span><span class='line'><span class="cp">#endif </span><span class="c1">// __cplusplus</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//----------------------------------------------------------------------------</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="k">const</span> <span class="n">GLchar</span><span class="o">*</span>
</span><span class='line'><span class="n">ReadShader</span><span class="p">(</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">filename</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">FILE</span><span class="o">*</span> <span class="n">infile</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span> <span class="n">filename</span><span class="p">,</span> <span class="s">&quot;rb&quot;</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="n">infile</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="cp">#ifdef DEBUG</span>
</span><span class='line'>        <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Unable to open file &#39;&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">filename</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;&#39;&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* DEBUG */</span><span class="cp"></span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fseek</span><span class="p">(</span> <span class="n">infile</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">SEEK_END</span> <span class="p">);</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">len</span> <span class="o">=</span> <span class="n">ftell</span><span class="p">(</span> <span class="n">infile</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">fseek</span><span class="p">(</span> <span class="n">infile</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">SEEK_SET</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">GLchar</span><span class="o">*</span> <span class="n">source</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GLchar</span><span class="p">[</span><span class="n">len</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fread</span><span class="p">(</span> <span class="n">source</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span> <span class="n">infile</span> <span class="p">);</span>
</span><span class='line'>    <span class="n">fclose</span><span class="p">(</span> <span class="n">infile</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">source</span><span class="p">[</span><span class="n">len</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="k">const_cast</span><span class="o">&lt;</span><span class="k">const</span> <span class="n">GLchar</span><span class="o">*&gt;</span><span class="p">(</span><span class="n">source</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//----------------------------------------------------------------------------</span>
</span><span class='line'>
</span><span class='line'><span class="n">GLuint</span>
</span><span class='line'><span class="n">LoadShaders</span><span class="p">(</span> <span class="n">ShaderInfo</span><span class="o">*</span> <span class="n">shaders</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="n">shaders</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">GLuint</span> <span class="n">program</span> <span class="o">=</span> <span class="n">glCreateProgram</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ShaderInfo</span><span class="o">*</span> <span class="n">entry</span> <span class="o">=</span> <span class="n">shaders</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span> <span class="n">entry</span><span class="o">-&gt;</span><span class="n">type</span> <span class="o">!=</span> <span class="n">GL_NONE</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">GLuint</span> <span class="n">shader</span> <span class="o">=</span> <span class="n">glCreateShader</span><span class="p">(</span> <span class="n">entry</span><span class="o">-&gt;</span><span class="n">type</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">entry</span><span class="o">-&gt;</span><span class="n">shader</span> <span class="o">=</span> <span class="n">shader</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">const</span> <span class="n">GLchar</span><span class="o">*</span> <span class="n">source</span> <span class="o">=</span> <span class="n">ReadShader</span><span class="p">(</span> <span class="n">entry</span><span class="o">-&gt;</span><span class="n">filename</span> <span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span> <span class="n">source</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span> <span class="n">entry</span> <span class="o">=</span> <span class="n">shaders</span><span class="p">;</span> <span class="n">entry</span><span class="o">-&gt;</span><span class="n">type</span> <span class="o">!=</span> <span class="n">GL_NONE</span><span class="p">;</span> <span class="o">++</span><span class="n">entry</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">glDeleteShader</span><span class="p">(</span> <span class="n">entry</span><span class="o">-&gt;</span><span class="n">shader</span> <span class="p">);</span>
</span><span class='line'>                <span class="n">entry</span><span class="o">-&gt;</span><span class="n">shader</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">glShaderSource</span><span class="p">(</span> <span class="n">shader</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">source</span><span class="p">,</span> <span class="nb">NULL</span> <span class="p">);</span>
</span><span class='line'>        <span class="k">delete</span> <span class="p">[]</span> <span class="n">source</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">glCompileShader</span><span class="p">(</span> <span class="n">shader</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">GLint</span> <span class="n">compiled</span><span class="p">;</span>
</span><span class='line'>        <span class="n">glGetShaderiv</span><span class="p">(</span> <span class="n">shader</span><span class="p">,</span> <span class="n">GL_COMPILE_STATUS</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">compiled</span> <span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="n">compiled</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="cp">#ifdef DEBUG</span>
</span><span class='line'>            <span class="n">GLsizei</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>            <span class="n">glGetShaderiv</span><span class="p">(</span> <span class="n">shader</span><span class="p">,</span> <span class="n">GL_INFO_LOG_LENGTH</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">len</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">GLchar</span><span class="o">*</span> <span class="n">log</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GLchar</span><span class="p">[</span><span class="n">len</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>            <span class="n">glGetShaderInfoLog</span><span class="p">(</span> <span class="n">shader</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">len</span><span class="p">,</span> <span class="n">log</span> <span class="p">);</span>
</span><span class='line'>            <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Shader compilation failed: &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">log</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>            <span class="k">delete</span> <span class="p">[]</span> <span class="n">log</span><span class="p">;</span>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* DEBUG */</span><span class="cp"></span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">glAttachShader</span><span class="p">(</span> <span class="n">program</span><span class="p">,</span> <span class="n">shader</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">++</span><span class="n">entry</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef GL_VERSION_4_1</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="n">GLEW_VERSION_4_1</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// glProgramParameteri( program, GL_PROGRAM_SEPARABLE, GL_TRUE );</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* GL_VERSION_4_1 */</span><span class="cp"></span>
</span><span class='line'>
</span><span class='line'>    <span class="n">glLinkProgram</span><span class="p">(</span> <span class="n">program</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">GLint</span> <span class="n">linked</span><span class="p">;</span>
</span><span class='line'>    <span class="n">glGetProgramiv</span><span class="p">(</span> <span class="n">program</span><span class="p">,</span> <span class="n">GL_LINK_STATUS</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">linked</span> <span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="n">linked</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="cp">#ifdef DEBUG</span>
</span><span class='line'>        <span class="n">GLsizei</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>        <span class="n">glGetProgramiv</span><span class="p">(</span> <span class="n">program</span><span class="p">,</span> <span class="n">GL_INFO_LOG_LENGTH</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">len</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">GLchar</span><span class="o">*</span> <span class="n">log</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GLchar</span><span class="p">[</span><span class="n">len</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>        <span class="n">glGetProgramInfoLog</span><span class="p">(</span> <span class="n">program</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">len</span><span class="p">,</span> <span class="n">log</span> <span class="p">);</span>
</span><span class='line'>        <span class="n">std</span><span class="o">::</span><span class="n">cerr</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Shader linking failed: &quot;</span> <span class="o">&lt;&lt;</span> <span class="n">log</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</span><span class='line'>        <span class="k">delete</span> <span class="p">[]</span> <span class="n">log</span><span class="p">;</span>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* DEBUG */</span><span class="cp"></span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span> <span class="n">entry</span> <span class="o">=</span> <span class="n">shaders</span><span class="p">;</span> <span class="n">entry</span><span class="o">-&gt;</span><span class="n">type</span> <span class="o">!=</span> <span class="n">GL_NONE</span><span class="p">;</span> <span class="o">++</span><span class="n">entry</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">glDeleteShader</span><span class="p">(</span> <span class="n">entry</span><span class="o">-&gt;</span><span class="n">shader</span> <span class="p">);</span>
</span><span class='line'>            <span class="n">entry</span><span class="o">-&gt;</span><span class="n">shader</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">program</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//----------------------------------------------------------------------------</span>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">#endif </span><span class="c1">// __cplusplus</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>LoadShaders头文件 cpp (LoadShaders.h)</span> <a href='/downloads/code/HelloGL/LoadShaders.h'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#ifndef __LOAD_SHADERS_H__</span>
</span><span class='line'><span class="cp">#define __LOAD_SHADERS_H__</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;OpenGL/gl3.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'><span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="p">{</span>
</span><span class='line'><span class="cp">#endif  </span><span class="c1">// __cplusplus</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//----------------------------------------------------------------------------</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  LoadShaders() takes an array of ShaderFile structures, each of which</span>
</span><span class='line'><span class="c1">//    contains the type of the shader, and a pointer a C-style character</span>
</span><span class='line'><span class="c1">//    string (i.e., a NULL-terminated array of characters) containing the</span>
</span><span class='line'><span class="c1">//    entire shader source.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  The array of structures is terminated by a final Shader with the</span>
</span><span class='line'><span class="c1">//    &quot;type&quot; field set to GL_NONE.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  LoadShaders() returns the shader program value (as returned by</span>
</span><span class='line'><span class="c1">//    glCreateProgram()) on success, or zero on failure. </span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">GLenum</span>       <span class="n">type</span><span class="p">;</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span>  <span class="n">filename</span><span class="p">;</span>
</span><span class='line'>    <span class="n">GLuint</span>       <span class="n">shader</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="n">ShaderInfo</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">GLuint</span> <span class="n">LoadShaders</span><span class="p">(</span> <span class="n">ShaderInfo</span><span class="o">*</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//----------------------------------------------------------------------------</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="cp">#endif </span><span class="c1">// __cplusplus</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif </span><span class="c1">// __LOAD_SHADERS_H__</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>simple.vert cpp (simple.vert)</span> <a href='/downloads/code/HelloGL/simple.vert'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#version 410 core</span>
</span><span class='line'>
</span><span class='line'><span class="n">layout</span><span class="p">(</span><span class="n">location</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span> <span class="n">in</span> <span class="n">vec4</span> <span class="n">vPosition</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span>
</span><span class='line'><span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">gl_Position</span> <span class="o">=</span> <span class="n">vPosition</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>simple.frag cpp (simple.frag)</span> <a href='/downloads/code/HelloGL/simple.frag'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#version 410 core</span>
</span><span class='line'>
</span><span class='line'><span class="n">out</span> <span class="n">vec4</span> <span class="n">fColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span>
</span><span class='line'><span class="n">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">fColor</span> <span class="o">=</span> <span class="n">vec4</span><span class="p">(</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
