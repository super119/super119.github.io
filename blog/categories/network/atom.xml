<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: network | Make Things Cool]]></title>
  <link href="http://www.markzhang.cn/blog/categories/network/atom.xml" rel="self"/>
  <link href="http://www.markzhang.cn/"/>
  <updated>2014-08-01T13:18:31+08:00</updated>
  <id>http://www.markzhang.cn/</id>
  <author>
    <name><![CDATA[Mark Zhang]]></name>
    <email><![CDATA[super119@139.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Winbox for Mac OS X，修改界面字体]]></title>
    <link href="http://www.markzhang.cn/blog/2014/07/24/winbox-mac-change-font/"/>
    <updated>2014-07-24T18:19:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/07/24/winbox-mac-change-font</id>
    <content type="html"><![CDATA[<p>RouterOS（或简称ROS）是拉脱维亚的Mikrotik开发的一个强大到变态（对于个人用户而言）的路由系统。基于Linux，支持x86和MIPS（routerboard）。也就是说，你可以找一台PC来，装上routeros，就变身成了一台路由器。所以也有很多人称RouterOS为软路由。</p>

<p>Winbox是Mikrotik开发的RouterOS的管理工具（客户端）。当然，RouterOS也有网页版和命令行（终端，支持SSH，串口等）的管理界面，但是Winbox是相对来说最直观和好用的（当然用多了肯定到最后就是纯命令行了）。</p>

<p>有一个问题就是，Winbox只有windows版的。在Mac和Linux上，要使用wine来运行（或安装虚拟机）。</p>

<!-- more -->


<p>对于Mac OS X，网上有爱好者已经做好了一个包，下载下来安装即可，不用自己去折腾安装和配置 <code>wine</code>。地址在这里：</p>

<p><a href="http://wiki.mikrotik.com/wiki/MikroTik_WinBox_for_Mac_StandAlone">http://wiki.mikrotik.com/wiki/MikroTik_WinBox_for_Mac_StandAlone</a></p>

<p>的确很好用，就是有一个问题，字体太难看。看起来用的是默认的宋体，所以英文显示效果不忍直视。</p>

<p>所以很自然想修改字体。说起修改这个字体，其实就是修改windows的默认字体。参考了这篇文章：</p>

<p><a href="http://linfan.info/blog/2012/03/01/wine-mac/">http://linfan.info/blog/2012/03/01/wine-mac/</a></p>

<p>具体可以这么做：</p>

<ul>
<li>找一个喜欢的字体（Mac OS X自带了很多字体，如果安装了Office for Mac，那微软的很多字体也都有了），拷贝到 <code>/Applications/Winbox.app/drive_c/windows/Fonts</code> 目录下。比如我用的是微软雅黑：</li>
</ul>


<p><code>bash
cp /Library/Fonts/Microsoft/Microsoft\ Yahei.ttf /Applications/WinBox.app/drive_c/windows/Fonts
</code></p>

<ul>
<li>使用Wine运行注册表编辑器。这个打包好的Winbox for Mac，使用的是Wineskin（就是一个wine的wrapper，这样就把winbox.exe做成了Mac上的Winbox.app），所以这样：</li>
</ul>


<p><code>bash
open /Applications/WinBox.app/Wineskin.app/
</code></p>

<p>然后点击 <code>Advanced</code> 按钮，再选择 <code>Tools</code> 标签页，最后点击 <code>Registry Editor (regedit)</code> 按钮，出现windows的注册表编辑器，导入这个注册表：</p>

<p>``` ini
REGEDIT4</p>

<p>[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontSubstitutes]
&ldquo;Microsoft Yahei&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Comic Sans MS&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Courier&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Courier New&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Fixedsys&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Helv&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Helvetica&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Lucida Console&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Lucida Sans&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Microsoft Sans Serif&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;MingLiU&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;PMingLiu&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;MS Shell Dlg&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;MS Shell Dlg 2&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;MS Dialog&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;MS Gothic&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;MS PGothic&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;MS UI Gothic&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;MS Mincho&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;MS PMincho&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;SimHei&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;SimSun&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;NSimSun&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;System&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Tahoma&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Times&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Times New Roman&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Tms Rmn&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Trebuchet MS&rdquo;=&ldquo;Microsoft Yahei&rdquo;
&ldquo;Verdana&rdquo;=&ldquo;Microsoft Yahei&rdquo;
```</p>

<p>这样就OK了，再次打开Winbox，终于看到舒服的界面了：</p>

<p><img src="/downloads/image/mac-winbox-change-font.png" alt="Mac Winbox changed font" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux netfilter概述，mangle/nat/filter, prerouting/input/forward...到底是啥]]></title>
    <link href="http://www.markzhang.cn/blog/2014/07/23/netfilter-overview/"/>
    <updated>2014-07-23T18:30:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/07/23/netfilter-overview</id>
    <content type="html"><![CDATA[<p>本文转载自：</p>

<p><a href="http://shorewall.net/NetfilterOverview.html">http://shorewall.net/NetfilterOverview.html</a></p>

<!-- more -->


<p>Netfilter consists of three tables: Filter, Nat and Mangle. Each table has a number of build-in chains: PREROUTING, INPUT, FORWARD, OUTPUT and POSTROUTING.</p>

<p>Rules in the various tables are used as follows:</p>

<p>Filter
Packet filtering (rejecting, dropping or accepting packets)</p>

<p>Nat
Network Address Translation including DNAT, SNAT and Masquerading</p>

<p>Mangle
General packet header modification such as setting the TOS value or marking packets for policy routing and traffic shaping.</p>

<p>Raw
Used primarily for creating exemptions from connection tracking with the NOTRACK target. Also used for stateless DNAT.</p>

<p>Rawpost
Used for stateless SNAT.</p>

<p>The following diagram shows how packets traverse the various builtin chains within Netfilter. Note that not all table/chain combinations are used.</p>

<p><img src="/downloads/image/netfilter-overview.png" alt="Netfilter Overview" /></p>

<p>&ldquo;Local Process” means a process running on the Shorewall system itself.</p>

<p>A more elaborate version of this flow is available here and this one contrasts the Netfilter flow with that of ipchains.</p>

<p>In the above diagram are boxes similar to this:</p>

<p><img src="/downloads/image/netfilter-input-chain.png" alt="Input chain" /></p>

<p>The above box gives the name of the built-in chain (INPUT) along with the names of the tables (Mangle and Filter) that the chain exists in and in the order that the chains are traversed. The above sample indicates that packets go first through the INPUT chain of the Mangle table then through the INPUT chain of the Filter table. When a chain is enclosed in parentheses, Shorewall does not use the named chain (INPUT) in that table (Mangle).</p>

<p><strong> Keep in mind that chains in the Nat table are only traversed for new connection requests (including those related to existing connections) while the chains in the other tables are traversed on every packet. </strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS X（Mavericks）共享VPN给其他设备]]></title>
    <link href="http://www.markzhang.cn/blog/2014/07/17/mac-share-vpn-connection/"/>
    <updated>2014-07-17T11:22:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/07/17/mac-share-vpn-connection</id>
    <content type="html"><![CDATA[<p>之前写过一篇文章叫“Chnroutes的使用“，主要说的是如何通过使用 <code>chnroutes</code> 从而将国内和国外的路由分开，国内走正常路由，国外则走VPN。现在的问题是，如果在一台电脑上有了VPN之后，如何将这个VPN share给其他设备，比如PS3？</p>

<!-- more -->


<p>首先很自然想到的是Mac OS X（Mavericks）自带的 <code>Internet Sharing</code> 功能：</p>

<p><img src="/downloads/image/mac-internet-sharing.png" alt="Mac OS X Internet Sharing" /></p>

<p>但是通过使用后发现有如下的问题：</p>

<ol>
<li><p>你需要有两个网络设备，才能开始share。上面的截图也可以看到，你要选择一个 <code>From</code> 的设备，再选择 <code>To</code> 的网络设备（也就是说其他设备是通过本机的这个网络设备连接的）。</p></li>
<li><p>当然你可以说，VPN在Mac OS X里面也是一个单独的网络设备啊。是，但是通过试验，如果你只有一个网络设备，比如WIFI，那么就意味着我们既需要通过这个WIFI去连接VPN，还要通过这个WIFI让其他的设备能够连到本机，这是没法做到的。试验的结果就是，当你开了 <code>Internet Sharing</code> 之后，你的VPN就拨不上去（一拨就掉）；当你开了VPN之后，<code>Inetnet Sharing</code> 一开你的VPN就掉。事实上，如果通过WIFI来share的话，你会发现Mac OS X会将WIFI配置成一个AP，所以自然一旦被enable，你的VPN就掉了。</p></li>
<li><p>就算以上两点对你来说都没问题，这第三点就是绝望的来源：Mac OS X不会forward VPN的数据。也就是说，你想要通过Mac OS X的这个 <code>Internet Sharing</code> 功能来share你的VPN的话，是不可行的。</p></li>
</ol>


<p>所以没办法还是通过万能的Google来寻找答案，答案在这里：</p>

<p><a href="http://rodrigo.sharpcube.com/2010/06/20/using-and-sharing-a-vpn-connection-on-your-mac/">http://rodrigo.sharpcube.com/2010/06/20/using-and-sharing-a-vpn-connection-on-your-mac/</a></p>

<p>基本上就是需要我们写脚本来实现，上面这篇文章中，VPN使用的是OpenVPN，我测试的时候，使用的是PPTP的VPN，所以根据上文中 <code>Troubleshooting</code> 一节的描述，我做了这么两个脚本：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>开启VPN共享 bash (share-pptp-vpn.sh)</span> <a href='/downloads/code/share-pptp-vpn.sh'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>
</span><span class='line'>natd -same_ports -use_sockets -unregistered_only -dynamic -interface ppp0 -clamp_mss
</span><span class='line'>ipfw -f flush
</span><span class='line'>ipfw add divert natd ip from any to any via ppp0
</span><span class='line'>ipfw add pass all from any to any
</span><span class='line'>sysctl -w net.inet.ip.forwarding<span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>关闭VPN共享 bash (off-share-pptp-vpn.sh)</span> <a href='/downloads/code/off-share-pptp-vpn.sh'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>
</span><span class='line'>killall natd
</span><span class='line'>ipfw -f flush
</span><span class='line'>sysctl -w net.inet.ip.forwarding<span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>所以当拨上了VPN之后，运行开启VPN共享那个脚本就OK了。在PS3上将网关指到Macbook的IP地址就可以了。</p>

<p>最后一个遗留问题。Mac OS X的VPN高级设定中有这么一个checkbox：</p>

<p><img src="/downloads/image/mac-send-traffic-over-vpn.png" alt="Send all traffic over VPN" /></p>

<p>这个 <code>Send all traffic over VPN</code> 我不太理解是什么意思，是指本地NAT网络的地址不走VPN么？还是Mac OS X内置了类似 <code>chnroutes</code> 这样的功能？</p>

<p>有意思的是，有的时候如果enable了这个选项，我发现PS3连接网络就会出现问题。而如果VPN已经拨上去了，再去enable这个选项貌似就没有影响。</p>

<p>没有深究这个，所以这是目前的一个遗留问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一站式密码管理器 - LastPass]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/08/lastpass/"/>
    <updated>2014-04-08T19:56:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/08/lastpass</id>
    <content type="html"><![CDATA[<p>我个人感觉，密码是相当反人类的设计。当你刚接触互联网的时候，可能感觉不到，甚至感觉理所当然，银行卡也需要设置密码呢。但是当访问的网站越来越多，各个站点论坛都需要注册用户、设置密码，多了之后密码就会变成非常痛苦的一种体验。</p>

<!-- more -->


<p>其实人自身就有很多唯一（Unique）的存在，密码不应该有存在的理由。之前我看过一个BBC的纪录片，为此还写过一篇博文：</p>

<p><a href="http://markzhang.cn/blog/2013/12/17/defeating-the-hackers/">密码之外的新的安全认证手段</a></p>

<p>之所以现在密码还被大量使用，可能现在技术还没有成熟、成本还没有降低到能普及的程度吧。</p>

<p>所以现在也涌现出了很多“密码管理”类的网站和应用，LastPass就是其中之一。我简单使用了一下，感觉还是挺方便的。</p>

<p>首先就是去<a href="http://www.lastpass.com">http://www.lastpass.com</a>注册一个账号了，不好意思，这里你又需要设置一个密码了。好在的是，设置了这个密码之后，以后的所有密码都不需要再记忆了，LastPass会帮你管理。所以，反过来说，一旦你的LastPass的密码被泄露的话，那后果就不堪设想了，所以为了安全起见，一些涉及到钱财类的密码还是单独设置吧，别依赖LastPass了。。。比如支付宝。:)</p>

<p>然后就是在LastPass的主页上，点击“下载”，就会下载一个针对你的浏览器的插件。我使用的是Chrome，所以一个Chrome插件就自动下载并安装了。安装完成之后，点击工具栏上出现的 <code>*</code> 字图标，输入你的LastPass的账号和密码，一切就已经就绪了。</p>

<p>LastPass有许多功能，比如表单的自动填写、Profile的设定等，但是我只使用了它的一个功能：自动生成密码。LastPass自动生成密码可以选择密码长度，默认是12个字符，也可以选择字符种类，比如包不包含特殊字符（默认不包含，因为有一些网站只接受字母和数字作为密码）等。</p>

<p>所以接下来我就先登录了一个我常去的网站，进入到账户设定，修改密码的页面，在新密码设定的输入框中，点击LastPass，选择自动生成密码，LastPass就会生成一个12个字符的密码并自动填充到密码框中，并且该密码自动保存在了你的LastPass的账户里面：</p>

<p><img src="/downloads/image/lastpass-saved-passwd.png" alt="LastPass自动生成并保存的密码" /></p>

<p>上图显示的就是我新生成的淘宝的密码，这里面URL这一项很重要，LastPass会根据URL中的 <code>domain name</code> ，来检测你当前访问的网站是否在LastPass中有对应的密码记录。举上面的例子来说，URL是 <code>http://110.taobao.com/...</code>，所以下次只要你访问 <code>xxx.taobao.com/xxxx</code> 这样的网址，在网页中所有的密码输入框中都会出现一个 <code>*</code> 字图标，并且有一个下标1，表示该网站LastPass中有一个匹配的密码记录，只要点击这个 <code>*</code> 字图标，密码就自动填到密码框中了，很方便：</p>

<p><img src="/downloads/image/lastpass-autofill.png" alt="LastPass自动填充密码" /></p>

<p>那有的时候，有些网站，比如淘宝，支付宝，网银等，密码输入都是有控件的，所以LastPass没法自动在密码框里面插入那个 <code>*</code> 字图标，这个时候怎么办？这也没有问题，只是稍微麻烦一点。以我使用Chrome浏览器，还是访问淘宝来举例，只需要去点击工具栏上那个LastPass的图标（这个图标也有一个1字的下标，表示该网站有一个对应的密码记录），选择 <code>Show matching sites</code> &ndash;> <code>Generated password for taobao.com</code> &ndash;> <code>Copy password</code>，然后再到密码输入框里面去粘贴就好了。如果很不幸你的网站的密码输入框不允许粘贴，那你只能手动去LastPass的密码保存页面，找到那个密码，然后手动输入了。。。</p>

<p>最后说一个我觉得是必须要设置的地方，就是 <code>Equivalent Domains</code>。要设置这个东西的原因在于，很多网站密码设置、修改不在一个domain上。比如126邮箱，使用的时候，我们登录的是www.126.com，但是修改密码的时候，是跳转到网易通行证的网站，也就是163.com；再比如139邮箱，登录的是139.com，但网页会自动跳转到10086.cn，又或者是cmpassport.com；淘宝也是，taobao.com/alipay.com/zhifubao.com这三个域名很多时候都是关联的，其实需要的都是相同的用户名和密码。上面提到，LastPass是根据 <code>domain name</code>，也就是域名来检测你当前访问的网页是否有匹配的密码记录的，所以如果你保存密码的时候，密码对应的域名是taobao.com，但是你现在访问某个alipay.com的网页，也需要这个密码，这个时候如果你不设置 <code>Equivalent Domains</code>的话，LastPass就不会自动提示密码了。</p>

<p>所以，点击工具栏上LastPass的图标，选择 <code>My LastPass Vault</code> &ndash;> <code>Settings</code> &ndash;> <code>Equivalent Domains</code>标签页，在里面新增一个记录，比如这样：</p>

<p><code>taobao.com, alipay.com</code></p>

<p><img src="/downloads/image/lastpass-equivalent-domains.png" alt="LastPass Equivalent Domains" /></p>

<p>保存之后，下次你访问某个alipay.com的页面，LastPass就会提示你淘宝的密码了。当然这里只是举例，如果你的淘宝账户和alipay的账户是分开的，那自然就不需要这样设置。</p>

<p>最后，给你的LastPass的账户设置一个强密码，然后祈祷LastPass不会被墙，LastPass的密码数据库不会被盗吧！还有就是，真正涉及到钱的网站，比如支付宝、网银等，还是不要使用LastPass来管理密码吧，虽然记忆N个密码实在麻烦，但是麻烦总好过丢钱吧。。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[架设无线桥接网络（WDS）]]></title>
    <link href="http://www.markzhang.cn/blog/2014/03/22/setup-wireless-wds/"/>
    <updated>2014-03-22T19:54:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/03/22/setup-wireless-wds</id>
    <content type="html"><![CDATA[<p>现在的无线路由器动辄3根天线，号称穿墙能力如何如何，信号可以从一楼一直覆盖到三楼。但是根据我几年来使用了N款无线路由器之后，发现都是扯。我现在使用的是一台ASUS的，3根天线，128M内存的无线路由器，支持刷第三方固件（如DD-WRT, Tomato），但是穿墙效果还是无法让人满意。路由器放在房间，客厅的信号就是时有时无。当然，我指的是使用ipad或者手机时，信号较弱，如果使用笔记本电脑要好一些。</p>

<p>忍受了2年之后，我决定在客厅再放一个无线路由器，做无线桥接（WDS）使用，彻底摆脱信号之苦。</p>

<!-- more -->


<p>简单说下两台路由器：</p>

<ol>
<li><p>做AP用的，也是连接着Internet的，就是那台ASUS的，放在书房。</p></li>
<li><p>做桥接用的，放在客厅的，是一台特价的时候买的四十块钱的Tenda（腾达）的无线路由器。</p></li>
</ol>


<p>其实网上介绍WDS的文章很多，但是很多文章都不适用于我的情况，所以做了很多次测试。</p>

<p>最后配置完成之后，发现其实非常简单：</p>

<h2>主路由器（做AP用的ASUS的那台）的配置</h2>

<p>由于我这台ASUS的路由器给我刷了Tomato的固件，所以这里是Tomato中的配置方法。按照下图配置即可：</p>

<p><img src="/downloads/image/tomato-ap-wds.png" alt="Tomato AP+WDS 配置" /></p>

<ul>
<li>工作模式设置成 <code>AP + WDS</code></li>
<li>通道尽量选择一个没人使用的。现在每家每户都有无线路由器，所以常见通道很多人都在使用，挑一个没人使用的比较好</li>
<li>无线加密还是按照以前的就好，现在基本上用的都是 <code>WPA2 Personal</code> 了</li>
<li>WDS一项中，你可以将辅路由器的MAC地址填写进去，也可以像上面的图中所示，选成AUTO</li>
</ul>


<h2>辅路由器（做桥接用的Tenda的那台）的配置</h2>

<p>忘记截图了，但是只需要确保以下几点即可：</p>

<ul>
<li>Internet连接要关闭，因为是做桥接用。没有关闭就设成有线网络连接Internet，反正我们不会插网线上去，所以等于禁用了</li>
<li>LAN的网段不要设成跟主路由器一个网段，以免冲突。比如主路由器是192.168.1.x, 辅路由器就可以设成192.168.2.x</li>
<li>关闭DHCP，因为所有的WIFI数据会被发送到主路由器去</li>
<li>工作模式设成WDS，然后填写主路由器的无线MAC地址。一般的路由器都会有一个Scan按钮，可以给出所有的无线网络，选择主路由器那个即可</li>
<li>无线加密设置成跟主路由器一样（加密方法、密钥），这很重要</li>
</ul>


<p>我这个Tenda的路由器，设成WDS模式之后，无线的SSID就会自动设置成跟主路由器一样。所以，当做完上面的设置之后，家里就只有一个无线信号，走到书房就自动连接到主路由器，走到客厅就会自动连接到辅路由器，Cool。</p>

<p>Have a good day!</p>
]]></content>
  </entry>
  
</feed>
