<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: reprints | Make Things Cool]]></title>
  <link href="http://www.markzhang.cn/blog/categories/reprints/atom.xml" rel="self"/>
  <link href="http://www.markzhang.cn/"/>
  <updated>2014-09-01T21:51:41+08:00</updated>
  <id>http://www.markzhang.cn/</id>
  <author>
    <name><![CDATA[Mark Zhang]]></name>
    <email><![CDATA[super119@139.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux netfilter概述，mangle/nat/filter, prerouting/input/forward...到底是啥]]></title>
    <link href="http://www.markzhang.cn/blog/2014/07/23/netfilter-overview/"/>
    <updated>2014-07-23T18:30:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/07/23/netfilter-overview</id>
    <content type="html"><![CDATA[<p>本文转载自：</p>

<p><a href="http://shorewall.net/NetfilterOverview.html">http://shorewall.net/NetfilterOverview.html</a></p>

<!-- more -->


<p>Netfilter consists of three tables: Filter, Nat and Mangle. Each table has a number of build-in chains: PREROUTING, INPUT, FORWARD, OUTPUT and POSTROUTING.</p>

<p>Rules in the various tables are used as follows:</p>

<p>Filter
Packet filtering (rejecting, dropping or accepting packets)</p>

<p>Nat
Network Address Translation including DNAT, SNAT and Masquerading</p>

<p>Mangle
General packet header modification such as setting the TOS value or marking packets for policy routing and traffic shaping.</p>

<p>Raw
Used primarily for creating exemptions from connection tracking with the NOTRACK target. Also used for stateless DNAT.</p>

<p>Rawpost
Used for stateless SNAT.</p>

<p>The following diagram shows how packets traverse the various builtin chains within Netfilter. Note that not all table/chain combinations are used.</p>

<p><img src="/downloads/image/netfilter-overview.png" alt="Netfilter Overview" /></p>

<p>&ldquo;Local Process” means a process running on the Shorewall system itself.</p>

<p>A more elaborate version of this flow is available here and this one contrasts the Netfilter flow with that of ipchains.</p>

<p>In the above diagram are boxes similar to this:</p>

<p><img src="/downloads/image/netfilter-input-chain.png" alt="Input chain" /></p>

<p>The above box gives the name of the built-in chain (INPUT) along with the names of the tables (Mangle and Filter) that the chain exists in and in the order that the chains are traversed. The above sample indicates that packets go first through the INPUT chain of the Mangle table then through the INPUT chain of the Filter table. When a chain is enclosed in parentheses, Shorewall does not use the named chain (INPUT) in that table (Mangle).</p>

<p><strong> Keep in mind that chains in the Nat table are only traversed for new connection requests (including those related to existing connections) while the chains in the other tables are traversed on every packet. </strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[需要齐次坐标的原因之二 - 所有的变换运算（平移、旋转、缩放）都可以用矩阵乘法来搞定]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/23/translation-rotation-scale-in-homogeneous-coordinate/"/>
    <updated>2014-04-23T13:55:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/23/translation-rotation-scale-in-homogeneous-coordinate</id>
    <content type="html"><![CDATA[<p>本文中的三张图片来自网络，但是我不记得当初的来源了，所以没有能给出出处。确定来源后将给出图片出处。</p>

<p>看三个图就清楚了。分别是平移、旋转和缩放的矩阵计算。如果没有额外的第四个量w（也就是齐次坐标），那么这三种变换是无法都使用矩阵乘法来解决的。变换都统一成矩阵乘法之后，就给硬件设计和软件架构带来了巨大的好处。</p>

<!-- more -->


<p>下面的三组公式就分别对应使用矩阵来实现平移（Translation）、旋转（Rotation）、缩放（Scale）：</p>

<p><img src="/downloads/image/matrix-translation.png" alt="Translation" /></p>

<p><img src="/downloads/image/matrix-rotation.png" alt="Rotation" /></p>

<p><img src="/downloads/image/matrix-scale.png" alt="Scale" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[需要齐次坐标的原因]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/23/homogeneous-coordinates/"/>
    <updated>2014-04-23T13:40:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/23/homogeneous-coordinates</id>
    <content type="html"><![CDATA[<p>原文链接：<a href="http://www.songho.ca/math/homogeneous/homogeneous.html">http://www.songho.ca/math/homogeneous/homogeneous.html</a></p>

<p>翻译：罗朝辉 <a href="http://www.cnblogs.com/kesalin/">http://www.cnblogs.com/kesalin/</a></p>

<!-- more -->


<p>在欧几里得几何空间里，两条平行线永远都不会相交。但是在投影空间中，两条铁轨在地平线处却是会相交的，因为在无限远处它们看起来相交于一点。</p>

<p>在欧几里得（或称笛卡尔）空间里描述2D/3D 几何物体是很理想的，但在投影空间里面却并不见得。我们用 (x, y) 表示笛卡尔空间中的一个 2D 点，而处于无限远处的点 (∞,∞) 在笛卡尔空间里是没有意义的。投影空间里的两条平行线会在无限远处相交于一点，但笛卡尔空间里面无法搞定这个问题（因为无限远处的点在笛卡尔空间里是没有意义的）。</p>

<p>由 August Ferdinand Möbius 提出的齐次坐标（Homogeneous coordinates）让我们能够在投影空间里进行图像和几何处理，齐次坐标用N + 1个分量来描述 N 维坐标。比如，2D 齐次坐标是在笛卡尔坐标(X, Y)的基础上增加一个新分量 w，变成(x, y, w)，其中笛卡尔坐标系中的大X，Y 与齐次坐标中的小x，y有如下对应关系：</p>

<p><code>bash
X = x / w
Y = y / w
</code></p>

<p>笛卡尔坐标中的点 (1, 2) 在齐次坐标中就是 (1, 2, 1) 。如果这点移动到无限远(∞,∞)处，在齐次坐标中就是 (1, 2, 0) ，这样我们就避免了用没意义的"∞" 来描述无限远处的点。</p>

<p><strong> 证明: 两平行线可以相交 </strong></p>

<p>笛卡尔坐标系中，对于如下两个直线方程：</p>

<p><img src="/downloads/image/linear-formula.png" alt="直线方程" /></p>

<p>如果 C ≠ D，以上方程组无解；如果 C = D，那这两条线就是同一条线了。</p>

<p>下面我们用 x/w, y/w 代替 x, y 放到投影空间里来求解：</p>

<p><img src="/downloads/image/linear-formula-homogeneous.png" alt="齐次坐标直线方程" /></p>

<p>现在我们就可以在 C ≠ D 的情况得到一组解 (x, y, 0)，代入得 (C &ndash; D)w = 0，因为 C ≠ D，所以 w = 0。因而，两条平行线相交于投影空间中无限远处的一点 (x, y, 0)。</p>

<p>齐次坐标在计算机图形学中是有用的，将 3D 场景投影到 2D 平面的过程中就用到它了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacOS X 如何截屏]]></title>
    <link href="http://www.markzhang.cn/blog/2013/12/25/macosx-screen-shot/"/>
    <updated>2013-12-25T21:54:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2013/12/25/macosx-screen-shot</id>
    <content type="html"><![CDATA[<p><em>文章是从网上找来的，但是忘记当初的网址了，所以没写上转载的地址。如果您发现这是您的原创，请告知，我会加上转载信息，谢谢。</em></p>

<p>在Mac OS X下有很强大的截屏功能，它不仅仅是对屏幕的全屏COPY，而是包括很多细节在里面，就从这点来看，已经比过所有版本的Windows了。</p>

<p>下面我来向大家详细介绍一下： 　　</p>

<!-- more -->


<p>对全屏的截图我们可以通过按 苹果键（花键）+ Shift键 + 3来执行，之后伴随着清脆的一声提示音后，在桌面上就会生成一个图片文件，这就是刚刚截屏的图片了，默认文件类型是PNG的。</p>

<p>自定义截屏是很方便的一个功能，是可以通过按 苹果键（花键）+ Shift键 + 4来执行，当执行组合按键之后鼠标指针的光标会变成十字，现在你就可以画出你想要截取屏幕的范围了，画好后截出的图片也会放在桌面上。</p>

<p>另外，如果在按 苹果键（花键）+ Shift键 + 4后按下 空格键，鼠标指针就会变成一个小照相机，这时是截取对象方式的截屏，把小照相机放在你想截图的窗口上按鼠标左键后就执行了对该窗口的截屏，很方便吧，</p>

<p>还有一个用法就是苹果键（花键）+Shift键再 + Ctrl键 + 4，这样截出的文件就放入系统的剪贴板了，不会生成文件出来，在做文档时直接粘贴就很方便了。</p>
]]></content>
  </entry>
  
</feed>
