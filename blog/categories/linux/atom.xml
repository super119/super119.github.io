<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Make Things Cool]]></title>
  <link href="http://www.markzhang.cn/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://www.markzhang.cn/"/>
  <updated>2015-02-13T11:07:46+08:00</updated>
  <id>http://www.markzhang.cn/</id>
  <author>
    <name><![CDATA[Mark Zhang]]></name>
    <email><![CDATA[super119@139.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Thunderbird 80(72) column - 邮件在80(72)列处line break]]></title>
    <link href="http://www.markzhang.cn/blog/2014/11/25/thunderbird-72-column/"/>
    <updated>2014-11-25T11:13:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/11/25/thunderbird-72-column</id>
    <content type="html"><![CDATA[<p>这个需求做linux kernel upstream的人都懂的&hellip;&hellip;要设置Thunderbird在80列正确换行，只需要这样：</p>

<!-- more -->


<ul>
<li><p>Thunderbird如果撰写的邮件是plain text格式（在这里设置：Edit &ndash;> Account Settings &ndash;> Composition &amp; Addressing, you should uncheck Compose in HTML format for all accounts），那么自动就会在72列处做line wrap。但是需要注意的是，这里的line wrap只是在display邮件内容和撰写邮件时，你可以看到。当你发出邮件的时候，这个line wrap就没有了，换句话说，别人看到的你的邮件内容，还是很长的一行行的文字。所以需要下面一步。</p></li>
<li><p>以下内容来自：</p></li>
</ul>


<p><a href="http://arapulido.com/2009/12/01/enabling-line-wrapping-in-thunderbird/#comment-807">http://arapulido.com/2009/12/01/enabling-line-wrapping-in-thunderbird/#comment-807</a></p>

<p>下文中提到的option设置在：Edit &ndash;> Preferences &ndash;> Advanced (General tab) &ndash;> Configure Editor：</p>

<blockquote><p>I am a happy user of the daily build of Thunderbird 3. Although it is still under development, is the best email client for Linux I’ve tried so far, at least, the one that better works for me. Email search &amp; filtering is fast and reliable.</p>

<p>The only thing I don’t like is that wrapping your emails to 72 characters when sending plain text is not straightforward. Once you have selected to send your emails as plain text and have set the line wrap option to 72, there is still one more option to tweak.</p>

<p>Thunderbird has a “feature” that sends by default all plain text with the option format=flowed, which unwraps the email in the client receiver. To turn this feature off, you have to toggle one of the options in the chrome editor:</p>

<p>To disable flowed paragraphs, enforcing line breaks as formatted in the message, set the preference:</p>

<p>mailnews.display.disable_format_flowed_support true
(<a href="http://kb.mozillazine.org/Mail_content_types#Plain_text">http://kb.mozillazine.org/Mail_content_types#Plain_text</a>)</p>

<p>To disable paragraph flow when you send plain text messages, and in the plain text part of multipart messages, set the preference:</p>

<p>mailnews.send_plaintext_flowed false
(<a href="http://kb.mozillazine.org/Mail_content_types#Disabling_paragraph_flow">http://kb.mozillazine.org/Mail_content_types#Disabling_paragraph_flow</a>)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ChromeOS配置SSH Server]]></title>
    <link href="http://www.markzhang.cn/blog/2014/10/17/chromeos-enable-ssh-server/"/>
    <updated>2014-10-17T12:52:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/10/17/chromeos-enable-ssh-server</id>
    <content type="html"><![CDATA[<p>ChromeOS是一个相当"Linux"的OS。现在一般能拿到手的ChromeOS的设备很多都是Chromebook，所以本文是在一台Chromebook上做的测试。</p>

<p>ChromeOS默认的零售版本是什么开发类工具都没有的，包括ssh client都没有。要enable SSH client/server，首先要将ChromeOS切换到 <code>Developer Mode</code>。在我手上的这台Chromebook上，做法很简单，就是三键同按开机即可（ESC + Refresh + Power）。</p>

<p>具体的切换到 <code>Developer Mode</code> 的做法可以参考Google的ChromeOS网站上的文章。接下来来看怎么enable SSH Server。</p>

<!-- more -->


<p>以下内容完全参考了文章：</p>

<p><a href="http://www.de7ec7ed.com/2013/05/ssh-daemon-samsung-chromebook-exynos.html">http://www.de7ec7ed.com/2013/05/ssh-daemon-samsung-chromebook-exynos.html</a></p>

<p>所以在这里基本上是做一个英翻中的工作。</p>

<ul>
<li><p>首先启动Chrome浏览器，按下 <code>ctrl + alt + t</code>，开启Crosh（浏览器界面的一个Terminal程序）。Crosh也是只有将ChromeOS切换成 <code>Developer Mode</code> 之后才有的。</p></li>
<li><p>输入：<code>shell</code>，得到一个bash，然后输入 <code>sudo -i</code>，就可以得到root权限了。</p></li>
<li><p>mkdir -p /mnt/stateful_partition/etc/ssh</p></li>
<li><p>ssh-keygen -t dsa -f /mnt/stateful_partition/etc/ssh/ssh_host_dsa_key</p></li>
<li><p>ssh-keygen -t rsa -f /mnt/stateful_partition/etc/ssh/ssh_host_rsa_key</p></li>
<li><p>vi /etc/ssh/sshd_config，将 <code>PasswordAuthentication</code> 改成 <code>yes</code>。在这里也可以看到，为什么我们要在/mnt/stateful_partition下面创建etc/ssh目录，并在里面生成keys。就是因为在这个配置文件中指定了ssh key的路径。</p></li>
<li><p>/sbin/iptables -A INPUT -p tcp &mdash;dport 22 -j ACCEPT</p></li>
<li><p>给root用户设置一个密码，输入passwd即可。</p></li>
<li><p>/usr/sbin/sshd，这样SSH server就启动起来了，可以从其他机器登录过来了。</p></li>
</ul>


<p>题外话：如果你是 <code>cd /usr/sbin;./sshd</code>，或者 <code>/usr/sbin</code> 在PATH里面，直接输入 <code>sshd</code> 启动，你会发现sshd无法启动，错误是：</p>

<blockquote><p>sshd re-exec requires execution with an absolute path</p></blockquote>

<p>Stackexchange有这个问题的回答，很有意思，有两点：</p>

<blockquote><p>This is specific to OpenSSH from version 3.9 onwards.</p>

<p>For every new connection, sshd will re-execute itself, to ensure that all execute-time randomisations are re-generated for each new connection. In order for sshd to re-execute itself, it needs to know the full path to itself.</p>

<p>Here&rsquo;s a quote from the release notes for 3.9:</p>

<p>Make sshd(8) re-execute itself on accepting a new connection. This security measure ensures that all execute-time randomisations are reapplied for each connection rather than once, for the master process' lifetime. This includes mmap and malloc mappings, shared library addressing, shared library mapping order, ProPolice and StackGhost cookies on systems that support such things</p></blockquote>

<p>另外一个说法也有一定道理：</p>

<blockquote><p>This is to prevent someone from injecting a sshd program somewhere in one of the directories in your PATH and you inadvertently executing it.</p></blockquote>

<p>回到SSH server的配置上来，如果想ChromeOS开机的时候启动SSHD，写这样一个脚本放到 <code>/etc/init</code> 目录下面即可：</p>

<p>``` bash
start on started system-services
script</p>

<pre><code> /sbin/iptables -A INPUT -p tcp --dport 22 -j ACCEPT
 /usr/sbin/sshd
</code></pre>

<p>end script
```</p>

<p>最后，突然想到，要做上面的所有的事情，要求ChromeOS的root partition是可写的，但是默认情况下，ChromeOS的root partition是read-only的。需要修改的话这样做：</p>

<ul>
<li><p>/usr/share/vboot/bin/make_dev_ssd.sh &mdash;remove_rootfs_verification &mdash;partitions 2</p></li>
<li><p>做完上述命令后，需要重启ChromeOS</p></li>
<li><p>重启完成之后，再开启一个Crosh，执行：mount -o rw,remount /，就可以将root partition变成可写的了。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloneZilla磁盘克隆，超快的更换硬盘]]></title>
    <link href="http://www.markzhang.cn/blog/2014/06/03/ubuntu-disk-clone/"/>
    <updated>2014-06-03T12:49:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/06/03/ubuntu-disk-clone</id>
    <content type="html"><![CDATA[<p>开发用的PC机用的是一块128G的SSD，安装的Ubuntu 12.04，速度明显比机械硬盘快了好多，唯一的不足就是容量太小。于是最近购入了一块新的240G的SSD，需要将原来128G的SSD上的东西全部克隆过来。</p>

<p>对于Linux ext4文件分区系统的磁盘来说，<code>ghost</code>工作的并不好，工作的比较好的是<code>CloneZilla</code>，因为它能识别ext4的文件系统，从而使克隆变的无比快速，之前我写过一篇类似的文章：</p>

<p><a href="http://www.cnblogs.com/super119/archive/2012/09/26/2703479.html">http://www.cnblogs.com/super119/archive/2012/09/26/2703479.html</a></p>

<p>但是那一次的克隆是两块容量一样的磁盘，而这一次两块SSD的容量并不相同，所以我做了一些改变。</p>

<!-- more -->


<p>两块磁盘的容量不一样，我能想到的问题是，如果是克隆整块硬盘的话，那MBR部分也会被克隆过去，也就是说，源磁盘的分区信息也会被克隆到目的盘上，这样，会不会240G的SSD就会变成120G？我没有试验，有可能 <code>CloneZilla</code> 能帮我们解决这个问题，但是为了避免麻烦，我还是手动的克隆了。</p>

<p>所以我的做法是，不是克隆整个硬盘，而是只克隆源磁盘上的分区。完成之后，在目的盘上重建MBR信息，也就是在目的盘上恢复grub。具体我是这么做的：</p>

<ul>
<li><p>使用Ubuntu 12.04安装盘，进入Ubuntu Live（不是安装Ubuntu那个选项），然后使用Ubuntu的Disk Utility给目的盘分区</p></li>
<li><p>使用CloneZilla的启动ISO启动系统，可以把这个ISO刻成光盘，也可以使用UltraISO这种工具将ISO烧录到U盘上，然后从USB启动电脑。启动起来之后，按照 <code>CloneZilla</code> 提供的向导，一步一步进行即可，超级简单。将源磁盘每个分区都克隆到目的盘对应的分区上即可。100G的数据五分钟搞定。</p></li>
</ul>


<p><img src="/downloads/image/clonezilla.jpg" alt="CloneZilla Cloning" /></p>

<ul>
<li>接下来就可以将源磁盘从机器中拿出来了，我们只需要再把目的磁盘的MBR恢复就可以成功启动系统了。其实就是恢复grub的标准做法：首先还是使用Ubuntu的安装盘进入Ubuntu Live，然后打开终端，输入以下命令：</li>
</ul>


<p>``` bash</p>

<h1>Mount root partition to /mnt</h1>

<p>sudo mount /dev/sda1 /mnt
sudo mount &mdash;bind /dev /mnt/dev
sudo mount &mdash;bind /dev/pts /mnt/dev/pts
sudo mount &mdash;bind /proc /mnt/proc
sudo mount &mdash;bind /sys /mnt/sys</p>

<h1>Chroot into it and update grub</h1>

<p>sudo chroot /mnt
grub-install /dev/sda
grub-install &mdash;recheck /dev/sda
update-grub
exit</p>

<h1>Quit chroot environment and umount all stuffs</h1>

<p>sudo umount /mnt/dev &amp;&amp;
sudo umount /mnt/dev/pts &amp;&amp;
sudo umount /mnt/proc &amp;&amp;
sudo umount /mnt/sys &amp;&amp;
sudo umount /mnt
```</p>

<p>这样就完成了，在我的机器上，/dev/sda就是我新更换的240G的SSD，你需要根据你的机器上的磁盘配置来决定使用哪个磁盘。</p>

<p>上述操作来自文章：</p>

<p><a href="http://howtoubuntu.org/how-to-repair-restore-reinstall-grub-2-with-a-ubuntu-live-cd">http://howtoubuntu.org/how-to-repair-restore-reinstall-grub-2-with-a-ubuntu-live-cd</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Ubuntu上连接Juniper SSL VPN]]></title>
    <link href="http://www.markzhang.cn/blog/2014/03/20/juniper-vpn-on-ubuntu/"/>
    <updated>2014-03-20T22:26:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/03/20/juniper-vpn-on-ubuntu</id>
    <content type="html"><![CDATA[<p>现在国内很多外企都使用Juniper SSL VPN，来让员工可以在家连入到公司的网络。但是我发现，Juniper的SSL VPN在windows和Mac OS X上都可以很好的工作，但是在Ubuntu上貌似就有问题。就算你正确安装了Java Runtime，打开浏览器，<code>Host Checker</code> 和 <code>Network Connect</code> 也无法正常运行。有人说这是因为现在我们大多使用64位的Ubuntu，而 <code>Host Checker</code> 和 <code>Network Connect</code> 需要32位的浏览器和32位的JRE才能工作。</p>

<p>我没有去深究32位的Ubuntu下是否Juniper VPN就真的可以正常工作了，因为我找到了一个更简单的办法。</p>

<!-- more -->


<p>这个方法来自这位大神，他自己分析了Juniper SSL VPN的工作过程，然后写了一个perl脚本解决了这个问题：</p>

<p><a href="http://smallhacks.wordpress.com/2012/07/15/jvpn-perl-script-to-connect-to-the-juniper-vpn-with-host-checker-enabled/">http://smallhacks.wordpress.com/2012/07/15/jvpn-perl-script-to-connect-to-the-juniper-vpn-with-host-checker-enabled/</a></p>

<p>对原理感兴趣的可以自己去看这篇文章（可能需要翻墙），这里简述一下步骤：</p>

<ul>
<li><p>从上面的文章提供的地址，下载 <code>jvpn-0.7.0.tar.bz2</code>。</p></li>
<li><p>解开，将配置文件 <code>jvpn.ini</code> 拷贝一份以便输入自己的配置，比如：<code>cp jvpn.ini mark.ini</code>，然后编辑这些配置项：</p></li>
</ul>


<p><code>bash
host: 你的VPN server的地址
username: 用户名
realm: 区域，一般的外企应该是 `Employee` 或者 `Contractor`
verifycert: 是否验证SSL证书，如果你本地没有导入你的VPN server的SSL的证书的，可以写0，否则写1
dnsprotect: 这可以防止Ubuntu的NetworkManager修改 `/etc/resolv.conf` 。我们需要修改这个文件从而修改DNS server的配置。
mode: `ncsvc/ncui` 都可以
</code></p>

<ul>
<li>然后就可以执行：<code>sudo perl ./jvpn.pl --conf mark.ini</code>。成功了就可以看到连到了VPN，按 <code>Ctrl+C</code> 可以中断连接。</li>
</ul>


<p><strong> Troubleshooting </strong></p>

<ul>
<li><code>sudo apt-get install libterm-readkey-perl</code>，如果jvpn.pl说 <code>Term::ReadKey module</code> 找不到的话</li>
<li><code>sudo apt-get install lib32z1</code>，如果出现这样的错误： <code>libz.so.1: cannot open shared object file: No such file or directory</code></li>
<li><code>sudo apt-get install gcc-multilib</code>，如果看到这样的错误： <code>bits/predefs.h: No such file or directory</code></li>
<li><code>sudo apt-get install libhttp-request-ascgi-perl</code>，如果jvpn.pl说 <code>HTTP::Request module</code> 找不到的话</li>
</ul>


<p>这样在Ubuntu下，就可以使用Juniper SSL VPN了。很多外企的网络，自带翻墙，所以拨上VPN之后，除了工作之外，还可以实现自动翻墙。配合上chnroute，就完美了。不清楚chnroute有啥作用的，可以看我之前写的一篇文章：</p>

<p><a href="http://markzhang.cn/blog/2013/12/04/chnroutes-on-mac/">Chnroutes的使用（Mac OS X Mavericks）</a></p>

<p>最后附上目前最新版本的jvpn 0.7.0：<a href="/downloads/soft/jvpn-0.7.0.tar.bz2">jvpn-0.7.0.tar.bz2</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VirtualBox中安装Ubuntu，在有VPN的情况下会有DNS的问题]]></title>
    <link href="http://www.markzhang.cn/blog/2014/02/08/virtualbox-ubuntu-dns-issue/"/>
    <updated>2014-02-08T21:11:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/02/08/virtualbox-ubuntu-dns-issue</id>
    <content type="html"><![CDATA[<p>标题表达的不是很清楚（否则标题就太长了。。。），意思是：如果我们在一台windows的机器上安装了VirtualBox，然后在里面安装Ubuntu，然后在windows中连上VPN，此时Ubuntu虚拟机中就会有DNS的问题。我测试的是最新版本的VirtualBox，Ubuntu是12.04的版本，不知道将来这个问题会不会解决。</p>

<!-- more -->


<p>发现这个问题是因为我使用的VPN是可以翻墙的，举例来说可以访问到youtube，但是我发现在我的Ubuntu虚拟机中就无法访问youtube和其他一些我需要的网站。而且我发现Ubuntu中，浏览器的现象就是DNS解析都完成不了，所以就一直无法打开。</p>

<p>经过Google，在这里发现了答案：</p>

<p><a href="http://superuser.com/questions/570984/virtualbox-guest-ubuntu-loses-dns-when-host-connects-to-vpn">http://superuser.com/questions/570984/virtualbox-guest-ubuntu-loses-dns-when-host-connects-to-vpn</a></p>

<p>简单来说，你只需要这样做：</p>

<ol>
<li>关闭虚拟机</li>
<li>在Windows中打开cmd.exe，然后输入：</li>
</ol>


<p><code>
C:\Program Files\Oracle\VirtualBox\VBoxManage.exe modifyvm "ubuntu" --natdnshostresolver1 on
</code></p>

<p>命令中的<code>ubuntu</code>是我的ubuntu虚拟机的名字（VM name）。</p>

<p>上述链接中，作者也不太明白为什么，他是这么说的：</p>

<blockquote><p>I suspect it&rsquo;s because when the VPN is active, the host is doing something special for DNS lookups besides just forwarding requests to the specified DNS servers that VirtualBox picked up from the Windows config.</p></blockquote>
]]></content>
  </entry>
  
</feed>
