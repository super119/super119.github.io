<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Make Things Cool]]></title>
  <link href="http://www.markzhang.cn/atom.xml" rel="self"/>
  <link href="http://www.markzhang.cn/"/>
  <updated>2013-12-01T17:44:30+08:00</updated>
  <id>http://www.markzhang.cn/</id>
  <author>
    <name><![CDATA[Mark Zhang]]></name>
    <email><![CDATA[super119@139.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Device Tree: Interrupts的解释]]></title>
    <link href="http://www.markzhang.cn/blog/2013/11/27/dt-interrupts/"/>
    <updated>2013-11-27T20:41:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2013/11/27/dt-interrupts</id>
    <content type="html"><![CDATA[<p>Linux kernel现在使用Device tree（DT）来描述硬件设备。既然是描述硬件设备，那自然就需要对硬件充分了解才能理解DT。Interrupts就是一个例子。</p>

<p>一般来说，DT中的 <code>interrupts</code> （本文不描述interrupt controller）看起来是这样的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">pmu</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">compatible</span> <span class="o">=</span> <span class="s">&quot;arm,cortex-a9-pmu&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">interrupts</span> <span class="o">=</span> <span class="o">&lt;</span><span class="mi">0</span> <span class="mi">144</span> <span class="mh">0x04</span>
</span><span class='line'>            <span class="mi">0</span> <span class="mi">145</span> <span class="mh">0x04</span>
</span><span class='line'>            <span class="mi">0</span> <span class="mi">146</span> <span class="mh">0x04</span>
</span><span class='line'>            <span class="mi">0</span> <span class="mi">147</span> <span class="mh">0x04</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>可以看到 <code>interrupts</code> 有三个member，对于这三个member，Linux kernel的文档是这样说的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">The</span> <span class="mi">1</span><span class="n">st</span> <span class="n">cell</span> <span class="n">is</span> <span class="n">the</span> <span class="n">interrupt</span> <span class="n">type</span><span class="p">;</span> <span class="mi">0</span> <span class="k">for</span> <span class="n">SPI</span> <span class="n">interrupts</span><span class="p">,</span> <span class="mi">1</span> <span class="k">for</span> <span class="n">PPI</span>
</span><span class='line'><span class="n">interrupts</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">The</span> <span class="mi">2</span><span class="n">nd</span> <span class="n">cell</span> <span class="n">contains</span> <span class="n">the</span> <span class="n">interrupt</span> <span class="n">number</span> <span class="k">for</span> <span class="n">the</span> <span class="n">interrupt</span> <span class="n">type</span><span class="p">.</span>
</span><span class='line'><span class="n">SPI</span> <span class="n">interrupts</span> <span class="n">are</span> <span class="n">in</span> <span class="n">the</span> <span class="n">range</span> <span class="p">[</span><span class="mi">0</span><span class="o">-</span><span class="mi">987</span><span class="p">].</span>  <span class="n">PPI</span> <span class="n">interrupts</span> <span class="n">are</span> <span class="n">in</span> <span class="n">the</span>
</span><span class='line'><span class="n">range</span> <span class="p">[</span><span class="mi">0</span><span class="o">-</span><span class="mi">15</span><span class="p">].</span>
</span><span class='line'>
</span><span class='line'><span class="n">The</span> <span class="mi">3</span><span class="n">rd</span> <span class="n">cell</span> <span class="n">is</span> <span class="n">the</span> <span class="n">flags</span><span class="p">,</span> <span class="n">encoded</span> <span class="n">as</span> <span class="n">follows</span><span class="o">:</span>
</span><span class='line'>  <span class="n">bits</span><span class="p">[</span><span class="mi">3</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="n">trigger</span> <span class="n">type</span> <span class="n">and</span> <span class="n">level</span> <span class="n">flags</span><span class="p">.</span>
</span><span class='line'>      <span class="mi">1</span> <span class="o">=</span> <span class="n">low</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">high</span> <span class="n">edge</span> <span class="n">triggered</span>
</span><span class='line'>      <span class="mi">2</span> <span class="o">=</span> <span class="n">high</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">low</span> <span class="n">edge</span> <span class="n">triggered</span>
</span><span class='line'>      <span class="mi">4</span> <span class="o">=</span> <span class="n">active</span> <span class="n">high</span> <span class="n">level</span><span class="o">-</span><span class="n">sensitive</span>
</span><span class='line'>      <span class="mi">8</span> <span class="o">=</span> <span class="n">active</span> <span class="n">low</span> <span class="n">level</span><span class="o">-</span><span class="n">sensitive</span>
</span><span class='line'>  <span class="n">bits</span><span class="p">[</span><span class="mi">15</span><span class="o">:</span><span class="mi">8</span><span class="p">]</span> <span class="n">PPI</span> <span class="n">interrupt</span> <span class="n">cpu</span> <span class="n">mask</span><span class="p">.</span>  <span class="n">Each</span> <span class="n">bit</span> <span class="n">corresponds</span> <span class="n">to</span> <span class="n">each</span> <span class="n">of</span>
</span><span class='line'>  <span class="n">the</span> <span class="mi">8</span> <span class="n">possible</span> <span class="n">cpus</span> <span class="n">attached</span> <span class="n">to</span> <span class="n">the</span> <span class="n">GIC</span><span class="p">.</span>  <span class="n">A</span> <span class="n">bit</span> <span class="n">set</span> <span class="n">to</span> <span class="sc">&#39;1&#39;</span> <span class="n">indicated</span>
</span><span class='line'>  <span class="n">the</span> <span class="n">interrupt</span> <span class="n">is</span> <span class="n">wired</span> <span class="n">to</span> <span class="n">that</span> <span class="n">CPU</span><span class="p">.</span>  <span class="n">Only</span> <span class="n">valid</span> <span class="k">for</span> <span class="n">PPI</span> <span class="n">interrupts</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>来自：<code>Documentation/devicetree/bindings/arm/gic.txt</code></em></p>

<p>如果不了解ARM GIC的话，其实也看不懂上面的描述，所以这里解释一下：</p>

<ol>
<li>第一个member表示该 <code>interrupt</code> 是 <code>SPI</code> 还是 <code>PPI</code>。<code>SPI</code> 和 <code>PPI</code> 的解释如下，来自ARM的文档：</li>
</ol>


<blockquote><p>Private Peripheral Interrupts</p>

<p>A PPI is an interrupt generated by a peripheral that is specific to a single processor. There are seven PPIs for each CPU interface.</p></blockquote>

<p>这是ARM A15的 <code>PPI</code> 的描述，如果是A9的话，每个CPU interface是5个 <code>PPI</code>。</p>

<blockquote><p>Shared Peripheral Interrupts</p>

<p>An interrupt generated by a peripheral that the Interrupt Controller can route to any, or all, processor interfaces.</p>

<p>SPIs are triggered by events generated on associated interrupt input lines. The GIC can support up to 224 SPIs corresponding to the external IRQS[223:0] signal. The number of SPIs available depends on the implemented configuration of the Cortex-A15 MPCore processor. The permitted values are 0, 32, 64, 96, 128, 160, 192, or 224. SPIs start at ID32. The SPIs can be configured to be edge-triggered or active-HIGH level-sensitive.</p></blockquote>

<p>第一句话就可以看出和 <code>PPI</code> 的区别。<code>SPI</code> 的数量可以配置，如32，64&hellip;最大支持224，而且SPI的编号从32开始。至于最后提到的 <code>edge-triggered</code>，<code>active-HIGH level-sensitive</code> 正好就是 <code>interrupts</code> 第三个member。</p>

<p>所以，在一颗SoC中，绝大部分的中断都是 <code>SPI</code>。</p>

<p>事实上，ARM还有一种中断：<code>SGI</code>，也就是软中断：</p>

<blockquote><p>Software Generated Interrupt (SGI)</p>

<p>Generated by writing to the Software Generated Interrupt Register (ICDSGIR).</p>

<p>A maximum of 16 SGIs can be generated for each Cortex-A9 processor interface.</p></blockquote>

<p>但是Device tree是用来描述硬件设备的，所以Linux kernel中 <code>interrupts</code> 的类型没有定义 <code>SGI</code>。</p>

<ol>
<li><p>第二个member就是具体的中断号了。查阅SoC的手册就可以得到。</p></li>
<li><p>第三个member指的是中断的触发方式，每个SoC是不同的，查阅SoC的手册就可以知道了。这里kernel的文档解释的还是比较清楚的，就是一个16bit的数，0-3, 8-15 bit分别做了定义。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git常见命令和配置]]></title>
    <link href="http://www.markzhang.cn/blog/2013/11/20/git-tips/"/>
    <updated>2013-11-20T21:01:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2013/11/20/git-tips</id>
    <content type="html"><![CDATA[<h2>常用配置</h2>

<figure class='code'><figcaption><span>git常用配置</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="k">[color]</span>
</span><span class='line'>        <span class="na">ui</span> <span class="o">=</span> <span class="s">auto</span>
</span><span class='line'><span class="k">[user]</span>
</span><span class='line'>        <span class="na">name</span> <span class="o">=</span> <span class="s">Mark Zhang</span>
</span><span class='line'><span class="s">        email = xxxx@xxxx.xxx</span>
</span><span class='line'><span class="k">[core]</span>
</span><span class='line'>        <span class="na">editor</span> <span class="o">=</span> <span class="s">vim</span>
</span><span class='line'><span class="s">        abbrev = 12</span>
</span><span class='line'><span class="k">[diff]</span>
</span><span class='line'>        <span class="na">tool</span> <span class="o">=</span> <span class="s">vimdiff</span>
</span><span class='line'><span class="s">        renames = true</span>
</span><span class='line'><span class="k">[difftool]</span>
</span><span class='line'>        <span class="na">prompt</span> <span class="o">=</span> <span class="s">No</span>
</span><span class='line'><span class="k">[sendemail]</span>
</span><span class='line'>        <span class="na">chainreplyto</span> <span class="o">=</span> <span class="s">false</span>
</span><span class='line'><span class="s">        smtpserver = xxxxxxxx</span>
</span><span class='line'><span class="s">        smtpencryption = tls</span>
</span><span class='line'><span class="s">        from = Mark Zhang &lt;xxxx@xxx.xxx&gt;</span>
</span><span class='line'><span class="s">        envelopesender = auto</span>
</span><span class='line'><span class="k">[alias]</span>
</span><span class='line'>        <span class="na">s</span> <span class="o">=</span> <span class="s">status</span>
</span><span class='line'><span class="s">        cp = cherry-pick</span>
</span><span class='line'><span class="s">        ck = checkout</span>
</span><span class='line'><span class="s">        b = branch</span>
</span><span class='line'><span class="s">        lo = log --oneline</span>
</span><span class='line'><span class="s">        dt = difftool</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>常用命令</h2>

<ul>
<li><code>git remote add &lt;name&gt; &lt;url&gt;</code></li>
</ul>


<p>如果要添加本地的一个git repository的话，<url>填写成 <code>git repository的路径/.git</code> 即可。</p>

<ul>
<li><p><code>git fetch -p &lt;remote name, e.g: origin&gt;</code></p></li>
<li><p><code>git show &lt;commit id&gt;</code></p></li>
<li><p><code>git push origin HEAD:next</code></p></li>
</ul>


<p>Push本地HEAD commit对应的branch到名为 <code>origin</code> 的远端仓库的 <code>next</code> branch上。</p>

<ul>
<li><code>git push origin +HEAD:next / git push -f origin HEAD:next</code></li>
</ul>


<p>所谓的Force update，也就是用本地的commit历史覆盖远端的。</p>

<ul>
<li><code>git push origin :next</code></li>
</ul>


<p>删除远端仓库的 <code>next</code> branch。</p>

<ul>
<li><code>git push --tags</code></li>
</ul>


<p>Push本地的tag列表到远端。</p>

<ul>
<li><p><code>git format-patch -&lt;N&gt;</code></p></li>
<li><p><code>git format-patch &lt;commit id&gt;^..&lt;commit id&gt;</code></p></li>
</ul>


<p>这个命令可以用来为一个指定的commit生成patch。</p>

<ul>
<li><p><code>git format-patch --subject-prefix 'PATCH V2' --cover-letter</code></p></li>
<li><p><code>git send-email --to=XXX --to=XXX --cc=XXX *.patch</code></p></li>
<li><p><code>git send-email --no-signed-off-cc --to=XXX --to=XXX --cc=XXX *.patch</code></p></li>
<li><p><code>git rebase -i &lt;commit id&gt;</code></p></li>
<li><p><code>git checkout &lt;branch&gt; -- &lt;file path&gt;</code></p></li>
</ul>


<p>这个命令将指定branch中的指定文件checkout出来，更新当前working tree中的对应文件。</p>

<ul>
<li><code>git show &lt;branch&gt;:&lt;file path&gt; &gt;&amp; &lt;filename&gt;</code></li>
</ul>


<p>这个命令将指定branch中的指定文件checkout出来，并存到 <code>&lt;filename&gt;</code> 指定的路径上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linus说，请将这个配置加到你的.gitconfig]]></title>
    <link href="http://www.markzhang.cn/blog/2013/11/07/linus-git-config/"/>
    <updated>2013-11-07T18:18:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2013/11/07/linus-git-config</id>
    <content type="html"><![CDATA[<p>近日Linus说，请将 <code>git config core.abbrev 12</code> 加到你的git repository中。事实上，这个config很有意义，可以加到你的全局git config中：</p>

<!-- more -->


<p><code>git config --global core.abbrev 12</code>。</p>

<p>原因简单来说就是，git默认的7个字符的短HASH表示方法经常导致冲突，所以Linus建议改成12个字符。原文引用如下：</p>

<blockquote><p>Linus jumped in to say that he would like everybody to run this command in their repositories:</p>

<p>   git config core.abbrev 12</p>

<p>That causes git to abbreviate commit hashes to 12 characters. The default of seven characters is too small to prevent occasional hash collisions in the kernel; it was, he said, a big mistake made early in git&rsquo;s history. He also noted that he spends a lot of time fixing up hashes in patch, many of which are &ldquo;clearly bogus.&rdquo; Most of the problems, most likely, are caused by the rebasing of trees.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在博客内容中插入Liquid代码时的注意点]]></title>
    <link href="http://www.markzhang.cn/blog/2013/11/07/embed-liquid-codes-in-blog/"/>
    <updated>2013-11-07T09:44:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2013/11/07/embed-liquid-codes-in-blog</id>
    <content type="html"><![CDATA[<p>Octopress/Jekyll一个很好的功能就是可以非常方便的插入代码，深得码农的喜爱。不过这里有一个注意点就是，如果你插入的代码中含有Liquid代码，那很可能会导致编译出错，比如：</p>

<!-- more -->




<figure class='code'><figcaption><span>rake generate出错信息</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">## Generating Site with Jekyll</span>
</span><span class='line'>unchanged sass/screen.scss
</span><span class='line'>Configuration from /home/markz/Projects/blog/_config.yml
</span><span class='line'>Building site: <span class="nb">source</span> -&gt; public
</span><span class='line'>Liquid Exception: <span class="k">if </span>tag was never closed in 2013-11-05-add-uyan-comment.markdown
</span><span class='line'>/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/liquid-2.3.0/lib/liquid/block.rb:88:in <span class="sb">`</span>assert_missing_delimitation!<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/liquid-2.3.0/lib/liquid/block.rb:49:in `parse&#39;</span>
</span><span class='line'>/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/liquid-2.3.0/lib/liquid/tag.rb:10:in <span class="sb">`</span>initialize<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/liquid-2.3.0/lib/liquid/tags/if.rb:24:in `initialize&#39;</span>
</span><span class='line'>/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/liquid-2.3.0/lib/liquid/block.rb:28:in <span class="sb">`</span>new<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/liquid-2.3.0/lib/liquid/block.rb:28:in `parse&#39;</span>
</span><span class='line'>/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/liquid-2.3.0/lib/liquid/document.rb:5:in <span class="sb">`</span>initialize<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/liquid-2.3.0/lib/liquid/template.rb:58:in `new&#39;</span>
</span><span class='line'>/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/liquid-2.3.0/lib/liquid/template.rb:58:in <span class="sb">`</span>parse<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/liquid-2.3.0/lib/liquid/template.rb:46:in `parse&#39;</span>
</span><span class='line'>/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/convertible.rb:79:in <span class="sb">`</span>do_layout<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/work/markz/Projects/blog/plugins/post_filters.rb:167:in `do_layout&#39;</span>
</span><span class='line'>/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/post.rb:195:in <span class="sb">`</span>render<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:200:in `block in render&#39;</span>
</span><span class='line'>/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:199:in <span class="sb">`</span>each<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:199:in `render&#39;</span>
</span><span class='line'>/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/lib/jekyll/site.rb:41:in <span class="sb">`</span>process<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/home/markz/.rbenv/versions/1.9.3-p0/lib/ruby/gems/1.9.1/gems/jekyll-0.12.0/bin/jekyll:264:in `&lt;top (required)&gt;&#39;</span>
</span><span class='line'>/home/markz/.rbenv/versions/1.9.3-p0/bin/jekyll:23:in <span class="sb">`</span>load<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">/home/markz/.rbenv/versions/1.9.3-p0/bin/jekyll:23:in `&lt;main&gt;&#39;</span>
</span><span class='line'>Build Failed
</span></code></pre></td></tr></table></div></figure>


<p>原因地球人都知道，就是博客中插入的代码含有Liquid的if标签。解决办法有两种：</p>

<ol>
<li><p>使用<code>{% include_file %}</code>。将代码存成一个文件，然后将其include到博客中来。</p></li>
<li><p>使用raw标签，将代码（包含三个backticks）使用<code>{% raw %}</code>，<code>{% endraw %}</code>包起来即可。</p></li>
</ol>


<p><strong>Note:</strong> 上文中要将raw和endraw打印出来需要将其转义，其他标签都可以用<code>raw/endraw</code>搞定，但是要转义他们本身，要这么写：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">{{</span> <span class="s2">&quot;{% raw &quot;</span> <span class="o">}}</span>%<span class="o">}</span> <span class="o">{{</span> <span class="s2">&quot;{% endraw &quot;</span> <span class="o">}}</span>%<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Octopress中使用友言，替换Disqus]]></title>
    <link href="http://www.markzhang.cn/blog/2013/11/05/add-uyan-comment/"/>
    <updated>2013-11-05T21:56:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2013/11/05/add-uyan-comment</id>
    <content type="html"><![CDATA[<p>Disqus应该是国外做的一个评论系统，按现在时髦的话说，不太接中国的地气，所以考虑换一个评论系统。具体做起来非常的简单，Octopress就像一个模板系统，以前Java火热的时候用过Velocity，大体思路都是利用一些markdown的语法填在预先写好的模板文件中，然后解析器解释该文件，从而生成最终需要的东西。</p>

<p>在Octopress中，发表的博客文章使用的模板是<code>source/_layout/post.html</code>，打开之后搜索disqus就可以发现原来的disqus部分的代码。所以要将其替换成其他的评论系统就很直观了。这里我使用了友言，因为Google了一下貌似现在国内友言做的还不错。</p>

<p>总体来说就是三步：</p>

<!-- more -->


<ol>
<li>在<code>_config.yml</code>中添加一个配置项，比如<code>uyan_id: xxx</code></li>
<li>添加一个被include的文件，用来存放友言提供给我们的插入代码，比如：<code>source/_include/post/uyan_comments.html</code></li>
<li>修改<code>source/_layout/post.html</code>，将disqus的部分替换成使用友言。</li>
</ol>


<p>以下就是我的修改：</p>

<figure class='code'><figcaption><span>上述三点的改动 diff (uyan-comments-changes.diff)</span> <a href='http://www.markzhang.cn/downloads/code/uyan-comments-changes.diff'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/_config.yml b/_config.yml</span>
</span><span class='line'><span class="gh">index 6caabf1..98a32c8 100644</span>
</span><span class='line'><span class="gd">--- a/_config.yml</span>
</span><span class='line'><span class="gi">+++ b/_config.yml</span>
</span><span class='line'><span class="gu">@@ -93,6 +93,9 @@ delicious_count: 3</span>
</span><span class='line'> disqus_short_name:
</span><span class='line'> disqus_show_comment_count: false
</span><span class='line'>
</span><span class='line'><span class="gi">+# Uyan Comments</span>
</span><span class='line'><span class="gi">+uyan_id: &lt;填写你的友言的uid&gt;</span>
</span><span class='line'><span class="gi">+</span>
</span><span class='line'> # Google Analytics
</span><span class='line'> google_analytics_tracking_id:
</span><span class='line'>
</span><span class='line'><span class="gh">diff --git a/source/_includes/post/uyan_comments.html b/source/_includes/post/uyan_comments.html</span>
</span><span class='line'>new file mode 100644
</span><span class='line'><span class="gh">index 0000000..7e063c3</span>
</span><span class='line'><span class="gd">--- /dev/null</span>
</span><span class='line'><span class="gi">+++ b/source/_includes/post/uyan_comments.html</span>
</span><span class='line'><span class="gu">@@ -0,0 +1,4 @@</span>
</span><span class='line'><span class="gi">+&lt;!-- UY BEGIN --&gt;</span>
</span><span class='line'><span class="gi">+&lt;div id=&quot;uyan_frame&quot;&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="gi">+&lt;script type=&quot;text/javascript&quot; src=&quot;http://v2.uyan.cc/code/uyan.js?uid={{ site.uyan_id }}&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="gi">+&lt;!-- UY END --&gt;</span>
</span><span class='line'><span class="gh">diff --git a/source/_layouts/post.html b/source/_layouts/post.html</span>
</span><span class='line'><span class="gh">index da9e9c4..36bd433 100644</span>
</span><span class='line'><span class="gd">--- a/source/_layouts/post.html</span>
</span><span class='line'><span class="gi">+++ b/source/_layouts/post.html</span>
</span><span class='line'><span class="gu">@@ -25,10 +25,10 @@ single: true</span>
</span><span class='line'>     &lt;/p&gt;
</span><span class='line'>   &lt;/footer&gt;
</span><span class='line'> &lt;/article&gt;
</span><span class='line'><span class="gd">-{% if site.disqus_short_name and page.comments == true %}</span>
</span><span class='line'><span class="gi">+{% if site.uyan_id and page.comments == true %}</span>
</span><span class='line'>   &lt;section&gt;
</span><span class='line'>     &lt;h1&gt;Comments&lt;/h1&gt;
</span><span class='line'><span class="gd">-    &lt;div id=&quot;disqus_thread&quot; aria-live=&quot;polite&quot;&gt;{% include post/disqus_thread.html %}&lt;/div&gt;</span>
</span><span class='line'><span class="gi">+    {% include post/uyan_comments.html %}</span>
</span><span class='line'>   &lt;/section&gt;
</span><span class='line'> {% endif %}
</span><span class='line'> &lt;/div&gt;
</span></code></pre></td></tr></table></div></figure>


<p><strong>Note:</strong> 有一个注意点就是友言会采集当前域名作为评论来源的一个index，来归类存放你的留言。所以在<code>rake preview</code>的时候，是看不到友言的评论框的。只有将你的博客上传到了网络上之后，你才能看到。因为很多时候我们开发完了都会使用<code>rake preview</code>先在本地<code>http://localhost:4000</code>上看一下，所以这是看不到的，并不是代码有问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[博客 Code Names]]></title>
    <link href="http://www.markzhang.cn/blog/2013/11/04/blog-code-names/"/>
    <updated>2013-11-04T20:46:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2013/11/04/blog-code-names</id>
    <content type="html"><![CDATA[<p>跟老美共事发现它们很喜欢每件事情都起个Code Name，所以我也给我的博客每年都取一个Code Name。命名的逻辑跟Ubuntu一样，从2013年的H开始，每个Code Name都是两个单词且开头字母相同。如下：</p>

<!-- more -->


<p>2014 Imagine Illimitable</p>

<p>2013 Happy Hacking</p>
]]></content>
  </entry>
  
</feed>
