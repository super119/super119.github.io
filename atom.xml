<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Make Things Cool]]></title>
  <link href="http://www.markzhang.cn/atom.xml" rel="self"/>
  <link href="http://www.markzhang.cn/"/>
  <updated>2014-09-01T21:51:41+08:00</updated>
  <id>http://www.markzhang.cn/</id>
  <author>
    <name><![CDATA[Mark Zhang]]></name>
    <email><![CDATA[super119@139.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RouterOS配置记录（四）：OpenVPN Client]]></title>
    <link href="http://www.markzhang.cn/blog/2014/09/01/ros-openvpn/"/>
    <updated>2014-09-01T15:42:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/09/01/ros-openvpn</id>
    <content type="html"><![CDATA[<p>OpenVPN是现在使用相当广泛的一种VPN solution。它不使用特定协议（比如PPTP依赖于GRE协议，如果GRE协议被墙，PPTP就完了），也不使用特定端口，TCP/UDP都支持，性能表现也相当优异（UDP）。所以现在使用OpenVPN作为VPN的solution很多，在Mikrotik的论坛上可以找到大量赞美OpenVPN的帖子。</p>

<p>但是，事实上当我把OpenVPN全部配置完成之后，发现两个问题：</p>

<!-- more -->


<ul>
<li>OpenVPN已被墙，应该就是2013年（或者更早）的事情。虽然上面提到了OpenVPN不使用特定协议，不使用特定端口，但是聪明的GFW还是找到了OpenVPN TLS验证时的特征并墙之。所以如果你辛辛苦苦配置好了服务器端和客户端，客户端拨号的时候发现：&#8221;Peer disconnected/Connection reset&#8221;，那就是被墙的标志。OpenVPN TLS验证的时候，连接直接被reset了。</li>
</ul>


<p>针对这个问题，当然也有解决方案，那就是模糊TLS验证的数据，让GFW寻不到TLS的特征，比如：</p>

<p><a href="http://igfw.net/archives/13018">http://igfw.net/archives/13018</a></p>

<p>但是这种做法是没法在ROS上实现的。因为这要求修改OpenVPN sever和client的代码，而我们是无法修改ROS中的OpenVPN的实现的。</p>

<ul>
<li>ROS不支持UDP模式的OpenVPN。这个已经被广大ROS用户诟病已久，但不知道为什么Mikrotik就是不改：</li>
</ul>


<p><a href="http://forum.mikrotik.com/viewtopic.php?f=1&amp;t=26499">http://forum.mikrotik.com/viewtopic.php?f=1&amp;t=26499</a></p>

<p>TCP模式的OpenVPN延迟（latency）很高，不适合诸如电话会议、在线游戏等场景。</p>

<p>所以坦白说，有上述的两个问题，ROS+OpenVPN，已经没有太多的使用价值了。但是既然我已经将其配置完成了，所以本文还是将过程记录了下来。</p>

<h2>OpenVPN server侧配置</h2>

<p>OpenVPN server侧的配置稍微复杂一些，关键是要生成一堆证书、秘钥。但是也不是复杂到没法忍，关键是要有一篇好的turtorial。所以这里是我找到的一篇很好的文章，照做就行：</p>

<p><a href="https://www.linode.com/docs/networking/vpn/secure-communications-with-openvpn-on-ubuntu-12-04-precise-and-debian-7">Secure communications with OpenVPN on Ubuntu 12.04</a></p>

<p>照着上面的文章做就可以了，这里再给出我最终的OpenVPN server的配置文件作为一个参考：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>port 3389
</span><span class='line'>proto tcp
</span><span class='line'>dev tun
</span><span class='line'>
</span><span class='line'><span class="c">#Keys</span>
</span><span class='line'>ca /etc/openvpn/easy-rsa/2.0/keys/ca.crt
</span><span class='line'>cert /etc/openvpn/easy-rsa/2.0/keys/server.crt
</span><span class='line'>key /etc/openvpn/easy-rsa/2.0/keys/server.key
</span><span class='line'>dh /etc/openvpn/easy-rsa/2.0/keys/dh1024.pem
</span><span class='line'>
</span><span class='line'><span class="c"># This will be the internal tun0 connection IP</span>
</span><span class='line'>server 10.8.0.0 255.255.255.0
</span><span class='line'>ifconfig-pool-persist ipp.txt
</span><span class='line'>
</span><span class='line'><span class="c"># This will send all of a client&#39;s 10.x.x.x traffic through the VPN</span>
</span><span class='line'><span class="c"># push &quot;route 10.0.0.0 255.0.0.0&quot;</span>
</span><span class='line'>keepalive 10 120
</span><span class='line'>
</span><span class='line'><span class="c"># Mikrotik does not support LZO compression</span>
</span><span class='line'><span class="c">#comp-lzo</span>
</span><span class='line'>
</span><span class='line'>auth SHA1
</span><span class='line'><span class="c"># Select a cryptographic cipher.</span>
</span><span class='line'><span class="c">#cipher BF-CBC        # Blowfish (default)</span>
</span><span class='line'>cipher AES-256-CBC
</span><span class='line'>
</span><span class='line'><span class="c">#user nobody</span>
</span><span class='line'><span class="c">#group nogroup</span>
</span><span class='line'>status /var/log/openvpn/openvpn-status.log
</span><span class='line'>
</span><span class='line'>persist-key
</span><span class='line'>persist-tun
</span><span class='line'>verb 3
</span></code></pre></td></tr></table></div></figure>


<p>几点解释：</p>

<ol>
<li>ROS的OpenVPN client只支持TCP，所以这里使用TCP模式：<code>proto tcp</code>。</li>
<li>被注释的那句：<code>push "route 10.0.0.0 255.0.0.0"</code> 是可以用来给客户端设置路由表的，但是由于我的ROS有chnroutes，所以我会在我的ROS上设置路由表，所以我的OpenVPN server侧就没有push路由表给客户端了。</li>
<li><code>comp-lzo</code> 一定要注释掉，这是因为ROS OpenVPN client不支持这个。所以ROS的OpenVPN UDP不支持，数据压缩又不支持，你就可以想想Mikrotik论坛上大家的怨气有多大了。有空可以上去搜看相关的帖子，相当欢乐。</li>
<li>有关cipher，Blowfish, AES这些ROS OpenVPN client都是支持的，所以可以自由选择。使用默认的Blowfish就挺好。</li>
<li>最后的 <code>verb 3</code> 可以改成诸如 <code>verb 6</code>，这样在 <code>/var/log/syslog</code> 中可以得到很多的log，客户端连不上OpenVPN server的时候，可以帮助调试和定位。</li>
</ol>


<p>配置完成之后，<code>sudo service openvpn restart</code>，OpenVPN server就ready了。</p>

<h2>OpenVPN client侧配置（ROS）</h2>

<p>相比server侧，ROS上client的配置就相对简单了很多。</p>

<p>首先是上传证书和秘钥到ROS上：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-system-certificates.png" alt="Certificates" /></p>

<p>这里其实是3个文件，client的公钥和私钥，还有就是server的证书，这三个文件首先upload到ROS上，然后在上图中点击 <code>Import</code> 按钮就可以导入了。</p>

<p>然后就是创建一个OpenVPN的client了：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-ppp-openvpn.png" alt="PPP Create OpenVPN Client" /></p>

<p>几点说明：</p>

<ol>
<li><code>Connect To</code> 和 <code>Port</code> 不用说了</li>
<li><code>Mode</code> ，这个有两个选项：<code>IP</code> 和 <code>Ethernet</code>，这表示数据是走layer 3还是layer 2，反映到VPN创建出来的本地虚拟网卡，就是tun还是tap，一般来说OpenVPN都是tun，所以这里是选择 <code>IP</code>。如果你使用PPTP，就可以看到虚拟网卡是tap。</li>
<li><code>User</code>，这个其实不需要，因为OpenVPN是使用证书来识别client的，每个client都会有一个证书。但是这里ROS需要填一个用户名，所以随便填一个就好（貌似OpenVPN也可以支持username/password的那种验证的，我没去调查）。</li>
<li><code>Profile</code>，因为在下面会选择加密方式等，所以profile就选default就好，default意思就是按照server的默认设置来。</li>
<li><code>Certificate</code>，这里要选择你upload到ROS上的，client的私钥，这个私钥是用来解密数据的。</li>
<li><code>Auth</code> / <code>Cipher</code>，这个就选成跟server端的配置一致即可。</li>
</ol>


<h2>结束</h2>

<p>所以总的来说，OpenVPN的配置并不复杂，只是ROS不支持UDP的OpenVPN，所以用来翻墙看看网页还是可以的，玩游戏啥的就要差不少。不过OpenVPN作为一个free的，性能优良的VPN solution，在国内网络中使用也是相当不错的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RouterOS配置记录（三）：DDNS]]></title>
    <link href="http://www.markzhang.cn/blog/2014/08/21/ros-ddns/"/>
    <updated>2014-08-21T15:26:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/08/21/ros-ddns</id>
    <content type="html"><![CDATA[<p>配置动态DNS主要是为了能让你的RouterBoard在Internet上被访问到，这样我就可以远程控制我的RouterBoard，同时也可以开始做端口映射，在内网做server&hellip;等。</p>

<p>在ROS上配置DDNS非常简单，就是写一个script然后放到ROS的 <code>System</code> &ndash;> <code>Scheduler</code> 中就好了。不过在此之前，先去申请一个DDNS，我用的是3322的。</p>

<p>不过在开始之前，你要先确保你的宽带连接拨号之后，得到的是一个真实的IP地址。现在电信/联通/移动宽带有的时候拨号会得到一个假IP地址，比如 <code>192.168.x.x</code>，<code>10.x.x.x</code>，甚至之前我得到过 <code>100.x.x.x</code>，这个也不是真实的IP地址（RFC编号为6598。RFC 6598 &ndash; IANA-Reserved IPv4 Prefix for Shared Address Space）。判断自己拨号得到的IP是否是真实IP很简单，打开 www.ipaddress.com，网站会告诉你你目前的IP地址，把这个IP跟你在ROS里面看到的你拨号得到的IP比较是不是一样就知道了。</p>

<p>如果你得到的不是真实的IP地址，那就说明在运营商那边还有一层NAT，那么你做DDNS就没有用了，除非你用花生壳客户端这种专门的软件，但是花生壳客户端软件是没法装在ROS上的。可以打电话给宽带运营商投诉，让它给你分配真实的IP地址，如果它不从你可以打工信部电话投诉（我没试过，网友们说可以）。</p>

<!-- more -->


<p>所以先来看一下这个script是长什么模样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>:global ednsuser <span class="s2">&quot;xxxxxxxx&quot;</span>
</span><span class='line'>:global ednspass <span class="s2">&quot;xxxxxxxx&quot;</span>
</span><span class='line'>:global ednshost <span class="s2">&quot;xxxxxxxx.3322.org&quot;</span>
</span><span class='line'>:global ednsinterface <span class="s2">&quot;SHUnicom&quot;</span>
</span><span class='line'>:global members <span class="s2">&quot;http://members.3322.net/dyndns/update\?system=dyndns&quot;</span>
</span><span class='line'>:global status
</span><span class='line'>:global status <span class="o">[</span>/interface get <span class="o">[</span>/interface find <span class="nv">name</span><span class="o">=</span><span class="nv">$ednsinterface</span><span class="o">]</span> running<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>:if <span class="o">(</span><span class="nv">$status</span>!<span class="o">=</span><span class="nb">false</span><span class="o">)</span> <span class="k">do</span><span class="o">={</span>
</span><span class='line'>:global ednslastip <span class="o">[</span>:resolve <span class="nv">$ednshost</span><span class="o">]</span>
</span><span class='line'>:if <span class="o">([</span> :typeof <span class="nv">$ednslastip</span> <span class="o">]</span> <span class="o">=</span> nil <span class="o">)</span> <span class="k">do</span><span class="o">={</span> :global ednslastip <span class="s2">&quot;0&quot;</span> <span class="o">}</span>
</span><span class='line'>:global ednsiph <span class="o">[</span> /ip address get <span class="o">[</span>/ip address find <span class="nv">interface</span><span class="o">=</span><span class="nv">$ednsinterface</span> <span class="o">]</span> address <span class="o">]</span>
</span><span class='line'>:global ednsip <span class="o">[</span>:pick <span class="nv">$ednsiph</span> 0 <span class="o">[</span>:find <span class="nv">$ednsiph</span> <span class="s2">&quot;/&quot;</span><span class="o">]]</span>
</span><span class='line'>:global ednsstr <span class="s2">&quot;&amp;hostname=$ednshost&amp;myip=$ednsip&quot;</span>
</span><span class='line'>:if <span class="o">(</span><span class="nv">$ednslastip</span> !<span class="o">=</span> <span class="nv">$ednsip</span><span class="o">)</span> <span class="k">do</span><span class="o">={</span>
</span><span class='line'>/tool fetch <span class="nv">url</span><span class="o">=</span><span class="s2">&quot;$members$ednsstr&quot;</span> <span class="nv">mode</span><span class="o">=</span>http <span class="nv">user</span><span class="o">=</span><span class="nv">$ednsuser</span> <span class="nv">password</span><span class="o">=</span><span class="nv">$ednspass</span> dst-path<span class="o">=</span><span class="nv">$ednshost</span>
</span><span class='line'>:delay 4
</span><span class='line'>:global result <span class="o">[</span>/file get <span class="nv">$ednshost</span> contents<span class="o">]</span>
</span><span class='line'>:log info <span class="o">(</span><span class="nv">$ednshost</span> . <span class="s2">&quot; &quot;</span> .<span class="nv">$result</span><span class="o">)</span>
</span><span class='line'>/file remove <span class="nv">$ednshost</span> ;
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上script来自：<a href="http://h2appy.blog.51cto.com/609721/776837">ROS DDNS update script</a></p>

<p>修改一下 <code>ednsuser</code>/<code>ednspass</code>/<code>ednshost</code>就可以使用了。</p>

<p>简单来说这个script就是利用ROS的 <code>/tool fetch</code> 来访问一个网页：</p>

<p><a href="http://members.3322.net/dyndns/update?system=dyndns&amp;hostname=xxx&amp;myip=xxx">http://members.3322.net/dyndns/update?system=dyndns&amp;hostname=xxx&amp;myip=xxx</a></p>

<p>这个方法也是3322官方提供的，3322的server就可以从这个http请求中得到你的真实IP地址了。</p>

<p>然后就是来到ROS的 <code>System</code> &ndash;> <code>Scheduler</code>，点击加号按钮：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-system-scheduler.png" alt="ROS Add scheduler" /></p>

<p>把上面的你修改好的script贴到 <code>OnEvent</code> 那个编辑框里面，设定好名字和Interval就OK了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RouterOS配置记录（二）：chnroutes]]></title>
    <link href="http://www.markzhang.cn/blog/2014/08/20/ros-chnroutes/"/>
    <updated>2014-08-20T16:52:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/08/20/ros-chnroutes</id>
    <content type="html"><![CDATA[<p>之前写过一篇博客：Chnroutes的使用（Mac OS X Mavericks），讲述了在我的macbook pro上安装chnroutes，从而可以在上网的时候区分国内国外的IP，最终让国外的IP访问走VPN，国内的不走VPN。</p>

<p><a href="http://markzhang.cn/blog/2013/12/04/chnroutes-on-mac/">Chnroutes的使用（Mac OS X Mavericks）</a></p>

<p>现在有了ROS，事情就变的更加棒了，把chnroutes做在ROS上，那所有的网络设备就自动具备了chnroutes的功能。所以在刚配置好了ROS之后，我就尝试配置了chnroutes。</p>

<!-- more -->


<p>首先我的配置参考了这篇文章：</p>

<p><a href="http://autorosvpn.blogspot.jp/2013/05/ros-vpn.html">ros智能vpn自动翻墙</a></p>

<p>总的说来，在ROS上配置chnroutes，就是几个步骤：</p>

<ol>
<li>导入国内IP地址表</li>
<li>对每个请求中的IP进行查找，如果不在国内IP地址列表中的，就标记一下</li>
<li>在路由表中，根据标记，让数据走正常网关或是VPN</li>
</ol>


<h2>导入国内IP地址表</h2>

<p>这个其实非常简单，用VI就搞定了。首先根据我之前的文章：Chnroutes的使用（Mac OS X Mavericks），在我的MBP上运行 <code>./chnroutes.py -p mac</code>，就会生成ip-up/ip-down这两个文件。</p>

<p>ip-up文件里面就包含了所有的国内IP地址，所以接下来我们只需要将这个文件修改成ROS能认识的格式就行了，用VI就可以轻松搞定了。这里给出一个我目前在使用的（2014/7/22的数据）：</p>

<p><a href="http://www.markzhang.cn/downloads/file/chinasites.rsc">2014/7/22 国内IP地址列表</a></p>

<p>一般来说，这个列表不需要经常更新，在IPv4地址已经差不多消耗殆尽的今天，你能经常访问到新的属于国内的IP地址也不是件容易的事情。</p>

<p>接下来就是把这个 <code>chinasites.rsc</code> 上传到RouterBoard上就OK了，可以用Filezilla，使用FTP的方式。或者你如果是windows平台，使用WinBox的话，也可以用拖拽的方式将文件拖到ROS的 <code>Files</code> 对话框中即可。</p>

<p>上传了之后，点击ROS的 <code>New Terminal</code>，在命令行下输入：<code>import chinasites.rsc</code>，所有的国内IP地址列表就导入了，在ROS的 <code>IP</code> &ndash;> <code>Firewall</code> &ndash;> <code>Address Lists</code> 中就可以看到：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-ip-firewall-address-lists.png" alt="China IP address list" /></p>

<p>在上图中可以看到，我们给这些IP地址都设了一个名字叫做 <code>novpn</code>，表示路由这些地址的时候，不需要走VPN，后面会看到如何使用的。</p>

<h2>标记Packets</h2>

<p>这是Linux netfilter/iptables非常强大的功能体现了，首先来看在ROS里面是怎么配置的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Flags: X - disabled, I - invalid, D - dynamic
</span><span class='line'> 0   <span class="nv">chain</span><span class="o">=</span>prerouting <span class="nv">action</span><span class="o">=</span>mark-routing new-routing-mark<span class="o">=</span>vpn <span class="nv">passthrough</span><span class="o">=</span>yes
</span><span class='line'>     dst-address<span class="o">=</span>!192.168.88.0/24 dst-address-list<span class="o">=</span>!novpn
</span></code></pre></td></tr></table></div></figure>


<p>这个配置项位于：<code>IP</code> &ndash;> <code>Firewall</code> &ndash;> <code>Mangle</code>。首先这个配置针对的是 <code>prerouting</code> 表，对Mangle/Prerouting还不清楚的，看我的这篇文章：</p>

<p><a href="http://markzhang.cn/blog/2014/07/23/netfilter-overview/">Linux Netfilter overview</a></p>

<p>然后，<code>dst-address-list=!novpn</code> 其实意思就是，如果目的地址不在 <code>novpn</code> 这个address list中的；最后 <code>action=mark-routing new-routing-mark=vpn</code> 就表示如果目的地址不在 <code>novpn</code> 中的，就给这些packet打上一个名为 <code>vpn</code> 的routing标记。</p>

<p>当然，上述命令中的：<code>dst-address=!192.168.88.0/24</code>，这表示本地局域网的地址不受该条规则影响，这也是非常好理解的。</p>

<p>所以总结来说，我们通过Linux netfilter的Mangle功能，成功的给不属于国内IP地址列表中的packet，打上了一个名为 <code>vpn</code> 的路由标记。</p>

<p>这里需要提一下 <code>passthrough=yes</code> 这个东西的作用。<code>passthrough=yes</code> 表示packet经过了本规则的处理之后，还会继续往下传递，给下面的rules继续处理。相反的例子是 <code>IP</code> &ndash;> <code>Firewall</code> &ndash;> <code>Fliter</code> 中的规则，比如 <code>accept</code> 或者 <code>drop</code> ，一旦匹配到了这些规则，就不会再继续往下处理了（下面的规则就不会再去执行了），所以这就是为什么我在上篇文章中提到说有一条 <code>drop</code> 的规则一定要放在最后。</p>

<p>所以这里我们设置了 <code>passthrough=yes</code> ，表示位于我们本条规则之后的规则还有机会继续被得到执行，所以你可以继续添加标记类的规则，或者其他任何Mangle的规则。所以再次重申，在Filter/Mangle这些表里，规则的顺序是很有影响的。</p>

<h2>添加路由</h2>

<p>点击 <code>IP</code> &ndash;> <code>Routes</code>，在 <code>Routes</code> 标签页，点击加号按钮添加一条路由规则：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-ip-routes.png" alt="ROS add routing" /></p>

<ul>
<li><p>Dst. Address，这表示哪些目的IP地址受这条路由影响，这里填写 <code>0.0.0.0/0</code> 表示所有IP地址。</p></li>
<li><p>Gateway，这表示这条路由走哪个Interface，一般来说，这就是你的VPN的PPP连接了。</p></li>
<li><p>Distance，这表示这条路由的权重。在之前的一篇介绍ROS的基础设置的文章中，有说到我们添加了一个PPPoE client来实现宽带拨号，在创建那个PPPoE Client的时候，有一个选项叫做：<code>Default Route Distance</code>，我的这项设置是10，而如上图所示，现在我们添加的这条路由，我的设置是1。其实很好理解，我们在添加PPPoE Client的时候，有选择 <code>Add Default Route</code>，所谓Default route就是路由所有IP地址：<code>0.0.0.0/0</code>的，那么现在我们又添加了一条路由，也是路由所有IP地址的，那应该选哪条路由呢？这就是根据路由的Distance来决定的。Distance值越小的，权重越高。</p></li>
<li><p>Routing Mark，这里填写的是 <code>vpn</code>。</p></li>
</ul>


<p>所以总结来说，这条路由的作用就是，对于 <code>Routing Mark</code> 是 <code>vpn</code> 的packet，走我们指定的 <code>Gateway</code>。而且由于这条路由的权重高于默认路由，所以就实现了非国内的IP地址，走我们指定的Gateway，而国内的IP地址还是走默认路由（宽带连接的那条路由）。</p>

<p>写了一堆字，其实做一下就是两分钟的事。ROS的确是非常Power的东西。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RouterOS 配置记录（一）：基础设置]]></title>
    <link href="http://www.markzhang.cn/blog/2014/08/19/ros-basic-setup/"/>
    <updated>2014-08-19T14:38:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/08/19/ros-basic-setup</id>
    <content type="html"><![CDATA[<p>RouterOS（以下简称ROS）是一个软路由系统，由拉脱维亚的Mikrotik开发，完全基于Linux。项目刚开始的时候，只支持x86，所以我们可以找一台PC机来安装ROS，从而可以让PC机瞬间变身成一个软路由。</p>

<p>后来Mikrotik开发了专用的硬件设备：RouterBoard。RouterBoard是MIPS架构，运行ROS，所以不想搞一台PC机的话，买一台RouterBoard就显的非常不错。而且RouterBoard有好多型号，带wifi的不带wifi的，企业用的个人用的，千兆的百兆的。。。，最关键的是家用的RouterBoard，带wifi的也不贵，所以最近就把家里的路由器换成了RouterBoard，型号是：951Ui-2HnD。</p>

<p>本系列文章旨在记录我在使用ROS的时候的一些配置，之前已经写了一篇有关修改WinBox字体的文章，算是个引子。ROS虽然强大，但是配置项目的繁杂也颇为吓人，坦白说没有网络基础的话还是别用ROS。</p>

<!-- more -->


<p>本文讲述拿到RouterBoard之后的最基础配置，也就是配置宽带拨号，WIFI，NAT，DHCP，最终能让家里的各网络设备上网。</p>

<h2>宽带拨号</h2>

<p>RouterBoard第一次开机，winbox连入之后，会有一个提示让我们备份当前的配置或是删掉目前的配置，为了从头开始，我删掉了原来的所有配置，从头开始一步一步自己来。</p>

<p>配置宽带拨号非常简单，就是在 <code>PPP</code> 里面添加一个 <code>PPPoE Client</code> 的interface即可：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-pppoe-client.png" alt="ROS add PPPoE client" /></p>

<p>必须要填的会以红色表示，在上图中，要填的是Name和Interfaces。Interfaces指的是哪个网口连接了宽带网线，一般来说，RouterBoard的第一个网口我们都用来连接外网（WAN），所以选择第一个网口即可（如上图所示，我给第一个网口做了重命名，修改名称为ether1-wan）。在第二个标签页 <code>Dial Out</code> 中，就需要填写你的宽带账号和密码了，此外 <code>Use Peer DNS</code> 和 <code>Add Default Router</code> 也可以勾选上。</p>

<p><code>Use Peer DNS</code> 指的是是否使用宽带运营商提供的DNS（在PPPoE拨号的时候能得到），一般都需要使用，当然你也可以不用运营商提供的DNS，自己定义一些DNS server，比如Google的 <code>8.8.8.8</code>, <code>8.8.4.4</code>，还有OpenDNS的 <code>208.67.222.222</code>, <code>208.67.220.220</code>。只是使用这些DNS的话，你要先把翻墙准备好。</p>

<p>在Winbox的 <code>IP</code> &ndash;> <code>DNS</code> 里面，就可以自己设置DNS server：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-ip-dns.png" alt="ROS DNS setting" /></p>

<p>在上图中可以看到，<code>Dynamic Servers</code> 就是来自宽带运营商的DNS server信息。</p>

<p>而 <code>Allow Remote Requests</code> 指的是，RouterBoard本身是否也作为一个DNS server从而可以响应DNS查询请求。一般来说，这个应该enable。顺理成章的，下面的一些有关Cache的配置也就变的有意义了，如上图所示，我加大了Cache的size，从而可以多缓存一些DNS信息。不过在enable了 <code>Allow Remote Request</code> 之后，需要注意要打开TCP/UDP的DNS端口，以防客户端无法通过RouterBoard查询DNS。</p>

<p>回到宽带拨号，配置好了 <code>PPPoE Client</code> 之后，就可以尝试去enable它了，一旦连接成功，就表示你的宽带拨号已经OK了。</p>

<h2>WIFI</h2>

<p>打开 <code>Wireless</code> ，在Interface标签页，可以看到一个wireless interface，默认名字是wlan1，关键的配置在标签页 <code>Wireless</code>：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-wireless.png" alt="ROS Wirelss config" /></p>

<p>大部分都非常好理解，有几个地方需要注意：</p>

<ul>
<li>Channel Width，这里有所谓的HT Above和HT Below，有关这个的解释是（来自Mikrotik官方）：</li>
</ul>


<blockquote><p>ht above and ht below allows to use additional 20MHz extension channel and if it should be located below or above control (main) channel. Extension channel allows 11n device to use 40MHz of spectrum in total thus increasing max throughput.</p></blockquote>

<p>不过需要注意的是，不是所有的Frequency都可以设置Above/Below，这里有一张来自Mikrotik的表说明了这一点，所以最终在设置Frequency的时候需要注意：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-wireless-ht-above-below.png" alt="ROS wireless HT above/below setting" /></p>

<ul>
<li><p>Frequency，上面已经提到了，设置Frequency要注意HT Above/Below是否有取值，此外可以通过点击 <code>Scan</code> 按钮来查看当前环境中有哪些Frequency是被占用的，尽量挑选一个没人使用的频率吧。</p></li>
<li><p>Wireless Protocol，Mikrotik开发了一些自己私有的WIFI协议，比如这里看到的NV2等，对于我们来说，肯定是使用802.11了。</p></li>
<li><p>Security Profile，这个后面紧接着就要配置，就是在这个profile中，我们可以配置WIFI的加密方式（WPA/WEP等）。</p></li>
<li><p>Bridge Mode，要选成Enabled，后面会提到，为了让WIFI的clients能和RouterBoard上的几个以太网口通信，需要将它们都放到一个bridge中。</p></li>
</ul>


<p>接下来就要配置WIFI Security Profile了，如下图所示：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-wireless-security-profile.png" alt="ROS wireless security profile" /></p>

<p>在 <code>Security Profile</code> 标签页中，点击加号按钮就可以新建一个 <code>Security Profile</code> 了。上图中我们配置的security profile name是default，所以在刚才我们设置Wireless Interface的时候，<code>Security Profile</code> 一项我们选择的就是这个 <code>default</code>。</p>

<p>配置到这里，WIFI热点就配置完成了，接下来我们需要将WIFI的wlan1这个interface和以太网的四个端口（第一个端口ether1-wan我们是分配给了宽带连接）放到一个bridge中去，这样才可以实现WIFI的clients和这四个以太网口互通。</p>

<p>在配置Bridge的时候，其实有两个配置步骤，顾名思义Bridge肯定只能包含两个Interface（Bridge的两端），而我们需要将wlan1和四个以太网口都配置到Bridge上去，那怎么办？</p>

<p>所以第一步是，将以太网口3/4/5都配置成以太网口2的 <code>Slave Port</code>，如下图所示：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-interface-master-port.png" alt="ROS interface master port" /></p>

<p>点击 <code>Interfaces</code>，在出来的对话框的 <code>Interface</code> 标签页，点击以太网口3/4/5就可以看到上图。在上图中可以看到，我们将以太网口3（ether3）的 <code>Master Port</code> 这一项选成了 <code>lan-ps3</code>。这里解释一下，<code>lan-ps3</code> 就是我的第二个以太网口，因为这个网口接着我的PS3，所以我给它取名为 <code>lan-ps3</code>。</p>

<p>将3/4/5以太网口设置成以太网口2的Slave Port之后，就可以创建Bridge了，点击 <code>Bridge</code>，在出来的对话框的 <code>Bridge</code> 标签页中，点击加号新建一个Bridge，啥都不需要修改，只需要给个名字就OK了。关键是在标签页 <code>Ports</code> 中，点击加号按钮，将wlan1和lan-ps3加入到Bridge中去：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-bridge-ports.png" alt="ROS Bridge ports" /></p>

<p>这样就OK了，WIFI部分的配置就差不多了。</p>

<h2>NAT</h2>

<p>但凡搞过Linux iptables的都知道了，input/forward/output，pre-route/post-route&hellip;，对这些概念不清楚的可以看我这篇文章：</p>

<p><a href="http://markzhang.cn/blog/2014/07/23/netfilter-overview/">Linux Netfilter overview</a></p>

<p>说起来配置一个简单的能上网的NAT非常的简单，选择 <code>IP</code> &ndash;> <code>Firewall</code>，在 <code>NAT</code> 标签页里面点击加号按钮，添加一个NAT：</p>

<p><img src="http://www.markzhang.cn/downloads/image/ros-ip-firewall-nat.png" alt="ROS add NAT" /></p>

<p>总共就只需要做三件事情：Chain选成srcnat（表示伪装源地址），Out Interface选成宽带连接那个PPPoE client，最后在 <code>Action</code> 标签页里面选择动作为：masquerade。</p>

<p>这样就表示所有的packet，在经过路由表之后，如果最终经过路由决定要从 <code>Out Interface</code> 这个接口出去的话，就做masquerade。</p>

<h2>DHCP Server</h2>

<ul>
<li>首先是创建一个IP Pool。点击 <code>IP</code> &ndash;> <code>Pool</code>，然后新建一个Pool：</li>
</ul>


<p><img src="http://www.markzhang.cn/downloads/image/ros-ip-pool.png" alt="ROS create IP pool" /></p>

<p>就是填写一个名字，一个IP地址范围即可，比如我这里设置的就是192.168.88.2-192.168.88.254，RouterBoard自己就是192.168.88.1了。</p>

<ul>
<li>然后就是创建一个DHCP server了，来到 <code>IP</code> &ndash;> <code>DHCP Server</code>，点击加号按钮创建一个DHCP Server:</li>
</ul>


<p><img src="http://www.markzhang.cn/downloads/image/ros-ip-dhcp-server.png" alt="ROS Create DHCP server" /></p>

<p>需要注意的就是，首先 <code>Interface</code> 那一项要选成你的Bridge device，这样WIFI和以太网的网络client就都可以DHCP了；其次 <code>Address Pool</code> 那一项就选我们刚才创建的那个IP Pool。</p>

<ul>
<li>最后设定DHCP Server的Network的一些信息，还是在DHCP Server的对话框中，选 <code>Networks</code> 那个标签页，点击加号按钮：</li>
</ul>


<p><img src="http://www.markzhang.cn/downloads/image/ros-ip-dhcp-server-networks.png" alt="ROS DHCP server networks" /></p>

<p>可以看到，这其实就是设定网关和DNS Server的。上图中，对于192.168.88.0/24这个网络的DHCP，clients自动获得了IP地址之后，获得的网关就是192.168.88.1，DNS也是192.168.88.1。联想到一开始的时候提到的 <code>IP</code> &ndash;> <code>DNS</code> 的设定，网络客户端知道DNS Server是RouterBoard就是在这里设定的。</p>

<h2>最后</h2>

<p>最后我们还可以配置一些简单的防火墙规则，用来拦截来自外网的请求，这里用命令行的方式来展现，这些规则都是配置在：<code>IP</code> &ndash;> <code>Firewall</code> &ndash;> <code>Filter</code> 里面的，非常简单：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Flags: X - disabled, I - invalid, D - dynamic
</span><span class='line'> 0   <span class="nv">chain</span><span class="o">=</span>input <span class="nv">action</span><span class="o">=</span>accept <span class="nv">protocol</span><span class="o">=</span>icmp
</span><span class='line'>
</span><span class='line'> 1   <span class="nv">chain</span><span class="o">=</span>input <span class="nv">action</span><span class="o">=</span>accept connection-state<span class="o">=</span>established
</span><span class='line'>
</span><span class='line'> 2   <span class="nv">chain</span><span class="o">=</span>input <span class="nv">action</span><span class="o">=</span>accept connection-state<span class="o">=</span>related
</span><span class='line'>
</span><span class='line'> 3   <span class="nv">chain</span><span class="o">=</span>input <span class="nv">action</span><span class="o">=</span>accept <span class="nv">protocol</span><span class="o">=</span>tcp dst-port<span class="o">=</span>22
</span><span class='line'>
</span><span class='line'> 4   <span class="nv">chain</span><span class="o">=</span>input <span class="nv">action</span><span class="o">=</span>accept <span class="nv">protocol</span><span class="o">=</span>tcp dst-port<span class="o">=</span>8291
</span><span class='line'>
</span><span class='line'> 5   <span class="nv">chain</span><span class="o">=</span>input <span class="nv">action</span><span class="o">=</span>accept <span class="nv">protocol</span><span class="o">=</span>tcp dst-port<span class="o">=</span>3987
</span><span class='line'>
</span><span class='line'> 6   <span class="nv">chain</span><span class="o">=</span>input <span class="nv">action</span><span class="o">=</span>accept <span class="nv">protocol</span><span class="o">=</span>tcp dst-port<span class="o">=</span>80
</span><span class='line'>
</span><span class='line'> 7  <span class="nv">chain</span><span class="o">=</span>input <span class="nv">action</span><span class="o">=</span>accept <span class="nv">protocol</span><span class="o">=</span>tcp dst-port<span class="o">=</span>53
</span><span class='line'>
</span><span class='line'> 8   <span class="nv">chain</span><span class="o">=</span>input <span class="nv">action</span><span class="o">=</span>accept <span class="nv">protocol</span><span class="o">=</span>udp dst-port<span class="o">=</span>53
</span><span class='line'>
</span><span class='line'> 9   <span class="nv">chain</span><span class="o">=</span>input <span class="nv">action</span><span class="o">=</span>drop in-interface<span class="o">=</span>SHUnicom
</span></code></pre></td></tr></table></div></figure>


<p>打开22端口是为了可以远程ssh RouterBoard，打开8291/3987/80端口是为了可以远程使用WinBox登录（可以额外添加src-address来限定只允许某个IP地址登录，这样可以增强安全性），接受53端口是为了DNS查询（实际上DNS一般都是使用UDP，TCP不需要打开），最后一条就是拦截所有外部的网络请求，请确保这一条一定位于所有规则的最后，iptables是匹配到一条规则之后就会返回的，所以如果这条不出现在最后，那么这一条之后的所有规则都会无法生效。</p>

<p>这个最后一条规则，可以看到，是说如果是从 <code>SHUnicom</code> 这个接口进来的数据一律drop，而 <code>SHUnicom</code> 是我的宽带连接接口。想到这个宽带连接其实是在我的ether1-wan这个物理接口上，那么这里是否也可以设置成从 <code>ether1-wan</code> 接口进来的数据一律drop呢？仔细想想是不对的，<code>ether1-wan</code> 是物理接口，用于宽带拨号；而 <code>SHUnicom</code> 其实是一个PPPoE，它会创建一个虚拟的网卡interface，所以我们要drop的是从这个虚拟的网卡interface尝试进入RouterBoard的数据，而不是物理的 <code>ether1-wan</code> 上进入的数据。如果我们真的drop了 <code>ether1-wan</code> 上进来的数据，那就上不了网了，因为所有的返回的数据都被丢掉了。在PPPoE/VPN的时候，虚拟网卡会被创建，所以这个时候要分清楚虚拟网卡和物理网卡，免的设置错误的规则。</p>

<p>能上网只是最基本需求了，接下来才是开始各种折腾的时候，VPN/chnroutes/DDNS/&hellip; 后续博客将记录这些。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Winbox for Mac OS X，修改界面字体]]></title>
    <link href="http://www.markzhang.cn/blog/2014/07/24/winbox-mac-change-font/"/>
    <updated>2014-07-24T18:19:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/07/24/winbox-mac-change-font</id>
    <content type="html"><![CDATA[<p>RouterOS（或简称ROS）是拉脱维亚的Mikrotik开发的一个强大到变态（对于个人用户而言）的路由系统。基于Linux，支持x86和MIPS（routerboard）。也就是说，你可以找一台PC来，装上routeros，就变身成了一台路由器。所以也有很多人称RouterOS为软路由。</p>

<p>Winbox是Mikrotik开发的RouterOS的管理工具（客户端）。当然，RouterOS也有网页版和命令行（终端，支持SSH，串口等）的管理界面，但是Winbox是相对来说最直观和好用的（当然用多了肯定到最后就是纯命令行了）。</p>

<p>有一个问题就是，Winbox只有windows版的。在Mac和Linux上，要使用wine来运行（或安装虚拟机）。</p>

<!-- more -->


<p>对于Mac OS X，网上有爱好者已经做好了一个包，下载下来安装即可，不用自己去折腾安装和配置 <code>wine</code>。地址在这里：</p>

<p><a href="http://wiki.mikrotik.com/wiki/MikroTik_WinBox_for_Mac_StandAlone">http://wiki.mikrotik.com/wiki/MikroTik_WinBox_for_Mac_StandAlone</a></p>

<p>的确很好用，就是有一个问题，字体太难看。看起来用的是默认的宋体，所以英文显示效果不忍直视。</p>

<p>所以很自然想修改字体。说起修改这个字体，其实就是修改windows的默认字体。参考了这篇文章：</p>

<p><a href="http://linfan.info/blog/2012/03/01/wine-mac/">http://linfan.info/blog/2012/03/01/wine-mac/</a></p>

<p>具体可以这么做：</p>

<ul>
<li>找一个喜欢的字体（Mac OS X自带了很多字体，如果安装了Office for Mac，那微软的很多字体也都有了），拷贝到 <code>/Applications/Winbox.app/drive_c/windows/Fonts</code> 目录下。比如我用的是微软雅黑：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cp /Library/Fonts/Microsoft/Microsoft<span class="se">\ </span>Yahei.ttf /Applications/WinBox.app/drive_c/windows/Fonts
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>使用Wine运行注册表编辑器。这个打包好的Winbox for Mac，使用的是Wineskin（就是一个wine的wrapper，这样就把winbox.exe做成了Mac上的Winbox.app），所以这样：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>open /Applications/WinBox.app/Wineskin.app/
</span></code></pre></td></tr></table></div></figure>


<p>然后点击 <code>Advanced</code> 按钮，再选择 <code>Tools</code> 标签页，最后点击 <code>Registry Editor (regedit)</code> 按钮，出现windows的注册表编辑器，导入这个注册表：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="err">REGEDIT4</span>
</span><span class='line'>
</span><span class='line'><span class="k">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontSubstitutes]</span>
</span><span class='line'><span class="na">&quot;Microsoft Yahei&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Comic Sans MS&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Courier&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Courier New&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Fixedsys&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Helv&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Helvetica&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Lucida Console&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Lucida Sans&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Microsoft Sans Serif&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;MingLiU&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;PMingLiu&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;MS Shell Dlg&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;MS Shell Dlg 2&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;MS Dialog&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;MS Gothic&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;MS PGothic&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;MS UI Gothic&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;MS Mincho&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;MS PMincho&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;SimHei&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;SimSun&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;NSimSun&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;System&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Tahoma&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Times&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Times New Roman&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Tms Rmn&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Trebuchet MS&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span><span class='line'><span class="na">&quot;Verdana&quot;</span><span class="o">=</span><span class="s">&quot;Microsoft Yahei&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样就OK了，再次打开Winbox，终于看到舒服的界面了：</p>

<p><img src="http://www.markzhang.cn/downloads/image/mac-winbox-change-font.png" alt="Mac Winbox changed font" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux netfilter概述，mangle/nat/filter, prerouting/input/forward...到底是啥]]></title>
    <link href="http://www.markzhang.cn/blog/2014/07/23/netfilter-overview/"/>
    <updated>2014-07-23T18:30:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/07/23/netfilter-overview</id>
    <content type="html"><![CDATA[<p>本文转载自：</p>

<p><a href="http://shorewall.net/NetfilterOverview.html">http://shorewall.net/NetfilterOverview.html</a></p>

<!-- more -->


<p>Netfilter consists of three tables: Filter, Nat and Mangle. Each table has a number of build-in chains: PREROUTING, INPUT, FORWARD, OUTPUT and POSTROUTING.</p>

<p>Rules in the various tables are used as follows:</p>

<p>Filter
Packet filtering (rejecting, dropping or accepting packets)</p>

<p>Nat
Network Address Translation including DNAT, SNAT and Masquerading</p>

<p>Mangle
General packet header modification such as setting the TOS value or marking packets for policy routing and traffic shaping.</p>

<p>Raw
Used primarily for creating exemptions from connection tracking with the NOTRACK target. Also used for stateless DNAT.</p>

<p>Rawpost
Used for stateless SNAT.</p>

<p>The following diagram shows how packets traverse the various builtin chains within Netfilter. Note that not all table/chain combinations are used.</p>

<p><img src="http://www.markzhang.cn/downloads/image/netfilter-overview.png" alt="Netfilter Overview" /></p>

<p>&ldquo;Local Process” means a process running on the Shorewall system itself.</p>

<p>A more elaborate version of this flow is available here and this one contrasts the Netfilter flow with that of ipchains.</p>

<p>In the above diagram are boxes similar to this:</p>

<p><img src="http://www.markzhang.cn/downloads/image/netfilter-input-chain.png" alt="Input chain" /></p>

<p>The above box gives the name of the built-in chain (INPUT) along with the names of the tables (Mangle and Filter) that the chain exists in and in the order that the chains are traversed. The above sample indicates that packets go first through the INPUT chain of the Mangle table then through the INPUT chain of the Filter table. When a chain is enclosed in parentheses, Shorewall does not use the named chain (INPUT) in that table (Mangle).</p>

<p><strong> Keep in mind that chains in the Nat table are only traversed for new connection requests (including those related to existing connections) while the chains in the other tables are traversed on every packet. </strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS X（Mavericks）共享VPN给其他设备]]></title>
    <link href="http://www.markzhang.cn/blog/2014/07/17/mac-share-vpn-connection/"/>
    <updated>2014-07-17T11:22:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/07/17/mac-share-vpn-connection</id>
    <content type="html"><![CDATA[<p>之前写过一篇文章叫“Chnroutes的使用“，主要说的是如何通过使用 <code>chnroutes</code> 从而将国内和国外的路由分开，国内走正常路由，国外则走VPN。现在的问题是，如果在一台电脑上有了VPN之后，如何将这个VPN share给其他设备，比如PS3？</p>

<!-- more -->


<p>首先很自然想到的是Mac OS X（Mavericks）自带的 <code>Internet Sharing</code> 功能：</p>

<p><img src="http://www.markzhang.cn/downloads/image/mac-internet-sharing.png" alt="Mac OS X Internet Sharing" /></p>

<p>但是通过使用后发现有如下的问题：</p>

<ol>
<li><p>你需要有两个网络设备，才能开始share。上面的截图也可以看到，你要选择一个 <code>From</code> 的设备，再选择 <code>To</code> 的网络设备（也就是说其他设备是通过本机的这个网络设备连接的）。</p></li>
<li><p>当然你可以说，VPN在Mac OS X里面也是一个单独的网络设备啊。是，但是通过试验，如果你只有一个网络设备，比如WIFI，那么就意味着我们既需要通过这个WIFI去连接VPN，还要通过这个WIFI让其他的设备能够连到本机，这是没法做到的。试验的结果就是，当你开了 <code>Internet Sharing</code> 之后，你的VPN就拨不上去（一拨就掉）；当你开了VPN之后，<code>Inetnet Sharing</code> 一开你的VPN就掉。事实上，如果通过WIFI来share的话，你会发现Mac OS X会将WIFI配置成一个AP，所以自然一旦被enable，你的VPN就掉了。</p></li>
<li><p>就算以上两点对你来说都没问题，这第三点就是绝望的来源：Mac OS X不会forward VPN的数据。也就是说，你想要通过Mac OS X的这个 <code>Internet Sharing</code> 功能来share你的VPN的话，是不可行的。</p></li>
</ol>


<p>所以没办法还是通过万能的Google来寻找答案，答案在这里：</p>

<p><a href="http://rodrigo.sharpcube.com/2010/06/20/using-and-sharing-a-vpn-connection-on-your-mac/">http://rodrigo.sharpcube.com/2010/06/20/using-and-sharing-a-vpn-connection-on-your-mac/</a></p>

<p>基本上就是需要我们写脚本来实现，上面这篇文章中，VPN使用的是OpenVPN，我测试的时候，使用的是PPTP的VPN，所以根据上文中 <code>Troubleshooting</code> 一节的描述，我做了这么两个脚本：</p>

<figure class='code'><figcaption><span>开启VPN共享 bash (share-pptp-vpn.sh)</span> <a href='http://www.markzhang.cn/downloads/code/share-pptp-vpn.sh'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>
</span><span class='line'>natd -same_ports -use_sockets -unregistered_only -dynamic -interface ppp0 -clamp_mss
</span><span class='line'>ipfw -f flush
</span><span class='line'>ipfw add divert natd ip from any to any via ppp0
</span><span class='line'>ipfw add pass all from any to any
</span><span class='line'>sysctl -w net.inet.ip.forwarding<span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>关闭VPN共享 bash (off-share-pptp-vpn.sh)</span> <a href='http://www.markzhang.cn/downloads/code/off-share-pptp-vpn.sh'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>
</span><span class='line'>killall natd
</span><span class='line'>ipfw -f flush
</span><span class='line'>sysctl -w net.inet.ip.forwarding<span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>所以当拨上了VPN之后，运行开启VPN共享那个脚本就OK了。在PS3上将网关指到Macbook的IP地址就可以了。</p>

<p>最后一个遗留问题。Mac OS X的VPN高级设定中有这么一个checkbox：</p>

<p><img src="http://www.markzhang.cn/downloads/image/mac-send-traffic-over-vpn.png" alt="Send all traffic over VPN" /></p>

<p>这个 <code>Send all traffic over VPN</code> 我不太理解是什么意思，是指本地NAT网络的地址不走VPN么？还是Mac OS X内置了类似 <code>chnroutes</code> 这样的功能？</p>

<p>有意思的是，有的时候如果enable了这个选项，我发现PS3连接网络就会出现问题。而如果VPN已经拨上去了，再去enable这个选项貌似就没有影响。</p>

<p>没有深究这个，所以这是目前的一个遗留问题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS X(Mavericks) CommandLineTools 和 osx-gcc-installer]]></title>
    <link href="http://www.markzhang.cn/blog/2014/07/03/apple-cli-and-osx-gcc-installer/"/>
    <updated>2014-07-03T13:22:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/07/03/apple-cli-and-osx-gcc-installer</id>
    <content type="html"><![CDATA[<p>Mac OS X Command Line Tools是Mac开发人员经常会遇到的一个问题。Command Line Tools（以下简称CLI）其实就是一堆Unix/Linux上开发需要的基础东西，比如gcc, make, g++等。在Mac上开发，如果使用Xcode的话，是不需要这些东西的，因为Xcode已经集成了这些东西，在Xcode的IDE中直接进行编译调试，所以用户不需要关心这些东西有没有，在哪。</p>

<p>但是如果我们在开发自己的基于Makefile的程序时，或者是要porting UNIX/Linux上的一些程序时，这些东西就变成必须的了。</p>

<!-- more -->


<p>苹果官方的CLI在苹果的网站上可以下载到，地址不需要自己去找，如果你已经安装了Xcode的话，那启动Xcode，选择菜单：<code>Xcode -&gt; Open Develop Tool -&gt; More Develop Tools</code>，然后浏览器就会被启动并来到下载苹果CLI的地方。下载dmg然后安装就完了。</p>

<p>苹果的CLI安装完成之后，其实是安装了两个pkg：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>com.apple.pkg.CLTools_Executables
</span><span class='line'>com.apple.pkg.MacOSX10_9_SDK
</span></code></pre></td></tr></table></div></figure>


<p>用 <code>pkgutils --files &lt;pkg name&gt;</code> 就可以看到安装了哪些文件，在什么地方。所以CLTools_Executables这个package，是安装在 <code>/Library/Developer</code> 目录下的，所以如果要使用gcc的话，把路径：<code>/Library/Developer/CommandLineTools/usr/bin/</code> 添加到PATH中去。</p>

<p>你可以看到，苹果的这个CLI，有很多llvm, gcc, clang这样的东西，这里有篇文章解释的很好：</p>

<p><a href="http://www.cnblogs.com/qoakzmxncb/archive/2013/04/18/3029105.html">http://www.cnblogs.com/qoakzmxncb/archive/2013/04/18/3029105.html</a></p>

<p>说来就是这么简单的事情，但是你如果在Google上尝试寻找答案的话，你会发现这些答案基本上在Mac OS X 10.9（Mavericks）上都没法用，典型的答案有：</p>

<ul>
<li>运行 <code>xcode-select --install</code>，反正在我的机器上，<code>xcode-select</code> 压根没有 <code>--install</code> 这个option。</li>
<li>执行程序：<code>/System/Library/CoreServices/Install Command Line Developer Tools.app</code>，其实这就是 <code>xcode-select --install</code> 去执行的程序，在我的Mac上运行没反应。</li>
<li>还有一些文章说直接在终端运行gcc，就会跳出一个对话框让你安装CLI的，我也没有碰到这么神奇的事情。</li>
</ul>


<p>现在再来说说 <code>osx-gcc-installer</code>。</p>

<p><code>osx-gcc-installer</code> 是github上一个开源的东西，估计是作者自己编译了苹果的一些open source的东西得到的：</p>

<p><a href="https://github.com/kennethreitz/osx-gcc-installer">https://github.com/kennethreitz/osx-gcc-installer</a></p>

<p>我对这个东西的理解是，在Mac OS X Lion/Mountain Lion之前，要安装苹果的CLI，是需要首先安装Xcode的（貌似是需要在安装了Xcode之后，在Xcode中有一个地方可以下载CLI），所以为了让我们在不安装Xcode的前提下得到gcc/make，就有了这个项目。该项目的README文件印证了这一点：</p>

<blockquote><p>For Lion and Mountain Lion users, Apple now provides an official Command Line Tools for Xcode package that you can install without needing to install Xcode itself! You can download it from Apple&rsquo;s developer site (free registration required) and search for &ldquo;Command Line Tools&rdquo;.</p></blockquote>

<p>之前我也安装过这个东西，现在如上面所说，我已经安装了苹果官方的CLI，所以很自然的我就想卸载掉这个东西，照例Google了一大圈之后，发现一般都是这么说的：</p>

<blockquote><p>According to the creator of the package, you can install Xcode on top of it since it is just a subset. Then you can use the uninstall command to completely remove:</p>

<p>sudo /Developer/Library/uninstall-devtools &mdash;mode=all</p>

<p>Definitely not a quick uninstall, but it should work.</p></blockquote>

<p>以上摘自StackOverflow: <a href="http://stackoverflow.com/questions/9332196/how-to-remove-the-osx-gcc-installer">http://stackoverflow.com/questions/9332196/how-to-remove-the-osx-gcc-installer</a></p>

<p>但事实上，这个做法在Mavericks上也是不行的，首先，我压根就没有 <code>/Developer</code> 这个目录，据说是Xcode从4.3开始就是一个“绿色软件”，所有东西都在 <code>/Applications/Xcode.app</code> 下面了。</p>

<p>此外，事实上我之前的确装过老版本的Xcode，在安装了 <code>osx-gcc-installer</code> 之后，的确有 <code>/Developer</code> 这个目录，但是运行了那个脚本之后，什么事情都没发生。<code>/usr/bin/gcc, /usr/bin/llvm-gcc-4.2</code> 这些文件还在那。</p>

<p>所以还是自己想办法了，通过 <code>pkgutils --expand GCC-10.7-v2.pkg tmp</code> ，可以在 <code>GCC-10.7-v2.pkg</code> 解开（这个pkg也就是osx-gcc-installer在Mac OS X 10.8上的安装文件），可以看到这个pkg包含了9个package：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>drwxr-xr-x  6 mark  staff   204B  7  3 14:00 DevSDK.pkg
</span><span class='line'>drwxr-xr-x  6 mark  staff   204B  7  3 14:00 DeveloperToolsCLI.pkg
</span><span class='line'>drwxr-xr-x  6 mark  staff   204B  7  3 14:00 DeveloperToolsSystemSupport.pkg
</span><span class='line'>-rw-r--r--  1 mark  staff   6.7K  8 12  2011 Distribution
</span><span class='line'>drwxr-xr-x  3 mark  staff   102B  7  3 14:00 Resources
</span><span class='line'>drwxr-xr-x  6 mark  staff   204B  7  3 14:00 VersionedDeveloperToolsSystemSupport.pkg
</span><span class='line'>drwxr-xr-x  6 mark  staff   204B  7  3 14:00 X11SDK.pkg
</span><span class='line'>drwxr-xr-x  6 mark  staff   204B  7  3 14:00 XcodeUserSystemSupport.pkg
</span><span class='line'>drwxr-xr-x  6 mark  staff   204B  7  3 14:00 clang.pkg
</span><span class='line'>drwxr-xr-x  6 mark  staff   204B  7  3 14:00 gcc4.2.pkg
</span><span class='line'>drwxr-xr-x  6 mark  staff   204B  7  3 14:00 llvm-gcc4.2.pkg
</span></code></pre></td></tr></table></div></figure>


<p>所以我使用 UninstallPKG 这个软件将这9个packag都删除掉就OK了。UninstallPKG是收费软件，售价9.99美元，试用版只能执行三次Uninstall，不过通过使用我发现不是只能uninstall 3个package，而是限制只能使用3次，也就是说，你可以一次选择多个package一并删除。</p>

<p>所以打开UninstallPKG，选择这9个package然后uninstall即可。注意这9个package的包名是上述名字后面都加了一个 <code>Leo</code>（估计是Snow Leopad的意思）。</p>

<p><img src="http://www.markzhang.cn/downloads/image/uninstallpkg.png" alt="UninstallPKG" /></p>

<p>所以到此简单来说，现在由于苹果提供了官方的CLI，所以其实 <code>osx-gcc-installer</code> 这个东西已经不再需要了。除非有一些你需要的其他东西依赖它。貌似现在新版的 HomeBrew 也是需要苹果的CLI而不是osx-gcc-installer了。<code>osx-gcc-installer</code> 的TroubleShooting是这样说的：</p>

<blockquote><p>Do not install this if you already have Xcode installed! Mixing Xcode and osx-gcc-installer is known to cause various difficult-to-diagnose problems and is not recommended.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[450 FBL 相位臂不顺滑？缺少一个小垫片]]></title>
    <link href="http://www.markzhang.cn/blog/2014/06/17/fbl-phase-arm-pad/"/>
    <updated>2014-06-17T15:37:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/06/17/fbl-phase-arm-pad</id>
    <content type="html"><![CDATA[<p>450 FBL有一个相位臂，没有这个相位臂那旋翼一旋转，十字盘拉杆就转成麻花了。但是由于十字盘是需要上下移动的（改变集体螺距），所以这个相位臂也是需要能运动的。基本上，当十字盘上下运动时，相位臂有两个地方也会发生运动：一个是中间部位，能改变角度；另外一个地方不起眼容易被忽略，就是相位臂固定在中联的那个位置，会发生转动。</p>

<p>所以最近在拆装相位臂的时候，突然发现相位臂的转动不顺畅了，非常的生涩，结果发现丢了一个小垫片。</p>

<!-- more -->


<p>相位臂是长这个样子的：</p>

<p><img src="http://www.markzhang.cn/downloads/image/fbl-phase-arm.png" alt="450 FBL相位臂" /></p>

<p><strong> 注：以上图片来自淘宝冰人工作室。 </strong></p>

<p>有了图片就非常的容易理解了，很明显中间部分是可以转动的，这样十字盘上下的时候，这部分可以活动。另外一个可以活动的，如上所说，就是相位臂固定到中联的那个部分，也就是图片上穿过螺丝的那个部分。这部分看起来很简单，但其实里面有一个轴承。</p>

<p>需要轴承也很容易想到，因为当十字盘上下运动的时候，相位臂中间部分被带动，从而也会最终带动相位臂固定在中联的这个头部，而头部被螺丝穿过固定在了中联上，那还怎么能转动呢？所以就需要一个轴承了。</p>

<p>现在的问题是，光有一个轴承还不够，还缺少一个垫片。之前我就丢了这个垫片，导致相位臂安装在了中联上面之后，相位臂的运动非常的涩，此时如果把固定螺丝松一些，立马会感觉顺滑很多，但是很显然这个固定螺丝不能拧的太松，所以最终发现缺少了这么一个垫片：</p>

<p><img src="http://www.markzhang.cn/downloads/image/fbl-phase-arm-pad.png" alt="450 FBL相位臂垫片" /></p>

<p><strong> 注：以上图片来自淘宝光明五金城。 </strong></p>

<p>这个垫片的尺寸是：2.1x3.8x0.5，如果你用尺量一下相位臂头部的尺寸的话，会发现这个垫片正好嵌在相位臂上，覆盖住了头部轴承但是没有覆盖到外部的垫圈。这样一来就能说通了，加了这个垫片之后，相位臂头部的外部垫圈部分就不会接触到中联，从而就没有了巨大的摩擦阻力，而当相位臂头部要转动的时候，这个小垫片就会转动（因为垫片是最终贴合在中联上的），而这个垫片又是覆盖在相位臂头部轴承上的，所以轴承就被带动可以转动了。</p>

<p>虽然说无副翼的直升机不一定需要FBL相位臂（比如亚拓的DFC），但是有FBL相位臂的，基本上都会需要这么一个垫片。之前没有研究这个问题，还以为是轴承坏了，差点买了一组新的相位臂（一百多块），其实就是缺了一个垫片，淘宝上五块钱一百个的东西。。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[机械盲科普：推力轴承和单向轴承]]></title>
    <link href="http://www.markzhang.cn/blog/2014/06/08/thrust-bearing-and-one-way-bearing/"/>
    <updated>2014-06-08T21:08:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/06/08/thrust-bearing-and-one-way-bearing</id>
    <content type="html"><![CDATA[<p>航模直升机中有两个重要的轴承。一个是位于旋翼桨夹内的推力轴承，另外一个是位于大齿盘中间的单向轴承。由于自己对机械不怎么懂，所以就去琢磨了一下这两个玩意，也在5imx上发了帖子询问，最终整理成了此文。</p>

<p>本文中所有内容都来自<a href="http://bbs.5imx.com">http://bbs.5imx.com</a>。</p>

<!-- more -->


<h2>推力轴承</h2>

<p>这个轴承指的是直升机旋翼头部分，装在桨夹里面的一个轴承：</p>

<p><img src="http://www.markzhang.cn/downloads/image/thrust-bearing.png" alt="推力轴承" /></p>

<p>论坛上，网络上也有叫这个轴承为 <code>止推轴承</code> 的，但是这个名字我感觉不准确，因为这个轴承的主要作用不是 <code>止推</code>，也无法防止 <code>射桨</code>，所以我这里还是叫它 <code>推力轴承</code>。当今世界通过网络获取信息的确方便了很多，但是也带来了很多误解，就是因为信息源、信息量太大了，需要自己琢磨理解才行。</p>

<p>需要这个轴承的原因是：我们都知道直升机的桨夹是可以绕横轴方向小幅度旋转的，也正是通过桨夹的这种旋转，来改变旋翼螺距的。注意这里我说的是旋翼头里面那根横轴，不是竖直的穿过十字盘的那根轴，那根叫主轴。横轴和主轴是垂直的。</p>

<p>所以，为了让桨夹能够做这样的旋转运动，在桨夹内部，就必须要有一个套在横轴上的轴承，这样桨夹就可以顺着轴承做翻转，而横轴不需要运动。这样问题就出现了，当桨夹随着旋翼高速旋转时，桨夹会产生巨大的离心力，这个向外的离心力会导致轴承紧紧贴在固定横轴、桨夹的末尾的螺母上，从而使得轴承的转动变的费力，生涩。于是，推力轴承就被加入到了旋翼头的机械部件中来。</p>

<p>推力轴承和普通轴承不同的是，它承受的是横轴轴向的力，也就是和桨夹高速旋转时产生的离心力方向一样的力。这样有了推力轴承专门承受离心力之后，使桨夹旋转的轴承就变的灵活、顺滑起来，从而可以轻松的实现螺距的变化。</p>

<p>这里附上一张450 FBL直升机旋翼头的图，清晰的描述了上述的桨夹、横轴、轴承、推力轴承的安装方式和关系：</p>

<p><img src="http://www.markzhang.cn/downloads/image/thrust-bearing-install.jpg" alt="旋翼头桨夹安装图" /></p>

<p>最后再说一次，推力轴承和防射桨没有关系，防止射桨主要还是靠安装在横轴两端的圆头内六角螺母。也就是上图中最末尾的那个方块。这也是为什么论坛上很多人都建议经常检查并更换这个螺母的原因。</p>

<p>5imx的这个帖子有有关推力轴承的很多讨论，很有帮助：</p>

<p><a href="http://bbs.5imx.com/bbs/forum.php?mod=viewthread&amp;tid=930379">http://bbs.5imx.com/bbs/forum.php?mod=viewthread&amp;tid=930379</a></p>

<h2>单向轴承</h2>

<p>这里指的是大齿盘里面那个单向轴承：</p>

<p><img src="http://www.markzhang.cn/downloads/image/one-way-bearing.png" alt="单向轴承" /></p>

<p>提到单向轴承，论坛上网上一般说它的作用是：在熄火降落（auto-rotation）的时候，由于此时电机停转，所以如果没有这个轴承，那么旋翼转动将带动电机旋转，而电机在不工作的时候，由于内部巨大的磁场阻力，会迅速消耗掉旋翼的旋转惯性，从而使熄火降落无法实现。</p>

<p>但是这么说很容易就会产生误解：如果单向轴承的目的就是因为这个，那大齿盘中放一个普通的轴承不就可以了么？反正你不就是要求旋翼转，电机不转嘛？</p>

<p>但是再仔细想一想，的确必须要单向轴承。因为如果是一个普通轴承的话，那电机旋转，大齿盘虽然跟着转，但旋翼和主轴就不会旋转了。论坛上举的很多的一个例子就是自行车的脚踏板，脚踏板和轮子中间就有一个单向轴承，这样我们踩脚踏板，轮子会转，而轮子转的时候，脚踏板并不会运动，一样的道理。</p>

<p>所以再反过来解释一遍就是，当电机旋转，带动大齿盘转动，此时需要再带动主轴和旋翼旋转的话，就只有两个选择，第一就是大齿盘中没有轴承，大齿盘和主轴是固定连接在一起的；第二就是大齿盘中是一个单向轴承。而显然第一种情况下，就无法实现熄火降落了（如上所说），所以这个单向轴承是必须的。</p>

<p>单向轴承也需要经常检查，如果单向轴承磨损的厉害，就会导致电机旋转时，旋翼 <code>打滑</code>，此时飞机上天后就会出现事故。最简单的检查单向轴承的方法是，把大齿盘捏住，然后转动旋翼头，应该是只可以朝一个方向旋转，朝另外一个方向旋转会有较大的阻力。如果两个方向上都可以旋转，那单向轴承就需要更换了。事实上，如果两个方向都可以非常顺利的旋转，那电机转旋翼就不会跟着转了。</p>

<p>5imx上这个帖子很好的解释了单向轴承：</p>

<p><a href="http://bbs.5imx.com/bbs/forum.php?mod=viewthread&amp;tid=938911">http://bbs.5imx.com/bbs/forum.php?mod=viewthread&amp;tid=938911</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[卓普大黑（Zopo C7/zp990）刷原生ROM，root，升级触控屏，修改GPS]]></title>
    <link href="http://www.markzhang.cn/blog/2014/06/08/zopo-c7-flash/"/>
    <updated>2014-06-08T15:00:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/06/08/zopo-c7-flash</id>
    <content type="html"><![CDATA[<p>卓普（Zopo）大黑（C7）手机在国内的行货默认安装的是阿里的云OS，而向国外销售的版本称为zp990，装的是原生的安卓（当然有一些针对这款手机的改动，比如FOTA部分，双卡设置部分等）。</p>

<p>如果你用云OS用腻了的话，肯定会想刷机，而要刷机，刷zp990的原生安卓版本成为一个好的选择。我的使用感受是，这个版本相比其他的民间ROM（比如民间做的MIUI的ROM）要稳定一些，所以你不想经常折腾的话，刷这个版本会安逸很多。</p>

<p>本文中所有内容都是来自：</p>

<ul>
<li>移动叔叔论坛（bbs.ydss.cn），卓普大黑版块</li>
<li><a href="http://forum.xda-developers.com/showthread.php?t=2403825">http://forum.xda-developers.com/showthread.php?t=2403825</a></li>
</ul>


<!-- more -->


<h2>准备工作</h2>

<p>刷机需要以下一些东西：</p>

<ul>
<li>ROM，这里我使用的是移动叔叔论坛上arboby提供的线刷包：</li>
</ul>


<p><a href="http://bbs.ydss.cn/thread-355478-1-1.html">http://bbs.ydss.cn/thread-355478-1-1.html</a></p>

<p>这里说明两点：</p>

<ol>
<li><p>之所以采用线刷包，是因为相比在Recovery下刷机，你不需要首先去root手机，然后安装第三方的recovery，最后再刷入zip格式的ROM包。线刷包只需要你安装手机的线刷驱动（对于卓普这款MTK的手机来说，就是安装MTK Preloader驱动），然后运行MTK的Flash工具即可，非常的简单快速。</p></li>
<li><p>arboby提供的这个线刷包，相比原生的我上面提到的，卓普在海外销售的zp990的ROM，只修改了一个image，就是recovery image。这样我们线刷一次，就得到了ROM和第三方的recovery，非常的方便。其实我下载过原生的zp990的ROM，跟arbody的ROM做过diff，只有一个recovery image是不同的。</p></li>
<li><p>MTK的线刷软件：SP Flash tool。</p></li>
<li><p>MTK线刷的驱动，也就是上面提到的MTK Preloader的驱动。</p></li>
</ol>


<p>所有上述的东西在我的百度盘上都可以下载到：<a href="http://pan.baidu.com/s/1hq5klU0">http://pan.baidu.com/s/1hq5klU0</a>。</p>

<h2>开始刷机</h2>

<ul>
<li>首先是安装线刷驱动，这里移动叔叔论坛上有了很不错的教程：</li>
</ul>


<p><a href="http://bbs.ydss.cn/thread-343673-1-1.html">http://bbs.ydss.cn/thread-343673-1-1.html</a></p>

<p>我是在Windows 7 64bit上安装的。论坛上很多人说推荐使用XP的系统，因为win7，尤其是64bit的win7很难安装。其实我的感觉不是这样，我感觉很多人安装不上这个驱动是因为他们使用的是Ghost win7。只要是正常安装的win7，无论是否64bit，安装这个驱动都是没有问题的。</p>

<p>其次就是注意要安装这个驱动，是手机关机、拔下电池，然后连接USB到电脑上。此时电脑上的设备管理器中就会出现一个未知设备，然后按照移动叔叔上那个教程一步一步做就可以了。安装好了之后，这个设备就叫MTK Preloader &hellip;，而且这个设备会不停的消失、出现，这是正常现象。只要一旦开始刷机，这个设备就不会再不停的消失出现了。</p>

<p>我之前有在虚拟机的win7上尝试安装过这个驱动，感觉要困难一些（也不是完全不可能）。因为对于虚拟机来说，所有设备是先到Host system上，然后你需要去手动选择将该设备切换到虚拟机中来。考虑到这个坑爹的MTK的设备会不停的出现消失，这就增加了安装的难度。所以简单来说，不想找麻烦就别在虚拟机的windows上安装了吧。</p>

<ul>
<li>然后就是运行MTK的Flash tool刷机了。过程超级简单，就是把刷机包中的bootloader, kernel, system.img, recovery.img等等全部刷到手机的EMMC中的不同的分区上即可（当然bootloader一般是刷到SPI ROM上，我没研究过MTK的这个逻辑）。移动叔叔上也有教程：</li>
</ul>


<p><a href="http://bbs.ydss.cn/thread-344988-1-1.html">http://bbs.ydss.cn/thread-344988-1-1.html</a></p>

<p>最后刷完就会看到一个对话框，里面是一个绿色的圆。使用一张移动叔叔论坛上的图装饰一下：</p>

<p><img src="http://www.markzhang.cn/downloads/image/mtk-flash-tool.jpg" alt="MTK SP Flash Tool" /></p>

<p>刷完之后开机就可以看到原生的安卓了。这里有一个小插曲，在我上面给出的arboby线刷包的link上也提到了，就是刷完之后，你会发现你的EMMC只有3G。我的卓普大黑是32G的版本，我没有额外再安装SD卡了，所以应该是一个3G的data分区（用来安装APK），剩下来会有一个25G多的分区作为/sdcard分区。</p>

<p>对于这个问题，arboby在帖子中说，只需要进入到系统设置中，做一次 <code>恢复出厂设置</code> 就可以。这个方法在我的手机上不行，在我的大黑上，做了一次 <code>恢复出厂设置</code> 后，系统重启后会卡死，无法进入Android。我试验过两次都是这样。所以我后来使用了另外一种方法，就是进入Recovery去做一次 <code>双清</code> ，也就是format data和cache两个分区。</p>

<p>说到这里，又要提到一个该手机和其他手机不一样的地方了。该手机不是按住音量的上或者下，然后按power键开机就进入了 <code>recovery</code> 模式。该手机进入 <code>recovery</code> 的方法是：</p>

<p><strong> 手机在关机状态下，按住音量+，然后将USB线连接到手机上并插入电脑 </strong></p>

<p>所以并不是按power开机，而是按住 音量+ 然后连接USB线，就会自动进入recovery了。</p>

<p>在xda-developers上，采用的方法是在PC端运行一个叫做 <code>MTKDroidTools</code> 的软件从而进入recovery，我没有试验过因为我觉得这种方法太麻烦。</p>

<h2>后续</h2>

<p>刷机完成了，貌似结束了，其实还有一些东西是可以做的（当然不做也可以，看个人需要）：</p>

<ul>
<li><p>Root手机。其实root手机会带来安全隐患，但是为了升级触控屏的firmware（下面会提到），必须要先root。root就使用arboby提供的一键root的那个程序即可。前提条件是，PC上要安装好Android adb驱动并且手机上要打开USB调试（老生常谈了）。ADB的驱动我是直接在PC上安装了91助手，然后连接手机，91助手自动帮我安装的ADB驱动，你也可以去网上搜索找一下这个驱动，就是MTK的ADB驱动。</p></li>
<li><p>升级触控屏（touch screen）的firmware。我的手机上，这个firmware的版本是0x14，根据arboby的描述，升级到0x17版本就可以完美支持 <code>小皮套</code>。这个皮套我也有一个，就是可以合上休眠，打开唤醒，同时还有一个透明窗口可以在不开皮套的情况下接电话。虽然我平常不使用这个，但是我认为升级一下还是有必要的。</p></li>
<li><p>修改GPS的一个设置。这个来自xda-developers，据称不修改这个GPS的定位将会非常的慢。具体的做法倒是特别简单（但是也需要先root手机），就是编辑文件：<code>/system/build.prop</code>，在最后面加入一行：<code>Dalvik.vm.execution-mode=int:fast</code> ，然后重启手机即可。</p></li>
<li><p>最后是调手机通话音量的，这款手机几乎所有人都知道有个问题就是通话音量太小，不是你听对方的声音小，是对方听你的声音小。据说原因是手机麦克风外面的防尘网做的太密？也据说论坛上有人暴力将这个防尘网的缝隙扩大了一些，立马声音变的很洪亮？但是如果不想做硬件上的HACK，那有一个设置是可以做的，就是增加手机麦克风的灵敏度（航模上我们叫感度）：</p></li>
</ul>


<p><a href="http://bbs.ydss.cn/thread-367161-1-1.html">http://bbs.ydss.cn/thread-367161-1-1.html</a></p>

<h2>结束</h2>

<p>整个Android手机就意味着折腾的开始，不喜欢的折腾的，还是买iPhone吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloneZilla磁盘克隆，超快的更换硬盘]]></title>
    <link href="http://www.markzhang.cn/blog/2014/06/03/ubuntu-disk-clone/"/>
    <updated>2014-06-03T12:49:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/06/03/ubuntu-disk-clone</id>
    <content type="html"><![CDATA[<p>开发用的PC机用的是一块128G的SSD，安装的Ubuntu 12.04，速度明显比机械硬盘快了好多，唯一的不足就是容量太小。于是最近购入了一块新的240G的SSD，需要将原来128G的SSD上的东西全部克隆过来。</p>

<p>对于Linux ext4文件分区系统的磁盘来说，<code>ghost</code>工作的并不好，工作的比较好的是<code>CloneZilla</code>，因为它能识别ext4的文件系统，从而使克隆变的无比快速，之前我写过一篇类似的文章：</p>

<p><a href="http://www.cnblogs.com/super119/archive/2012/09/26/2703479.html">http://www.cnblogs.com/super119/archive/2012/09/26/2703479.html</a></p>

<p>但是那一次的克隆是两块容量一样的磁盘，而这一次两块SSD的容量并不相同，所以我做了一些改变。</p>

<!-- more -->


<p>两块磁盘的容量不一样，我能想到的问题是，如果是克隆整块硬盘的话，那MBR部分也会被克隆过去，也就是说，源磁盘的分区信息也会被克隆到目的盘上，这样，会不会240G的SSD就会变成120G？我没有试验，有可能 <code>CloneZilla</code> 能帮我们解决这个问题，但是为了避免麻烦，我还是手动的克隆了。</p>

<p>所以我的做法是，不是克隆整个硬盘，而是只克隆源磁盘上的分区。完成之后，在目的盘上重建MBR信息，也就是在目的盘上恢复grub。具体我是这么做的：</p>

<ul>
<li><p>使用Ubuntu 12.04安装盘，进入Ubuntu Live（不是安装Ubuntu那个选项），然后使用Ubuntu的Disk Utility给目的盘分区</p></li>
<li><p>使用CloneZilla的启动ISO启动系统，可以把这个ISO刻成光盘，也可以使用UltraISO这种工具将ISO烧录到U盘上，然后从USB启动电脑。启动起来之后，按照 <code>CloneZilla</code> 提供的向导，一步一步进行即可，超级简单。将源磁盘每个分区都克隆到目的盘对应的分区上即可。100G的数据五分钟搞定。</p></li>
</ul>


<p><img src="http://www.markzhang.cn/downloads/image/clonezilla.jpg" alt="CloneZilla Cloning" /></p>

<ul>
<li>接下来就可以将源磁盘从机器中拿出来了，我们只需要再把目的磁盘的MBR恢复就可以成功启动系统了。其实就是恢复grub的标准做法：首先还是使用Ubuntu的安装盘进入Ubuntu Live，然后打开终端，输入以下命令：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Mount root partition to /mnt</span>
</span><span class='line'>sudo mount /dev/sda1 /mnt
</span><span class='line'>sudo mount --bind /dev /mnt/dev
</span><span class='line'>sudo mount --bind /dev/pts /mnt/dev/pts
</span><span class='line'>sudo mount --bind /proc /mnt/proc
</span><span class='line'>sudo mount --bind /sys /mnt/sys
</span><span class='line'>
</span><span class='line'><span class="c"># Chroot into it and update grub</span>
</span><span class='line'>sudo chroot /mnt
</span><span class='line'>grub-install /dev/sda
</span><span class='line'>grub-install --recheck /dev/sda
</span><span class='line'>update-grub
</span><span class='line'><span class="nb">exit</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Quit chroot environment and umount all stuffs</span>
</span><span class='line'>sudo umount /mnt/dev <span class="o">&amp;&amp;</span>
</span><span class='line'>sudo umount /mnt/dev/pts <span class="o">&amp;&amp;</span>
</span><span class='line'>sudo umount /mnt/proc <span class="o">&amp;&amp;</span>
</span><span class='line'>sudo umount /mnt/sys <span class="o">&amp;&amp;</span>
</span><span class='line'>sudo umount /mnt
</span></code></pre></td></tr></table></div></figure>


<p>这样就完成了，在我的机器上，/dev/sda就是我新更换的240G的SSD，你需要根据你的机器上的磁盘配置来决定使用哪个磁盘。</p>

<p>上述操作来自文章：</p>

<p><a href="http://howtoubuntu.org/how-to-repair-restore-reinstall-grub-2-with-a-ubuntu-live-cd">http://howtoubuntu.org/how-to-repair-restore-reinstall-grub-2-with-a-ubuntu-live-cd</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Mavericks上使用Makefile编写wxWidgets程序]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/23/wxwidget-on-mavericks/"/>
    <updated>2014-04-23T23:31:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/23/wxwidget-on-mavericks</id>
    <content type="html"><![CDATA[<p>OpenGL的设计与操作系统无关，与窗口系统也无关，所以，要编写一个可以运行（能看到界面）的程序，还需要一些额外的GUI的框架，比如glut。</p>

<p>glut基本上是所有OpenGL教科书上的唯一推荐了，因为它的API简单，跨平台。所以读者不需要花额外的时间去了解并使用glut。但是glut比较老了，有点跟不上时代了。而且编译出来的东西是一个可执行文件，不是Mac OS X上的 <code>.app</code> 的那种Applicaiton。所以在StackOverflow上也有很多人推荐使用 <code>glfw</code>。我也去试用了一下，感觉还是太单薄了。</p>

<p>既然要编写一个像样的OpenGL程序，就选择一个像样的GUI framework library吧，于是我决定使用wxWidgets。</p>

<!-- more -->


<h2>wxWidgets的编译安装</h2>

<p>wxWidgets在Mac OS X Mavericks上的安装很简单，就是标准的configure/make/make install。只是configure需要指定一些option，否则wxWidgets无法找到一些必须的库。</p>

<p>结合了wxWidgets wiki上的一些内容，我的编译过程是这样的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> &lt;root directory of wxWidgets <span class="nb">source</span>&gt;
</span><span class='line'>mkdir build-release
</span><span class='line'><span class="nb">cd </span>build-release
</span><span class='line'>../configure --with-osx_cocoa --with-macosx-version-min<span class="o">=</span>10.7 --with-macosx-sdk<span class="o">=</span>/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk --prefix<span class="o">=</span><span class="s2">&quot;$(pwd)&quot;</span> --with-opengl
</span><span class='line'>make
</span></code></pre></td></tr></table></div></figure>


<p>我安装的还是较老版本的Xcode，所以可以看到上面的命令行中，SDK用的还是10.8的，不过不妨碍了。</p>

<p>此外我没有执行make install，因为我也没打算给其他用户来使用。反正make过了之后，该有的东西（wx-config、wxWidgets的libraries）都有了。</p>

<p>还有一点：执行完configure之后，你会发现这样的一行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>OpenGL support:   no
</span></code></pre></td></tr></table></div></figure>


<p>但其实我们已经加了 <code>--with-opengl</code> 了，难道是configure没有找到Xcode中的OpenGL framework？经过一番Google，以及最后使用 <code>wx-config --libs</code> 来确认，其实OpenGL的支持已经有了，这个信息是一个错误信息。所以这应该算是一个bug了。</p>

<h2>第一个使用Makefile的程序</h2>

<p>接下来就是重头戏了，因为我不想使用Xcode来编写运行程序，太笨重了，而且写一个HelloWorld也需要在Xcode中建立一个Project，并且设置一堆东西。更何况使用Xcode，也无法详细了解整个编译过程。Linux程序员都懂的。</p>

<p>所以我想要的是一个Makefile，我执行make就可以编译，而且要生成Mac OS X上的applicaiton（.app），而不是像使用glut的时候，只是生成了一个可执行文件。执行这个文件是能看到一个界面，但是无法拖动，某些功能还不正常。</p>

<p>我看到wxWidgets自带的samples，就是可以通过make生成Mac OS X的 <code>.app</code> 应用的，所以这一定是可行的。于是Google了一下，果然发现wxWidgets的论坛上有答案：</p>

<p><a href="http://forums.wxwidgets.org/viewtopic.php?f=23&amp;t=3768">http://forums.wxwidgets.org/viewtopic.php?f=23&amp;t=3768</a></p>

<p>这个帖子中，帖子的作者Mark最后就给出了一个Makefile的template，使用这个Makefile就可以编译并最终生成一个 <code>.app</code>。</p>

<p>于是立刻把这个Makefile拿过来试验了一下，需要做两处小改动：</p>

<ul>
<li><p>OUTPUTPATH必须要设置，而不是像注释中说的那样可以留空。否则后续的 <code>mkdir -p</code> 这个命令会失败。</p></li>
<li><p>这个Makefile中所有的 <code>@echo</code> 命令要换成 <code>@/bin/echo</code>。因为这个Makefile中有三行这样的代码：<code>@echo -n xxxx</code>，<code>-n</code> 的意思是输出末尾不要加换行，但是Mavericks上，这个bash built-in的echo是没有 <code>-n</code> 这个option的，所以会导致最终生成的 <code>PkgInfo</code> 和 <code>Info.plist</code> 中有 <code>-n</code> 这样的字符串，从而导致最终的 <code>.app</code> 没法运行。在 <code>man echo</code> 中也提到了这个事情：</p></li>
</ul>


<blockquote><p>Some shells may provide a builtin echo command which is similar or identical to this utility. Most notably, the builtin echo in sh(1) does not accept the -n option. Consult the builtin(1) manual page.</p></blockquote>

<p>做完这两处小改动之后，输入make就可以生成 <code>.app</code> 了，Cool！</p>

<p>最后附上我的Makefile的模板：</p>

<figure class='code'><figcaption><span>Makefile模板 bash (wxwidgets-makefile-template)</span> <a href='http://www.markzhang.cn/downloads/code/wxwidgets-makefile-template'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
</pre></td><td class='code'><pre><code class=''><span class='line'><span class="c">##############################################################</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  Makefile Template for wxMac Applications</span>
</span><span class='line'><span class="c">#  Mark Wilkinson</span>
</span><span class='line'><span class="c">#  August 2005</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  This makefile is designed for experienced UNIX </span>
</span><span class='line'><span class="c">#  developers who wish to learn how to build Mac OS X </span>
</span><span class='line'><span class="c">#  packages (.app) using Makefiles rather than Apple&#39;s </span>
</span><span class='line'><span class="c">#  Xcode IDE.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  Developed with the assistance of Kevin Hock, CHB, </span>
</span><span class='line'><span class="c">#    and DialogBlocks examples.</span>
</span><span class='line'><span class="c">#  Distribution of this file is subject to the terms of </span>
</span><span class='line'><span class="c">#    the wxWindows License, see www.wxwidgets.org</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  A Brief Tutorial on Packages</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  Rather than use resource forks on application</span>
</span><span class='line'><span class="c">#    files, as Apple did in their Classic operating</span>
</span><span class='line'><span class="c">#    system, Mac OS X uses application packages.</span>
</span><span class='line'><span class="c">#  Application packages have a .app extension and</span>
</span><span class='line'><span class="c">#    are actually directories which contain the</span>
</span><span class='line'><span class="c">#    true executable as well as several resource </span>
</span><span class='line'><span class="c">#    files.  The structure of an application</span>
</span><span class='line'><span class="c">#    package is:</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#    (program).app</span>
</span><span class='line'><span class="c">#     |</span>
</span><span class='line'><span class="c">#     +-- Contents</span>
</span><span class='line'><span class="c">#          |</span>
</span><span class='line'><span class="c">#          +--  Info.plist</span>
</span><span class='line'><span class="c">#          |</span>
</span><span class='line'><span class="c">#          +--  MacOS</span>
</span><span class='line'><span class="c">#          |     |</span>
</span><span class='line'><span class="c">#          |     +--  (program)</span>
</span><span class='line'><span class="c">#          |</span>
</span><span class='line'><span class="c">#          +--  PkgInfo</span>
</span><span class='line'><span class="c">#          |</span>
</span><span class='line'><span class="c">#          +--  Resources</span>
</span><span class='line'><span class="c">#                |</span>
</span><span class='line'><span class="c">#                +-- (icon file)</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#    In this diagram &quot;(program)&quot; is the name of </span>
</span><span class='line'><span class="c">#    the executable program.  &quot;Contents,&quot; &quot;MacOS,&quot; </span>
</span><span class='line'><span class="c">#    and &quot;Resouces,&quot; are directories.  &quot;Info.plist&quot;</span>
</span><span class='line'><span class="c">#    is an XML DTD file.  And &quot;PkgInfo&quot; is a text</span>
</span><span class='line'><span class="c">#    file containing data.</span>
</span><span class='line'><span class="c">#  This makefile generates the package directory</span>
</span><span class='line'><span class="c">#    structure, and it compiles and places the </span>
</span><span class='line'><span class="c">#    executabel in the MacOS directory.  This </span>
</span><span class='line'><span class="c">#    makefile also creates the &quot;PkgInfo&quot; and </span>
</span><span class='line'><span class="c">#    &quot;Info.plist&quot; files.  The PkgInfo file is very</span>
</span><span class='line'><span class="c">#    simple.  Info.plist is an XML DTD and contains</span>
</span><span class='line'><span class="c">#    several variables, which can be examined in</span>
</span><span class='line'><span class="c">#    this makefile.</span>
</span><span class='line'><span class="c">#  You need to supply the source code and the icon</span>
</span><span class='line'><span class="c">#    file.  The icon file is copied into the </span>
</span><span class='line'><span class="c">#    Resources directory of the package.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  These variables are used to compile the program.  You </span>
</span><span class='line'><span class="c">#    will need to provide this information.  You may need</span>
</span><span class='line'><span class="c">#    to specify the full path to the wx-config executable.</span>
</span><span class='line'><span class="c">#    The output path can&#39;t be blank.  The program name</span>
</span><span class='line'><span class="c">#    and object names are essential.  You may use the icon</span>
</span><span class='line'><span class="c">#    file included with the wxMac distribution </span>
</span><span class='line'><span class="c">#    (wxMac-2.6.1/src/mac/wxmac.icns) or create your own</span>
</span><span class='line'><span class="c">#    icon using the Apple Developer Tools </span>
</span><span class='line'><span class="c">#    (/Developer/Applications/Utilities/Icon Composer).</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'>
</span><span class='line'><span class="n">WXCONFIG</span><span class="p">=</span><span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">mark</span><span class="o">/</span><span class="n">Graphics</span><span class="o">/</span><span class="n">wxWidgets</span><span class="o">-</span><span class="mf">3.0</span><span class="p">.</span><span class="mi">0</span><span class="o">/</span><span class="n">build</span><span class="o">-</span><span class="n">release</span><span class="o">/</span><span class="n">wx</span><span class="o">-</span><span class="n">config</span>
</span><span class='line'>
</span><span class='line'><span class="c"># can&#39;t be blank, otherwise &quot;mkdir -p&quot; fails</span>
</span><span class='line'><span class="n">OUTPUTPATH</span><span class="p">=</span><span class="n">out</span>
</span><span class='line'>
</span><span class='line'><span class="n">PROGRAM</span><span class="p">=</span><span class="n">HelloWxGL</span>
</span><span class='line'><span class="n">PROGVER</span><span class="p">=</span><span class="mf">1.0</span>
</span><span class='line'>
</span><span class='line'><span class="n">OBJECTS</span><span class="p">=</span><span class="n">HelloWxGL</span><span class="p">.</span><span class="n">o</span>
</span><span class='line'>
</span><span class='line'><span class="n">ICONFILE</span><span class="p">=</span><span class="n">wxmac</span><span class="p">.</span><span class="n">icns</span>
</span><span class='line'>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  These variables are used in the Info.plist and PkgInfo</span>
</span><span class='line'><span class="c">#    files.  Aside from the company name (which should have</span>
</span><span class='line'><span class="c">#    no spaces, like a domain name), you should not have</span>
</span><span class='line'><span class="c">#    to modify these variables.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'>
</span><span class='line'><span class="n">COMPANY</span><span class="p">=</span><span class="n">markzhang</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUNDLEPACKAGE</span><span class="p">=</span><span class="n">APPL</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUNDLESIGNATURE</span><span class="p">=</span>????
</span><span class='line'>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  It should not be necessary to modify the Makefile</span>
</span><span class='line'><span class="c">#    below this line; although, you may have to make</span>
</span><span class='line'><span class="c">#    changes depending on your system configuration.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">##############################################################</span>
</span><span class='line'>
</span><span class='line'><span class="n">CXX</span><span class="p">=</span><span class="n">g</span><span class="o">++</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUNDLE</span><span class="p">=</span>$<span class="p">(</span><span class="n">OUTPUTPATH</span><span class="p">)</span><span class="o">/</span>$<span class="p">(</span><span class="n">PROGRAM</span><span class="p">).</span><span class="n">app</span>
</span><span class='line'><span class="n">MACICON</span><span class="p">=</span>$<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span>$<span class="p">(</span><span class="n">ICONFILE</span><span class="p">)</span>
</span><span class='line'><span class="n">MACPKGINFO</span><span class="p">=</span>$<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">PkgInfo</span>
</span><span class='line'><span class="n">MACINFOPLIST</span><span class="p">=</span>$<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">Info</span><span class="p">.</span><span class="n">plist</span>
</span><span class='line'>
</span><span class='line'><span class="n">LIBS</span><span class="p">=</span>`$<span class="p">(</span><span class="n">WXCONFIG</span><span class="p">)</span> <span class="o">--</span><span class="n">libs</span>`
</span><span class='line'><span class="n">LINKERFLAGS</span><span class="p">=</span> <span class="o">-</span><span class="n">lstdc</span><span class="o">++</span>
</span><span class='line'><span class="n">WARNINGFLAGS</span><span class="p">=</span>
</span><span class='line'><span class="n">OPTFLAGS</span><span class="p">=</span>
</span><span class='line'><span class="n">DEBUGFLAGS</span><span class="p">=</span><span class="o">-</span><span class="n">g</span>
</span><span class='line'>
</span><span class='line'><span class="n">CPPINC</span><span class="p">=</span>`$<span class="p">(</span><span class="n">WXCONFIG</span><span class="p">)</span> <span class="o">--</span><span class="n">inplace</span> <span class="o">--</span><span class="n">cxxflags</span>`
</span><span class='line'><span class="n">LDFLAGS</span><span class="p">=</span>$<span class="p">(</span><span class="n">LIBS</span><span class="p">)</span> $<span class="p">(</span><span class="n">LINKERFLAGS</span><span class="p">)</span>
</span><span class='line'><span class="n">CPPFLAGS</span><span class="p">=</span>$<span class="p">(</span><span class="n">CPPINC</span><span class="p">)</span> $<span class="p">(</span><span class="n">GCCFLAGS</span><span class="p">)</span> $<span class="p">(</span><span class="n">DEBUGFLAGS</span><span class="p">)</span> $<span class="p">(</span><span class="n">OPTFLAGS</span><span class="p">)</span> $<span class="p">(</span><span class="n">WARNINGFLAGS</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nb">all</span><span class="p">:</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">MacOS</span><span class="o">/</span>$<span class="p">(</span><span class="n">PROGRAM</span><span class="p">)</span> $<span class="p">(</span><span class="n">MACICON</span><span class="p">)</span> $<span class="p">(</span><span class="n">MACPKGINFO</span><span class="p">)</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">clean</span><span class="p">:</span>
</span><span class='line'>  <span class="n">rm</span> <span class="o">-</span><span class="n">f</span> $<span class="p">(</span><span class="n">OBJECTS</span><span class="p">)</span>
</span><span class='line'>  <span class="n">rm</span> <span class="o">-</span><span class="n">fr</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">help</span><span class="p">:</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;Usage: make -f Makefile [all|clean|help]&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  This builds the bundle&#39;s directory structure.</span>
</span><span class='line'>$<span class="p">(</span><span class="n">BUNDLE</span><span class="p">):</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;==== Building bundle directory structure ====&quot;</span>
</span><span class='line'>  <span class="nb">mkdir</span> <span class="o">-</span><span class="n">p</span> $<span class="p">(</span><span class="n">OUTPUTPATH</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">mkdir</span> <span class="o">-</span><span class="n">p</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span>
</span><span class='line'>  <span class="nb">mkdir</span> <span class="o">-</span><span class="n">p</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">MacOS</span>
</span><span class='line'>  <span class="nb">mkdir</span> <span class="o">-</span><span class="n">p</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">Resources</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  This builds the executable right inside the bundle.</span>
</span><span class='line'>$<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">MacOS</span><span class="o">/</span>$<span class="p">(</span><span class="n">PROGRAM</span><span class="p">):</span> $<span class="p">(</span><span class="n">OBJECTS</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;==== Building executable ====&quot;</span>
</span><span class='line'>  $<span class="p">(</span><span class="n">CXX</span><span class="p">)</span> <span class="o">-</span><span class="n">o</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">MacOS</span><span class="o">/</span>$<span class="p">(</span><span class="n">PROGRAM</span><span class="p">)</span> $<span class="p">(</span><span class="n">OBJECTS</span><span class="p">)</span> $<span class="p">(</span><span class="n">LDFLAGS</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  This copies the icon file into the bundle.</span>
</span><span class='line'>$<span class="p">(</span><span class="n">MACICON</span><span class="p">):</span> $<span class="p">(</span><span class="n">ICONFILE</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;==== Copying icon file into bundle ====&quot;</span>
</span><span class='line'>  <span class="n">cp</span> <span class="o">-</span><span class="n">f</span> $<span class="p">(</span><span class="n">ICONFILE</span><span class="p">)</span> $<span class="p">(</span><span class="n">BUNDLE</span><span class="p">)</span><span class="o">/</span><span class="n">Contents</span><span class="o">/</span><span class="n">Resources</span><span class="o">/</span>$<span class="p">(</span><span class="n">ICONFILE</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  NOTICE</span>
</span><span class='line'><span class="c">#  We need to use &quot;/bin/echo&quot;, since the &quot;echo&quot; is the builtin program</span>
</span><span class='line'><span class="c">#  which doesn&#39;t have &quot;-n&quot; option.</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  This creates the Contents/PkgInfo file.</span>
</span><span class='line'>$<span class="p">(</span><span class="n">MACPKGINFO</span><span class="p">):</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;==== Creating PkgInfo ====&quot;</span>
</span><span class='line'>  <span class="n">touch</span> $<span class="p">(</span><span class="n">MACPKGINFO</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="s">&quot;$(BUNDLEPACKAGE)$(BUNDLESIGNATURE)&quot;</span> <span class="o">&gt;</span> $<span class="p">(</span><span class="n">MACPKGINFO</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#  This creates the Contents/Info.plist file.</span>
</span><span class='line'>$<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">):</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;==== Creating Info.plist ====&quot;</span>
</span><span class='line'>  <span class="n">touch</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;&lt;?xml version=\&quot;</span><span class="mf">1.0</span><span class="o">\</span><span class="s">&quot; encoding=\&quot;</span><span class="n">UTF</span><span class="o">-</span><span class="mi">8</span><span class="o">\</span><span class="s">&quot;?&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="s">&quot;&lt;!DOCTYPE plist PUBLIC &quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="s">&quot;\&quot;</span><span class="o">-//</span><span class="n">Apple</span> <span class="n">Computer</span><span class="o">//</span><span class="n">DTD</span> <span class="n">PLIST</span> <span class="mf">1.0</span><span class="o">//</span><span class="n">EN</span><span class="o">\</span><span class="s">&quot; &quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;\&quot;</span><span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="p">.</span><span class="n">apple</span><span class="p">.</span><span class="n">com</span><span class="o">/</span><span class="n">DTDs</span><span class="o">/</span><span class="n">PropertyList</span><span class="o">-</span><span class="mf">1.0</span><span class="p">.</span><span class="n">dtd</span><span class="o">\</span><span class="s">&quot;&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;&lt;plist version=\&quot;</span><span class="mf">1.0</span><span class="o">\</span><span class="s">&quot;&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;&lt;dict&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleDevelopmentRegion&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;English&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleExecutable&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(PROGRAM)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleIconFile&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(ICONFILE)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleName&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(PROGRAM)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleIdentifier&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;com.$(COMPANY).$(PROGRAM)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleInfoDictionaryVersion&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;6.0&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundlePackageType&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(BUNDLEPACKAGE)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleSignature&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(BUNDLESIGNATURE)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleVersion&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(PROGVER)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleShortVersionString&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(PROGVER)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;key&gt;CFBundleGetInfoString&lt;/key&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;   &lt;string&gt;$(PROGRAM), Version $(PROGVER), $(COMPANY)&lt;/string&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;&lt;/dict&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>  <span class="p">@</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">echo</span> <span class="s">&quot;&lt;/plist&gt;&quot;</span> <span class="o">&gt;&gt;</span> $<span class="p">(</span><span class="n">MACINFOPLIST</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>$<span class="p">(</span><span class="n">OBJECTS</span><span class="p">):</span> <span class="c">%.o: %.cpp</span>
</span><span class='line'>  $<span class="p">(</span><span class="n">CXX</span><span class="p">)</span> <span class="o">-</span><span class="n">c</span> <span class="o">-</span><span class="n">o</span> $<span class="p">@</span> $<span class="p">(</span><span class="n">CPPFLAGS</span><span class="p">)</span> $<span class="o">&lt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="n">PHONY</span><span class="p">:</span>    <span class="nb">all</span> <span class="n">clean</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://www.markzhang.cn/downloads/image/hellowxgl.png" alt="wxWidgets HelloWorld" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[需要齐次坐标的原因之二 - 所有的变换运算（平移、旋转、缩放）都可以用矩阵乘法来搞定]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/23/translation-rotation-scale-in-homogeneous-coordinate/"/>
    <updated>2014-04-23T13:55:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/23/translation-rotation-scale-in-homogeneous-coordinate</id>
    <content type="html"><![CDATA[<p>本文中的三张图片来自网络，但是我不记得当初的来源了，所以没有能给出出处。确定来源后将给出图片出处。</p>

<p>看三个图就清楚了。分别是平移、旋转和缩放的矩阵计算。如果没有额外的第四个量w（也就是齐次坐标），那么这三种变换是无法都使用矩阵乘法来解决的。变换都统一成矩阵乘法之后，就给硬件设计和软件架构带来了巨大的好处。</p>

<!-- more -->


<p>下面的三组公式就分别对应使用矩阵来实现平移（Translation）、旋转（Rotation）、缩放（Scale）：</p>

<p><img src="http://www.markzhang.cn/downloads/image/matrix-translation.png" alt="Translation" /></p>

<p><img src="http://www.markzhang.cn/downloads/image/matrix-rotation.png" alt="Rotation" /></p>

<p><img src="http://www.markzhang.cn/downloads/image/matrix-scale.png" alt="Scale" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[需要齐次坐标的原因]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/23/homogeneous-coordinates/"/>
    <updated>2014-04-23T13:40:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/23/homogeneous-coordinates</id>
    <content type="html"><![CDATA[<p>原文链接：<a href="http://www.songho.ca/math/homogeneous/homogeneous.html">http://www.songho.ca/math/homogeneous/homogeneous.html</a></p>

<p>翻译：罗朝辉 <a href="http://www.cnblogs.com/kesalin/">http://www.cnblogs.com/kesalin/</a></p>

<!-- more -->


<p>在欧几里得几何空间里，两条平行线永远都不会相交。但是在投影空间中，两条铁轨在地平线处却是会相交的，因为在无限远处它们看起来相交于一点。</p>

<p>在欧几里得（或称笛卡尔）空间里描述2D/3D 几何物体是很理想的，但在投影空间里面却并不见得。我们用 (x, y) 表示笛卡尔空间中的一个 2D 点，而处于无限远处的点 (∞,∞) 在笛卡尔空间里是没有意义的。投影空间里的两条平行线会在无限远处相交于一点，但笛卡尔空间里面无法搞定这个问题（因为无限远处的点在笛卡尔空间里是没有意义的）。</p>

<p>由 August Ferdinand Möbius 提出的齐次坐标（Homogeneous coordinates）让我们能够在投影空间里进行图像和几何处理，齐次坐标用N + 1个分量来描述 N 维坐标。比如，2D 齐次坐标是在笛卡尔坐标(X, Y)的基础上增加一个新分量 w，变成(x, y, w)，其中笛卡尔坐标系中的大X，Y 与齐次坐标中的小x，y有如下对应关系：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">X</span> <span class="o">=</span> x / w
</span><span class='line'><span class="nv">Y</span> <span class="o">=</span> y / w
</span></code></pre></td></tr></table></div></figure>


<p>笛卡尔坐标中的点 (1, 2) 在齐次坐标中就是 (1, 2, 1) 。如果这点移动到无限远(∞,∞)处，在齐次坐标中就是 (1, 2, 0) ，这样我们就避免了用没意义的&#8221;∞&#8221; 来描述无限远处的点。</p>

<p><strong> 证明: 两平行线可以相交 </strong></p>

<p>笛卡尔坐标系中，对于如下两个直线方程：</p>

<p><img src="http://www.markzhang.cn/downloads/image/linear-formula.png" alt="直线方程" /></p>

<p>如果 C ≠ D，以上方程组无解；如果 C = D，那这两条线就是同一条线了。</p>

<p>下面我们用 x/w, y/w 代替 x, y 放到投影空间里来求解：</p>

<p><img src="http://www.markzhang.cn/downloads/image/linear-formula-homogeneous.png" alt="齐次坐标直线方程" /></p>

<p>现在我们就可以在 C ≠ D 的情况得到一组解 (x, y, 0)，代入得 (C &ndash; D)w = 0，因为 C ≠ D，所以 w = 0。因而，两条平行线相交于投影空间中无限远处的一点 (x, y, 0)。</p>

<p>齐次坐标在计算机图形学中是有用的，将 3D 场景投影到 2D 平面的过程中就用到它了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git都在说些啥（三）]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/22/git-gossip-3/"/>
    <updated>2014-04-22T07:58:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/22/git-gossip-3</id>
    <content type="html"><![CDATA[<p>这次来说说有关 <code>no branch</code> 的那些事。</p>

<p>其实之前在<a href="http://markzhang.cn/blog/2014/04/04/git-gossip-1/">Git都在说些啥（一）</a>中已经提过一些有关 <code>no branch</code> 的东西。这次再来看看其他两段git的提示信息，都是与 <code>no branch</code> 有关的。</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Marks-RMBP:~/Graphics/OpenGL-ProgrammingGuide<span class="nv">$ </span>git ck origin/master
</span><span class='line'>Note: checking out <span class="s1">&#39;origin/master&#39;</span>.
</span><span class='line'>
</span><span class='line'>You are in <span class="s1">&#39;detached HEAD&#39;</span> state. You can look around, make experimental
</span><span class='line'>changes and commit them, and you can discard any commits you make in this
</span><span class='line'>state without impacting any branches by performing another checkout.
</span><span class='line'>
</span><span class='line'>If you want to create a new branch to retain commits you create, you may
</span><span class='line'><span class="k">do </span>so <span class="o">(</span>now or later<span class="o">)</span> by using -b with the checkout <span class="nb">command </span>again. Example:
</span><span class='line'>
</span><span class='line'>  git checkout -b new_branch_name
</span><span class='line'>
</span><span class='line'>HEAD is now at 82b25d9b1856... HelloGL: Add missing shader files
</span><span class='line'>Marks-RMBP:~/Graphics/OpenGL-ProgrammingGuide<span class="nv">$ </span>git b
</span><span class='line'>* <span class="o">(</span>no branch<span class="o">)</span>
</span><span class='line'>  master
</span><span class='line'>  tmp
</span><span class='line'>Marks-RMBP:~/Graphics/OpenGL-ProgrammingGuide<span class="nv">$ </span>git pull
</span><span class='line'>You are not currently on a branch, so I cannot use any
</span><span class='line'><span class="s1">&#39;branch.&lt;branchname&gt;.merge&#39;</span> in your configuration file.
</span><span class='line'>Please specify which remote branch you want to use on the <span class="nb">command</span>
</span><span class='line'>line and try again <span class="o">(</span>e.g. <span class="s1">&#39;git pull &lt;repository&gt; &lt;refspec&gt;&#39;</span><span class="o">)</span>.
</span><span class='line'>See git-pull<span class="o">(</span>1<span class="o">)</span> <span class="k">for </span>details.
</span></code></pre></td></tr></table></div></figure>


<p>第一段信息来自命令 <code>git checkout origin/master</code>。Git的这段唠叨意思就是，哥们你checkout了一个版本，但是没有指定branch的名字，所以哥现在给你创建了一个特殊的branch，名字叫 <code>no branch</code>。这个branch特殊在哪呢，就是你可以在这个branch上工作，可以提交commit，但是将来你一旦离开了这个branch，比如你checkout到其他的branch上去了，那么你就再也回不来了哈。你做的那些commit就找不到了哈。所以哥们现在强烈建议你，以后checkout branch使用 <code>git checkout -b new_branch_name</code>。</p>

<p><strong> 注：</strong> 之前在<a href="http://markzhang.cn/blog/2014/04/04/git-gossip-1/">Git都在说些啥（一）</a>提到过了，使用 <code>git reflog</code> 可以找回你在 <code>no branch</code> 上提交过的commit。前提是git还帮你留着这些commits。</p>

<p>第二段提示信息来自执行 <code>git pull</code> 的时候，之前在<a href="http://markzhang.cn/blog/2014/04/21/git-gossip-2/">Git都在说些啥（二）</a>中已经详细说了 <code>git pull</code> 会出现的这种错误信息。所以，这里想说的是，只要你工作在 <code>no branch</code> 上，那么执行 <code>git pull</code> 的时候，就必须写全了，比如：<code>git pull origin master</code>，这样git才知道怎么去做merge。</p>

<p>说到这里，你可能会问，为什么git要搞这么一个莫名其貌，麻烦无比的 <code>no branch</code> 出来？其实 <code>no branch</code> 是有一些适用的场景的。<code>no branch</code> 相当于是一种临时branch，建立这个branch的唯一原因就是将来我们肯定会放弃掉这个branch，所以在做比如 <code>git rebase</code> 的时候，<code>no branch</code> 就很make sense了。因为我们知道 <code>git rebase</code> 的时候，git需要根据你的指令，将commits重新做排列、修正、squash等等，此时，git就会以第一个需要rebase的commit之前的那个commit为base，checkout到一个 <code>no branch</code> 上去，rebase做完之后，再最终将 <code>no branch</code> 覆盖掉你执行 <code>git rebase</code> 时的branch。所以，在这种场景下，使用 <code>no branch</code> 就比使用一个有名字的branch更加的make sense。</p>

<p>还有一种场景你肯定熟悉，就是使用repo的时候。repo是Google做的一个Python脚本程序，用于管理多个git仓库。你会发现，经常你做完 <code>repo sync</code> 之后，来到其中任意一个git仓库（或者叫git project吧，repo中是称为project的），执行一下 <code>git branch</code>，你会发现你都处在 <code>no branch</code> 上。我的感觉是，repo针对每一个git project，是可以定义 <code>revision</code> 的（在.repo/manifest.xml中可以定义所有的git project，其中就可以针对每个project定义revision）。而这个revision，就是一个git commit的HASH，所以在这种场景下，repo在 <code>git fetch</code> 取得了该project远端的所有更新之后，如何将你本地的文件更新到你指定的revision上？肯定是执行 <code>git checkout &lt;commit hash&gt;</code> 这样的命令了，那么这个时候自然 <code>no branch</code> 就产生了。当然repo也可以很二的约定一个俗气无比的branch名字，比如 <code>git checkout -b this_really_sucks &lt;commit hash&gt;</code>？</p>

<p>其实 <code>no branch</code> 本身没啥，只是由于相比其他的branch，<code>no branch</code> 有一些特殊的地方，所以在 <code>no branch</code> 上工作是，你就经常会收到git的一些抱怨，习惯了就好。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git都在说些啥（二）]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/21/git-gossip-2/"/>
    <updated>2014-04-21T21:33:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/21/git-gossip-2</id>
    <content type="html"><![CDATA[<p>这一次我们来说说 <code>git pull</code> 的时候经常会碰到的一段信息。</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Marks-RMBP:~/Graphics/OpenGL-ProgrammingGuide<span class="nv">$ </span>git pull
</span><span class='line'>You asked me to pull without telling me which branch you
</span><span class='line'>want to merge with, and <span class="s1">&#39;branch.tmp.merge&#39;</span> in
</span><span class='line'>your configuration file does not tell me, either. Please
</span><span class='line'>specify which branch you want to use on the <span class="nb">command </span>line and
</span><span class='line'>try again <span class="o">(</span>e.g. <span class="s1">&#39;git pull &lt;repository&gt; &lt;refspec&gt;&#39;</span><span class="o">)</span>.
</span><span class='line'>
</span><span class='line'>See git-pull<span class="o">(</span>1<span class="o">)</span> <span class="k">for </span>details.
</span><span class='line'>
</span><span class='line'>If you often merge with the same branch, you may want to
</span><span class='line'>use something like the following in your configuration file:
</span><span class='line'>
</span><span class='line'>    <span class="o">[</span>branch <span class="s2">&quot;tmp&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="nv">remote</span> <span class="o">=</span> &lt;nickname&gt;
</span><span class='line'>    <span class="nv">merge</span> <span class="o">=</span> &lt;remote-ref&gt;
</span><span class='line'>
</span><span class='line'>    <span class="o">[</span>remote <span class="s2">&quot;&lt;nickname&gt;&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="nv">url</span> <span class="o">=</span> &lt;url&gt;
</span><span class='line'>    <span class="nv">fetch</span> <span class="o">=</span> &lt;refspec&gt;
</span><span class='line'>
</span><span class='line'>See git-config<span class="o">(</span>1<span class="o">)</span> <span class="k">for </span>details.
</span></code></pre></td></tr></table></div></figure>


<p>首先来看一下怎么操作，git就会唠叨上面一段话（假设我们现在在一个git repository的根目录，目前位于master branch）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch tmp
</span><span class='line'>git checkout tmp
</span><span class='line'>git pull
</span></code></pre></td></tr></table></div></figure>


<p>上面的三个命令很简单，首先就是基于当前的branch，创建一个新的branch叫 <code>tmp</code>，然后checkout到这个branch，最后执行 <code>git pull</code>。那为什么最后执行 <code>git pull</code> 的时候就会出现上面那一大段信息呢？</p>

<p>其实很简单。我们都知道，<code>git pull</code> 是做两件事情：首先做 <code>git fetch</code>，也就是将远端仓库中的所有改动都取回来；然后就是做 <code>git merge</code>，也就是将远端仓库的某个branch和我们当前本地所在的branch做一次merge。</p>

<p>所以，当 <code>git pull</code> 做第二件事情，也就是 <code>git merge</code> 的时候，它需要知道将本地的当前所在的这个branch和远端的哪个branch进行merge。当git不知道需要和远端的哪个branch进行merge时，就会出现上述的错误信息了。</p>

<p>解决办法有两个：</p>

<ul>
<li><p>写全 <code>git pull</code> 命令，比如 <code>git pull origin master</code>。这样git就知道跟 <code>origin</code> 这个remote git仓库的master branch进行merge。</p></li>
<li><p>使用 <code>git checkout -b &lt;branch name&gt; &lt;remote refs&gt;</code> 来创建branch，比如 <code>git checkout -b tmp origin/master</code>。这里我们在checkout的时候，明确指定了checkout名为origin的remote git仓库中的master branch，所以将来我们在这个tmp branch上进行 <code>git pull</code> 的时候，git自然就知道去和哪个远端的branch merge了。</p></li>
</ul>


<p><strong> NOTE：</strong> 事实上，<code>git branch</code> / <code>git checkout</code>，也可以使用 <code>-t</code> 这个参数来明确指定新的本地branch需要”track“哪个branch。</p>

<p>最后提一下，一开头git的那段出错信息中提到的一些所谓的配置项：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>If you often merge with the same branch, you may want to
</span><span class='line'>use something like the following in your configuration file:
</span><span class='line'>
</span><span class='line'>    <span class="o">[</span>branch <span class="s2">&quot;tmp&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="nv">remote</span> <span class="o">=</span> &lt;nickname&gt;
</span><span class='line'>    <span class="nv">merge</span> <span class="o">=</span> &lt;remote-ref&gt;
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>其实，这段信息的意思就是，git无法在你的git仓库的根目录下的 <code>.git/config</code> 中找到tmp这个branch的merge信息，也没有在你的全局git配置：<code>$HOME/.gitconfig</code> 中找到。</p>

<p>而对于一个没有上述问题的branch，比如在本文所举的例子中，master branch，在 <code>.git/config</code> 中就有这样的设置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>branch <span class="s2">&quot;master&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="nv">remote</span> <span class="o">=</span> origin
</span><span class='line'>  <span class="nv">merge</span> <span class="o">=</span> refs/heads/master
</span></code></pre></td></tr></table></div></figure>


<p>所以可以看到，其实git的逻辑很简单，只是我们需要确切的知道它究竟在干些啥，这样也就能理解它的抱怨了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[厦华LC-42T18电视机维修]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/15/prime-lc-42t18-fix/"/>
    <updated>2014-04-15T23:10:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/15/prime-lc-42t18-fix</id>
    <content type="html"><![CDATA[<p>家里客厅的电视是10年前买的厦华LC-42T18，几年前维修过一次，更换掉了整块主控板（也就是数字信号板）。但是上周电视再次罢工，如果让厦华再来维修，那又是大几百块，所以决定自己拆开来修修看。</p>

<p>之所以想自己维修，是因为故障现象跟上次差不多：</p>

<p>开机之后，红色电源指示灯亮，此时按电视上的POWER按键，电源指示灯能从红灯切换到蓝灯，但是没有图像没有声音。此时遥控和电视上的按键全部失灵，只能拔电源或者按电源总开关将电视关闭。</p>

<!-- more -->


<p>由于现象跟上次差不多，所以怀疑还是主控板出现了问题。首先就是使用万能的Google，发现这是该款电视的一个常见问题。网上包括淘宝上，有很多人可以维修。但是没有搜到该问题的原因以及如何维修。这也正常，能搜到人家就不用赚钱了。但是值得欣喜的是，搜到了该款电视的主控板的部分电路图：</p>

<p><a href="http://www.markzhang.cn/downloads/file/lc-42t18-schematic.pdf">厦华LC-42T18电路图</a></p>

<p>注：以上电路图下载自这里：<a href="http://www.dzbzw.com/zlxz/dltz/03042011/1954.html#ecms">http://www.dzbzw.com/zlxz/dltz/03042011/1954.html#ecms</a></p>

<p>所以，首先根据上图，用万用表量主控板是否有电源输入，发现输入的12v/5v均正常（上述电路图中是18v，这应该是不同批次的电视导致的）。再量几个稳压器，如N608/N603，都有输入输出电压，看起来一切正常。再由电路图可以看出，主控板上有一个主要的芯片N601/PW218-10，这颗芯片是power芯片，负责给板子上其他芯片供电，如果这颗芯片不能稳定工作，那么出现上述的现象就不奇怪了。用万用表量了一下主控板上其他主要芯片，都没有输入，所以可以确定就是这颗N601没有正常工作。</p>

<p>所以为什么这颗芯片没有正常工作呢？难道是给该芯片供电的几个稳压芯片有问题？再次Google，终于发现了这篇文章：</p>

<blockquote><p>失效原因分析：:
由于C641（贴片电解电容）周围存在发热量大的芯片如：PW118、N603（AMS1117）等，长时间使用后会造成C641（10V100u）容量变小，导致无法滤除N603（AMS1117）输出端的自激振荡,使得N603（AMS1117）的输出电压产生干扰脉冲，造成PW118停止工作，最终引起黑屏。为了防止C641（10V100u）漏液后引起短路，所以将其拆除，并在N603（AMS1117）的输出端并联上容量较大的电解电容替代。把改机的电解电容放置在下图中的所示的位置，使其远离发热源防止再次损坏。</p>

<p>更改步骤
拆除电容C641（10V100u）
取25V/220u电容一只，电容的负极接N603的第1脚（即左边第1脚，N603的接地脚），电容的正极接N603的第2脚（即中间脚，N603输出脚），最后给新加上的25V/220u电容点热熔胶固定。</p>

<p>厦华LC-37T25彩电黑屏，开机指示灯由红灯转成蓝灯，屏一直不亮
电源板强制开机各电压正常，24V带负载正常。可能是CPU板上N603（AMS1117—18）IC或N701（MX29LV800）FLASHIC虚焊引起。打开CPU板铁皮发现LED1微亮不闪烁，测N603（AMS1117）的输出电压为1.85V（正常1.8V）。补焊N701后开机正常，后按公司更改方案加10欧/2W电阻和换C641，上电故障排除。试机几天后，热机有时黑屏，一般为N603过热不良引起，在N603上加焊半封装IC做散热片（如K3116）。之后有2个多月了用户再也没有反映问题了。　　小结：由于N603温度过高，导致内部参数变化引起输出电压变高。因N603靠电路板来散热，散热不良，增加散热，使IC能够恒定在一个温度上，正常工作。</p></blockquote>

<p>注：上面的内容来自：<a href="http://www.jdwxs.com/xh/201303/00066725.html">http://www.jdwxs.com/xh/201303/00066725.html</a></p>

<p>上面说的比较乱，总结一下就是：</p>

<ul>
<li><p>上面的内容针对的是37寸的一款厦华电视，所以上面提到的PW118，就是我们这里的PW218。</p></li>
<li><p>有一种故障现象是开机后过一段时间，电视就能正常工作，这是因为N603的旁路电容C641出现了问题导致。而C641会出现问题是因为其周边存在发热量大的芯片。像N603这种稳压器，就是一个MOS管，或者可以理解成一个可变电阻，输入3.3v，输出1.0v，自然在它上面就有压降，导致发热；而PW218发热就更加容易理解。所以，要等到N603输出稳定了，PW218才能开始工作。</p></li>
<li><p>至于我遇到的现象，上面的内容也提到了，可能是由于N603/N701虚焊或不良导致。</p></li>
</ul>


<p>所以简单说来，问题就出在N603/C641它们身上，先对它们开刀。</p>

<p>首先是C641，发现我手上的这块主控板已经按照上文的描述，做过了修改。C641已经没有了，而N603的两个脚上被手工焊上了一个电解电容：</p>

<p><a href="http://www.markzhang.cn/downloads/image/lc-42t18-mb.jpg"><img src="http://www.markzhang.cn/downloads/image/lc-42t18-mb.jpg" alt="C641被一个电解电容替代" /></a></p>

<p>嗯。。想来是上次几年前厦华来给我更换的这款主控板，他们已经做了技改。解决了C641受热不良的问题。Cool。</p>

<p>所以问题就是N603了，想更换掉它但是我手上没有配件啊。。。仔细查看了电路板，发现有一个N405，跟N603应该是一样的一个稳压器，N405应该是用于VGA接口的，一般不用，所以我可以将它们两个调换一下。</p>

<p>用电烙铁将它们两个焊下来调换，为了保险再给N603加一个稳压管上去，全部搞定开机，哈哈，电视开始工作了！</p>

<p>所以现在回头想想，修电视跟修电脑也差不多，基本上就是首先找到几个怀疑对象，然后替换法来试验。唯一麻烦一点的就是，电脑是一个一个模块的换，而电路板可能就是一个芯片、一个电容、一个电阻这样的替换测试，相对来说麻烦许多。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux设备驱动suspend/resume的顺序]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/09/linux-driver-suspend-orders/"/>
    <updated>2014-04-09T16:07:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/09/linux-driver-suspend-orders</id>
    <content type="html"><![CDATA[<p>Linux在进入suspend的时候，会首先freeze userspace，然后挨个去调用设备驱动程序的suspend，最后调用architecture dependent的callback（非常奔放的描述了，其实有大量的细节问题存在）。Resume就是反过来执行一遍，最后重新enable userspace。那么作为设备驱动程序的编写者来说，主要就是要实现本驱动的suspend/resume逻辑。但是事实上，很多设备之间是有依赖性的，比如在ARM上，很多设备在resume之前，要求 <code>IOMMU</code> 要已经被enable，否则硬件上就会出现问题，因为访问的地址不对了。</p>

<p>那么Linux是如何设计/定义各个设备驱动之间的suspend/resume的顺序的呢？</p>

<!-- more -->


<p>简单来说，就是以下几条逻辑：</p>

<ul>
<li><p>各设备驱动程序按照其对应的设备（device）注册的先后次序，来决定其suspend/resume的顺序。注意是该驱动对应的设备的注册顺序，不是驱动注册的顺序，所以和驱动的注册优先级无关（也就是和module_init, rootfs_init, subsys_initcall这些无关）。越早被注册的设备，其对应的驱动的suspend越晚被调用，其对应驱动的resume越早被调用；越晚被注册的设备，其对应的驱动的suspend越早被调用，其对应的驱动的resume越晚被调用。</p></li>
<li><p>上面所说的逻辑往往不能满足我们的要求，因为现在的设备（device）都通过DT（Device Tree）的方式进行注册。那么，在DTS文件中，出现的越早的设备就越早被注册（可以参考函数 <code>of_platform_populate</code>）。而按照现在upstream linux kernel的约定，设备在DTS文件中，是按照其寄存器的地址，从低到高排序的，所以自然不可能满足我们的需求。</p></li>
</ul>


<p>那要怎么办？答案是驱动程序执行probe的时候返回 <code>-EPROBE_DEFER</code> 。</p>

<p>对于现在ARM SoC上的设备和其驱动程序来说，Linux kernel都使用Platform device/Platform driver来描述他们。而Platform driver的probe函数就相当于是驱动的初始化函数，一般用来映射寄存器，分配必需的内存等等，看一个驱动程序的代码，一般也可以从Probe开始看起。</p>

<p>Probe函数返回 <code>-EPROBE_DEFER</code>，指的是当一个设备驱动程序检测到其依赖的设备的驱动程序还没有ready的时候，返回这个出错码告诉kernel driver framework，我需要延缓自身的probe。还是举上面那个IOMMU的例子，如果一个设备依赖IOMMU，那么该设备的驱动在probe的时候，就应该检测iommu的驱动是否已经ready，如果没有那就要defer自己的probe。在Linux kernel driver framework中，收到驱动probe返回 <code>-EPROBE_DEFER</code>，就会将该驱动放入一个list中，一个workqueue来负责遍历这个list，从而再次执行这些驱动的probe函数（事实上，由于kernel driver framework不知道驱动互相之间的依赖关系，所以一旦有一个驱动成功probe了，kernel都会触发这个workqueue，让其去遍历一遍list）。</p>

<p>上面说的是 <code>-EPROBE_DEFER</code> 的背景故事了，而事实上，当一个驱动的probe返回过 <code>-EPROBE_DEFER</code> ，而最终成功probe之后，kernel就会修改该驱动的suspend/resume的顺序了。这就是为什么驱动probe的时候返回 <code>-EPROBE_DEFER</code> 能影响其suspend/resume的次序的原因了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Force the device to the end of the dpm_list since</span>
</span><span class='line'><span class="cm"> * the PM code assumes that the order we add things to</span>
</span><span class='line'><span class="cm"> * the list is a good order for suspend but deferred</span>
</span><span class='line'><span class="cm"> * probe makes that very unsafe.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">device_pm_lock</span><span class="p">();</span>
</span><span class='line'><span class="n">device_pm_move_last</span><span class="p">(</span><span class="n">dev</span><span class="p">);</span>
</span><span class='line'><span class="n">device_pm_unlock</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的代码来自函数：<code>deferred_probe_work_func</code>，也就是上面所说的defer probe的workqueue的工作函数。所以这里可以看到，当一个驱动最终在probe defer的work函数中probe成功之后，kernel会修改该驱动对应的设备（device）在 <code>dpm_list</code> 中的位置，而 <code>dpm_list</code> 正是kernel suspend/resume 驱动时候遍历的链表。看到调用了函数：<code>device_pm_move_last(dev);</code> 没？这个设备被移到了 <code>dpm_list</code> 的末尾。</p>

<ul>
<li>事情到此为止，可以说已经有了解决方案：我们可以使用 DEFER PROBE 的方式来调整驱动 suspend/resume 的顺序。不过这里要提一下，还有一条路也是可行的，那就是利用 <code>syscore suspend/resume</code>。</li>
</ul>


<p>syscore是Linux kernel定义的一个framework，我们可以将我们的驱动注册到syscore中去。syscore比较关键的就是 <code>syscore_ops</code> 这个结构：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">struct</span> <span class="n">syscore_ops</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">list_head</span> <span class="n">node</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">suspend</span><span class="p">)(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>  <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">resume</span><span class="p">)(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>  <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">shutdown</span><span class="p">)(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到只有 suspend/resume/shutdown 这三个ops，所以看到这里大概也可以猜到了，注册到syscore中的驱动，其suspend函数是在所有其他驱动的suspend都调用过之后调用的，而其resume函数是在所有其他驱动的resume调用之前调用的。简单来说，syscore的驱动，suspend被晚调用保证其他驱动suspend的时候，syscore的驱动还活着；syscore的驱动，resume被很早调用，从而保证其他驱动resume的时候，syscore的驱动已经活着了。好绕。。。</p>

<p>要将驱动注册到syscore中很简单，调用函数：<code>register_syscore_ops(&amp;your_driver_syscore_ops);</code> 就可以了。至于上面说到的syscore的suspend/resume的顺序，实现代码在这里：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">error</span> <span class="o">=</span> <span class="n">syscore_suspend</span><span class="p">();</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">*</span><span class="n">wakeup</span> <span class="o">=</span> <span class="n">pm_wakeup_pending</span><span class="p">();</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">suspend_test</span><span class="p">(</span><span class="n">TEST_CORE</span><span class="p">)</span> <span class="o">||</span> <span class="o">*</span><span class="n">wakeup</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">error</span> <span class="o">=</span> <span class="n">suspend_ops</span><span class="o">-&gt;</span><span class="n">enter</span><span class="p">(</span><span class="n">state</span><span class="p">);</span>
</span><span class='line'>      <span class="n">events_check_enabled</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">syscore_resume</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上代码来自函数：<code>suspend_enter</code>。可以看到当syscore_suspend被调用之后，就调用architecture dependent的 <code>suspend_ops-&gt;enter</code> 了，到这里整个系统就已经停下来了，进入suspend状态了。而当resume开始，<code>suspend_ops-&gt;enter</code> 返回之后，第一个被调用的就是 <code>syscore_resume</code>，所以上面那一段听起来好绕的逻辑就这么区区几行代码解释了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一站式密码管理器 - LastPass]]></title>
    <link href="http://www.markzhang.cn/blog/2014/04/08/lastpass/"/>
    <updated>2014-04-08T19:56:00+08:00</updated>
    <id>http://www.markzhang.cn/blog/2014/04/08/lastpass</id>
    <content type="html"><![CDATA[<p>我个人感觉，密码是相当反人类的设计。当你刚接触互联网的时候，可能感觉不到，甚至感觉理所当然，银行卡也需要设置密码呢。但是当访问的网站越来越多，各个站点论坛都需要注册用户、设置密码，多了之后密码就会变成非常痛苦的一种体验。</p>

<!-- more -->


<p>其实人自身就有很多唯一（Unique）的存在，密码不应该有存在的理由。之前我看过一个BBC的纪录片，为此还写过一篇博文：</p>

<p><a href="http://markzhang.cn/blog/2013/12/17/defeating-the-hackers/">密码之外的新的安全认证手段</a></p>

<p>之所以现在密码还被大量使用，可能现在技术还没有成熟、成本还没有降低到能普及的程度吧。</p>

<p>所以现在也涌现出了很多“密码管理”类的网站和应用，LastPass就是其中之一。我简单使用了一下，感觉还是挺方便的。</p>

<p>首先就是去<a href="http://www.lastpass.com">http://www.lastpass.com</a>注册一个账号了，不好意思，这里你又需要设置一个密码了。好在的是，设置了这个密码之后，以后的所有密码都不需要再记忆了，LastPass会帮你管理。所以，反过来说，一旦你的LastPass的密码被泄露的话，那后果就不堪设想了，所以为了安全起见，一些涉及到钱财类的密码还是单独设置吧，别依赖LastPass了。。。比如支付宝。:)</p>

<p>然后就是在LastPass的主页上，点击“下载”，就会下载一个针对你的浏览器的插件。我使用的是Chrome，所以一个Chrome插件就自动下载并安装了。安装完成之后，点击工具栏上出现的 <code>*</code> 字图标，输入你的LastPass的账号和密码，一切就已经就绪了。</p>

<p>LastPass有许多功能，比如表单的自动填写、Profile的设定等，但是我只使用了它的一个功能：自动生成密码。LastPass自动生成密码可以选择密码长度，默认是12个字符，也可以选择字符种类，比如包不包含特殊字符（默认不包含，因为有一些网站只接受字母和数字作为密码）等。</p>

<p>所以接下来我就先登录了一个我常去的网站，进入到账户设定，修改密码的页面，在新密码设定的输入框中，点击LastPass，选择自动生成密码，LastPass就会生成一个12个字符的密码并自动填充到密码框中，并且该密码自动保存在了你的LastPass的账户里面：</p>

<p><img src="http://www.markzhang.cn/downloads/image/lastpass-saved-passwd.png" alt="LastPass自动生成并保存的密码" /></p>

<p>上图显示的就是我新生成的淘宝的密码，这里面URL这一项很重要，LastPass会根据URL中的 <code>domain name</code> ，来检测你当前访问的网站是否在LastPass中有对应的密码记录。举上面的例子来说，URL是 <code>http://110.taobao.com/...</code>，所以下次只要你访问 <code>xxx.taobao.com/xxxx</code> 这样的网址，在网页中所有的密码输入框中都会出现一个 <code>*</code> 字图标，并且有一个下标1，表示该网站LastPass中有一个匹配的密码记录，只要点击这个 <code>*</code> 字图标，密码就自动填到密码框中了，很方便：</p>

<p><img src="http://www.markzhang.cn/downloads/image/lastpass-autofill.png" alt="LastPass自动填充密码" /></p>

<p>那有的时候，有些网站，比如淘宝，支付宝，网银等，密码输入都是有控件的，所以LastPass没法自动在密码框里面插入那个 <code>*</code> 字图标，这个时候怎么办？这也没有问题，只是稍微麻烦一点。以我使用Chrome浏览器，还是访问淘宝来举例，只需要去点击工具栏上那个LastPass的图标（这个图标也有一个1字的下标，表示该网站有一个对应的密码记录），选择 <code>Show matching sites</code> &ndash;> <code>Generated password for taobao.com</code> &ndash;> <code>Copy password</code>，然后再到密码输入框里面去粘贴就好了。如果很不幸你的网站的密码输入框不允许粘贴，那你只能手动去LastPass的密码保存页面，找到那个密码，然后手动输入了。。。</p>

<p>最后说一个我觉得是必须要设置的地方，就是 <code>Equivalent Domains</code>。要设置这个东西的原因在于，很多网站密码设置、修改不在一个domain上。比如126邮箱，使用的时候，我们登录的是www.126.com，但是修改密码的时候，是跳转到网易通行证的网站，也就是163.com；再比如139邮箱，登录的是139.com，但网页会自动跳转到10086.cn，又或者是cmpassport.com；淘宝也是，taobao.com/alipay.com/zhifubao.com这三个域名很多时候都是关联的，其实需要的都是相同的用户名和密码。上面提到，LastPass是根据 <code>domain name</code>，也就是域名来检测你当前访问的网页是否有匹配的密码记录的，所以如果你保存密码的时候，密码对应的域名是taobao.com，但是你现在访问某个alipay.com的网页，也需要这个密码，这个时候如果你不设置 <code>Equivalent Domains</code>的话，LastPass就不会自动提示密码了。</p>

<p>所以，点击工具栏上LastPass的图标，选择 <code>My LastPass Vault</code> &ndash;> <code>Settings</code> &ndash;> <code>Equivalent Domains</code>标签页，在里面新增一个记录，比如这样：</p>

<p><code>taobao.com, alipay.com</code></p>

<p><img src="http://www.markzhang.cn/downloads/image/lastpass-equivalent-domains.png" alt="LastPass Equivalent Domains" /></p>

<p>保存之后，下次你访问某个alipay.com的页面，LastPass就会提示你淘宝的密码了。当然这里只是举例，如果你的淘宝账户和alipay的账户是分开的，那自然就不需要这样设置。</p>

<p>最后，给你的LastPass的账户设置一个强密码，然后祈祷LastPass不会被墙，LastPass的密码数据库不会被盗吧！还有就是，真正涉及到钱的网站，比如支付宝、网银等，还是不要使用LastPass来管理密码吧，虽然记忆N个密码实在麻烦，但是麻烦总好过丢钱吧。。。</p>
]]></content>
  </entry>
  
</feed>
