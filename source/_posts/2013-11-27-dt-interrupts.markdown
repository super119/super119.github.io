---
layout: post
title: "Device tree: interrupts的解释"
date: 2013-11-27 20:41
comments: true
categories: linux-kernel
---

Linux kernel现在使用Device tree（DT）来描述硬件设备。既然是描述硬件设备，那自然就需要对硬件充分了解才能理解DT。Interrupts就是一个例子。

一般来说，DT中的 `interrupts` （本文不描述interrupt controller）看起来是这样的：

``` c
pmu {
        compatible = "arm,cortex-a9-pmu";
        interrupts = <0 144 0x04
                      0 145 0x04
                      0 146 0x04
                      0 147 0x04>;
};
```

<!-- more -->

可以看到 `interrupts` 有三个member，对于这三个member，Linux kernel的文档是这样说的：

```
The 1st cell is the interrupt type; 0 for SPI interrupts, 1 for PPI
interrupts.

The 2nd cell contains the interrupt number for the interrupt type.
SPI interrupts are in the range [0-987].  PPI interrupts are in the
range [0-15].

The 3rd cell is the flags, encoded as follows:
	bits[3:0] trigger type and level flags.
		1 = low-to-high edge triggered
		2 = high-to-low edge triggered
		4 = active high level-sensitive
		8 = active low level-sensitive
	bits[15:8] PPI interrupt cpu mask.  Each bit corresponds to each of
	the 8 possible cpus attached to the GIC.  A bit set to '1' indicated
	the interrupt is wired to that CPU.  Only valid for PPI interrupts.
```

*来自：`Documentation/devicetree/bindings/arm/gic.txt`*

如果不了解ARM GIC的话，其实也看不懂上面的描述，所以这里解释一下：

1. 第一个member表示该 `interrupt` 是 `SPI` 还是 `PPI`。`SPI` 和 `PPI` 的解释如下，来自ARM的文档：

> Private Peripheral Interrupts
>
> A PPI is an interrupt generated by a peripheral that is specific to a single processor. There are seven PPIs for each CPU interface.

这是ARM A15的 `PPI` 的描述，如果是A9的话，每个CPU interface是5个 `PPI`。

> Shared Peripheral Interrupts
>
> An interrupt generated by a peripheral that the Interrupt Controller can route to any, or all, processor interfaces.
>
> SPIs are triggered by events generated on associated interrupt input lines. The GIC can support up to 224 SPIs corresponding to the external IRQS[223:0] signal. The number of SPIs available depends on the implemented configuration of the Cortex-A15 MPCore processor. The permitted values are 0, 32, 64, 96, 128, 160, 192, or 224. SPIs start at ID32. The SPIs can be configured to be edge-triggered or active-HIGH level-sensitive.

第一句话就可以看出和 `PPI` 的区别。`SPI` 的数量可以配置，如32，64...最大支持224，而且SPI的编号从32开始。至于最后提到的 `edge-triggered`，`active-HIGH level-sensitive` 正好就是 `interrupts` 第三个member。

所以，在一颗SoC中，绝大部分的中断都是 `SPI`。

事实上，ARM还有一种中断：`SGI`，也就是软中断：

> Software Generated Interrupt (SGI)
>
> Generated by writing to the Software Generated Interrupt Register (ICDSGIR).
>
> A maximum of 16 SGIs can be generated for each Cortex-A9 processor interface.

但是Device tree是用来描述硬件设备的，所以Linux kernel中 `interrupts` 的类型没有定义 `SGI`。

2. 第二个member就是具体的中断号了。查阅SoC的手册就可以得到。

3. 第三个member指的是中断的触发方式，每个SoC是不同的，查阅SoC的手册就可以知道了。这里kernel的文档解释的还是比较清楚的，就是一个16bit的数，0-3, 8-15 bit分别做了定义。
